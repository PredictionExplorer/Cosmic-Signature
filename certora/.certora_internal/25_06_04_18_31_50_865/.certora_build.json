{
    "CosmicSignatureGame_00000000ce4604a0000000000000000000000096": {
        "contracts": [
            {
                "address": "00000000ce4604a0000000000000000000000096",
                "allMethods": [
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "UPGRADE_INTERFACE_VERSION",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "sighash": "ad3cb1cc",
                        "sourceBytes": {
                            "begin": 1819,
                            "size": 58
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "_authorizeUpgrade",
                        "notpayable": true,
                        "originalFile": null,
                        "paramNames": [
                            "newImplementationAddress_"
                        ],
                        "returns": [],
                        "sighash": "0",
                        "sourceBytes": null,
                        "stateMutability": "view",
                        "visibility": "internal"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "_initialize",
                        "notpayable": true,
                        "originalFile": null,
                        "paramNames": [
                            "ownerAddress_"
                        ],
                        "returns": [],
                        "sighash": "0",
                        "sourceBytes": null,
                        "stateMutability": "nonpayable",
                        "visibility": "internal"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "bidMessageLengthMaxLimit",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "6c0613c0",
                        "sourceBytes": {
                            "begin": 10619,
                            "size": 39
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "bidWithCst",
                        "notpayable": true,
                        "originalFile": "contracts/production/Bidding.sol",
                        "paramNames": [
                            "priceMaxLimit_",
                            "message_"
                        ],
                        "returns": [],
                        "sighash": "683f5efa",
                        "sourceBytes": {
                            "begin": 13004,
                            "size": 171
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "IERC721",
                                    "type": "Contract"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "bidWithCstAndDonateNft",
                        "notpayable": true,
                        "originalFile": "contracts/production/Bidding.sol",
                        "paramNames": [
                            "priceMaxLimit_",
                            "message_",
                            "nftAddress_",
                            "nftId_"
                        ],
                        "returns": [],
                        "sighash": "3d5c1c49",
                        "sourceBytes": {
                            "begin": 12632,
                            "size": 291
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "IERC20",
                                    "type": "Contract"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "bidWithCstAndDonateToken",
                        "notpayable": true,
                        "originalFile": "contracts/production/Bidding.sol",
                        "paramNames": [
                            "priceMaxLimit_",
                            "message_",
                            "tokenAddress_",
                            "amount_"
                        ],
                        "returns": [],
                        "sighash": "408b78e1",
                        "sourceBytes": {
                            "begin": 12239,
                            "size": 300
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "int256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "bidWithEth",
                        "notpayable": false,
                        "originalFile": "contracts/production/Bidding.sol",
                        "paramNames": [
                            "randomWalkNftId_",
                            "message_"
                        ],
                        "returns": [],
                        "sighash": "b63c4262",
                        "sourceBytes": {
                            "begin": 2570,
                            "size": 182
                        },
                        "stateMutability": "payable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "int256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "IERC721",
                                    "type": "Contract"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "bidWithEthAndDonateNft",
                        "notpayable": false,
                        "originalFile": "contracts/production/Bidding.sol",
                        "paramNames": [
                            "randomWalkNftId_",
                            "message_",
                            "nftAddress_",
                            "nftId_"
                        ],
                        "returns": [],
                        "sighash": "fdc5108b",
                        "sourceBytes": {
                            "begin": 2155,
                            "size": 302
                        },
                        "stateMutability": "payable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "int256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "IERC20",
                                    "type": "Contract"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "bidWithEthAndDonateToken",
                        "notpayable": false,
                        "originalFile": "contracts/production/Bidding.sol",
                        "paramNames": [
                            "randomWalkNftId_",
                            "message_",
                            "tokenAddress_",
                            "amount_"
                        ],
                        "returns": [],
                        "sighash": "076e26e2",
                        "sourceBytes": {
                            "begin": 1719,
                            "size": 311
                        },
                        "stateMutability": "payable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "bidderAddresses",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "2fb3c48f",
                        "sourceBytes": {
                            "begin": 2567,
                            "size": 67
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "biddersInfo",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "17887731",
                        "sourceBytes": {
                            "begin": 2675,
                            "size": 92
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "charityAddress",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "afcf2fc4",
                        "sourceBytes": {
                            "begin": 16122,
                            "size": 29
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "charityEthDonationAmountPercentage",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "be720ad5",
                        "sourceBytes": {
                            "begin": 16277,
                            "size": 49
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "chronoWarriorAddress",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "6b7cbe85",
                        "sourceBytes": {
                            "begin": 3850,
                            "size": 35
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "chronoWarriorDuration",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "1824d5e7",
                        "sourceBytes": {
                            "begin": 4017,
                            "size": 36
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "chronoWarriorEthPrizeAmountPercentage",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "54ada1d6",
                        "sourceBytes": {
                            "begin": 11240,
                            "size": 52
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "claimMainPrize",
                        "notpayable": true,
                        "originalFile": "contracts/production/MainPrize.sol",
                        "paramNames": [],
                        "returns": [],
                        "sighash": "448c6eb1",
                        "sourceBytes": {
                            "begin": 4373,
                            "size": 1338
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "constructor",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGame.sol",
                        "paramNames": [],
                        "returns": [],
                        "sighash": "0",
                        "sourceBytes": {
                            "begin": 2113,
                            "size": 121
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "cosmicSignatureNftStakingTotalEthRewardAmountPercentage",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "f7bea078",
                        "sourceBytes": {
                            "begin": 12217,
                            "size": 70
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "cstDutchAuctionBeginningBidPrice",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "1b410319",
                        "sourceBytes": {
                            "begin": 9449,
                            "size": 47
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "cstDutchAuctionBeginningBidPriceMinLimit",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "bb4b3e6f",
                        "sourceBytes": {
                            "begin": 9778,
                            "size": 55
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "cstDutchAuctionBeginningTimeStamp",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "27700481",
                        "sourceBytes": {
                            "begin": 8733,
                            "size": 48
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "cstDutchAuctionDurationDivisor",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "084223cd",
                        "sourceBytes": {
                            "begin": 8944,
                            "size": 45
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "cstPrizeAmountMultiplier",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "2fe97db6",
                        "sourceBytes": {
                            "begin": 11072,
                            "size": 39
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "cstRewardAmountForBidding",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "612c9f84",
                        "sourceBytes": {
                            "begin": 10798,
                            "size": 40
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "delayDurationBeforeRoundActivation",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "b9cf9ba5",
                        "sourceBytes": {
                            "begin": 4906,
                            "size": 49
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "donateEth",
                        "notpayable": false,
                        "originalFile": "contracts/production/EthDonations.sol",
                        "paramNames": [],
                        "returns": [],
                        "sighash": "aadd1b03",
                        "sourceBytes": {
                            "begin": 439,
                            "size": 128
                        },
                        "stateMutability": "payable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "calldata",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "donateEthWithInfo",
                        "notpayable": false,
                        "originalFile": "contracts/production/EthDonations.sol",
                        "paramNames": [
                            "data_"
                        ],
                        "returns": [],
                        "sighash": "23b31cfc",
                        "sourceBytes": {
                            "begin": 570,
                            "size": 643
                        },
                        "stateMutability": "payable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "enduranceChampionAddress",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "9e50acc9",
                        "sourceBytes": {
                            "begin": 3276,
                            "size": 39
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "enduranceChampionDuration",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "5863a705",
                        "sourceBytes": {
                            "begin": 3541,
                            "size": 40
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "enduranceChampionStartTimeStamp",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "250fadb6",
                        "sourceBytes": {
                            "begin": 3451,
                            "size": 46
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "ethBidPriceIncreaseDivisor",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "a9742016",
                        "sourceBytes": {
                            "begin": 8442,
                            "size": 41
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "ethBidRefundAmountInGasMinLimit",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "95184d8f",
                        "sourceBytes": {
                            "begin": 8596,
                            "size": 46
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "ethDonationWithInfoRecords",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "sighash": "b5d1f06f",
                        "sourceBytes": {
                            "begin": 1640,
                            "size": 61
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "ethDutchAuctionBeginningBidPrice",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "c87baab5",
                        "sourceBytes": {
                            "begin": 6961,
                            "size": 47
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "ethDutchAuctionDurationDivisor",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "d1f8fcf2",
                        "sourceBytes": {
                            "begin": 6482,
                            "size": 45
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "ethDutchAuctionEndingBidPriceDivisor",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "ebaa1ea8",
                        "sourceBytes": {
                            "begin": 7987,
                            "size": 51
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getBidderAddressAt",
                        "notpayable": true,
                        "originalFile": "contracts/production/BidStatistics.sol",
                        "paramNames": [
                            "roundNum_",
                            "bidIndex_"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "000ac9f1",
                        "sourceBytes": {
                            "begin": 692,
                            "size": 208
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getBidderTotalSpentAmounts",
                        "notpayable": true,
                        "originalFile": "contracts/production/BidStatistics.sol",
                        "paramNames": [
                            "roundNum_",
                            "bidderAddress_"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "fd9b3747",
                        "sourceBytes": {
                            "begin": 960,
                            "size": 312
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getCharityEthDonationAmount",
                        "notpayable": true,
                        "originalFile": "contracts/production/MainPrize.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "0eb16be6",
                        "sourceBytes": {
                            "begin": 26835,
                            "size": 232
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getChronoWarriorEthPrizeAmount",
                        "notpayable": true,
                        "originalFile": "contracts/production/SecondaryPrizes.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "2665c882",
                        "sourceBytes": {
                            "begin": 406,
                            "size": 238
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getCosmicSignatureNftStakingTotalEthRewardAmount",
                        "notpayable": true,
                        "originalFile": "contracts/production/SecondaryPrizes.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "5f0112fe",
                        "sourceBytes": {
                            "begin": 1052,
                            "size": 274
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getCstDutchAuctionDurations",
                        "notpayable": true,
                        "originalFile": "contracts/production/Bidding.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "int256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "b700db5f",
                        "sourceBytes": {
                            "begin": 17312,
                            "size": 388
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getDurationElapsedSinceRoundActivation",
                        "notpayable": true,
                        "originalFile": "contracts/production/BiddingBase.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "int256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "040d4d31",
                        "sourceBytes": {
                            "begin": 2157,
                            "size": 318
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getDurationUntilMainPrize",
                        "notpayable": true,
                        "originalFile": "contracts/production/MainPrizeBase.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "int256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "36750d2c",
                        "sourceBytes": {
                            "begin": 768,
                            "size": 313
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getDurationUntilRoundActivation",
                        "notpayable": true,
                        "originalFile": "contracts/production/BiddingBase.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "int256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "ef22d15b",
                        "sourceBytes": {
                            "begin": 1862,
                            "size": 292
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getEthDutchAuctionDurations",
                        "notpayable": true,
                        "originalFile": "contracts/production/Bidding.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "int256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "fbaf5084",
                        "sourceBytes": {
                            "begin": 11398,
                            "size": 392
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getEthPlusRandomWalkNftBidPrice",
                        "notpayable": true,
                        "originalFile": "contracts/production/Bidding.sol",
                        "paramNames": [
                            "ethBidPrice_"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "27995f07",
                        "sourceBytes": {
                            "begin": 10470,
                            "size": 867
                        },
                        "stateMutability": "pure",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getInitialDurationUntilMainPrize",
                        "notpayable": true,
                        "originalFile": "contracts/production/MainPrizeBase.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "2b8dcbba",
                        "sourceBytes": {
                            "begin": 441,
                            "size": 324
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getMainEthPrizeAmount",
                        "notpayable": true,
                        "originalFile": "contracts/production/MainPrize.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "5b0a45d9",
                        "sourceBytes": {
                            "begin": 26554,
                            "size": 220
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getMainPrizeTimeIncrement",
                        "notpayable": true,
                        "originalFile": "contracts/production/MainPrizeBase.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "4f734612",
                        "sourceBytes": {
                            "begin": 1084,
                            "size": 374
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "int256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getNextCstBidPrice",
                        "notpayable": true,
                        "originalFile": "contracts/production/Bidding.sol",
                        "paramNames": [
                            "currentTimeOffset_"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "71162641",
                        "sourceBytes": {
                            "begin": 16424,
                            "size": 827
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "int256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getNextEthBidPrice",
                        "notpayable": true,
                        "originalFile": "contracts/production/Bidding.sol",
                        "paramNames": [
                            "currentTimeOffset_"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "265aafe2",
                        "sourceBytes": {
                            "begin": 8468,
                            "size": 1937
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getRaffleTotalEthPrizeAmountForBidders",
                        "notpayable": true,
                        "originalFile": "contracts/production/SecondaryPrizes.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "a35286d1",
                        "sourceBytes": {
                            "begin": 716,
                            "size": 254
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getTotalNumBids",
                        "notpayable": true,
                        "originalFile": "contracts/production/BidStatistics.sol",
                        "paramNames": [
                            "roundNum_"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "fd77310f",
                        "sourceBytes": {
                            "begin": 383,
                            "size": 257
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "initialDurationUntilMainPrizeDivisor",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "44a4b917",
                        "sourceBytes": {
                            "begin": 12402,
                            "size": 51
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "initialize",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGame.sol",
                        "paramNames": [
                            "ownerAddress_"
                        ],
                        "returns": [],
                        "sighash": "c4d66de8",
                        "sourceBytes": {
                            "begin": 2597,
                            "size": 193
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "lastBidderAddress",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "e5b3cd14",
                        "sourceBytes": {
                            "begin": 2099,
                            "size": 32
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "lastCstBidderAddress",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "ad4b0e8a",
                        "sourceBytes": {
                            "begin": 2257,
                            "size": 35
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "mainEthPrizeAmountPercentage",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "f444b298",
                        "sourceBytes": {
                            "begin": 13747,
                            "size": 43
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "mainPrizeTime",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "18305de2",
                        "sourceBytes": {
                            "begin": 12723,
                            "size": 28
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "mainPrizeTimeIncrementInMicroSeconds",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "eb13430e",
                        "sourceBytes": {
                            "begin": 13096,
                            "size": 51
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "mainPrizeTimeIncrementIncreaseDivisor",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "56732241",
                        "sourceBytes": {
                            "begin": 13255,
                            "size": 52
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "marketingWallet",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "75f0a874",
                        "sourceBytes": {
                            "begin": 14871,
                            "size": 30
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "marketingWalletCstContributionAmount",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "4164b95b",
                        "sourceBytes": {
                            "begin": 15471,
                            "size": 51
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "nextEthBidPrice",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "efeb248a",
                        "sourceBytes": {
                            "begin": 8336,
                            "size": 30
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "nextRoundFirstCstDutchAuctionBeginningBidPrice",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "c7e7a601",
                        "sourceBytes": {
                            "begin": 9609,
                            "size": 61
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "nft",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "CosmicSignatureNft",
                                    "type": "Contract"
                                }
                            }
                        ],
                        "sighash": "47ccca02",
                        "sourceBytes": {
                            "begin": 14274,
                            "size": 29
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "numEthDonationWithInfoRecords",
                        "notpayable": true,
                        "originalFile": "contracts/production/EthDonations.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "0b5f95ae",
                        "sourceBytes": {
                            "begin": 1216,
                            "size": 130
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "numRaffleCosmicSignatureNftsForBidders",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "4c2a4a33",
                        "sourceBytes": {
                            "begin": 11802,
                            "size": 53
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "numRaffleCosmicSignatureNftsForRandomWalkNftStakers",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "e2f9185f",
                        "sourceBytes": {
                            "begin": 12011,
                            "size": 66
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "numRaffleEthPrizesForBidders",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "f11400f0",
                        "sourceBytes": {
                            "begin": 11626,
                            "size": 43
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "owner",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "8da5cb5b",
                        "sourceBytes": {
                            "begin": 2441,
                            "size": 144
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "prevEnduranceChampionDuration",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "eaace302",
                        "sourceBytes": {
                            "begin": 3585,
                            "size": 44
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "prizesWallet",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "PrizesWallet",
                                    "type": "Contract"
                                }
                            }
                        ],
                        "sighash": "2afa2580",
                        "sourceBytes": {
                            "begin": 14389,
                            "size": 32
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "proxiableUUID",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bytes32",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "52d1902d",
                        "sourceBytes": {
                            "begin": 3708,
                            "size": 134
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "raffleTotalEthPrizeAmountForBiddersPercentage",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "477adf2a",
                        "sourceBytes": {
                            "begin": 11455,
                            "size": 60
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "randomWalkNft",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "RandomWalkNFT",
                                    "type": "Contract"
                                }
                            }
                        ],
                        "sighash": "755b4ef7",
                        "sourceBytes": {
                            "begin": 14099,
                            "size": 34
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "renounceOwnership",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
                        "paramNames": [],
                        "returns": [],
                        "sighash": "715018a6",
                        "sourceBytes": {
                            "begin": 3155,
                            "size": 101
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "roundActivationTime",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "6e970834",
                        "sourceBytes": {
                            "begin": 6372,
                            "size": 34
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "roundNum",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "119b22b3",
                        "sourceBytes": {
                            "begin": 4166,
                            "size": 23
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setBidMessageLengthMaxLimit",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "543f416f",
                        "sourceBytes": {
                            "begin": 2915,
                            "size": 200
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setCharityAddress",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "0c9be46d",
                        "sourceBytes": {
                            "begin": 10385,
                            "size": 213
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setCharityEthDonationAmountPercentage",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "2d829a2d",
                        "sourceBytes": {
                            "begin": 10601,
                            "size": 668
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setChronoWarriorEthPrizeAmountPercentage",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "1f1b4aa4",
                        "sourceBytes": {
                            "begin": 3527,
                            "size": 674
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "ICosmicSignatureNft",
                                    "type": "Contract"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setCosmicSignatureNft",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "44acc12a",
                        "sourceBytes": {
                            "begin": 8720,
                            "size": 267
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setCosmicSignatureNftStakingTotalEthRewardAmountPercentage",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "4feb78b7",
                        "sourceBytes": {
                            "begin": 5641,
                            "size": 710
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "ICosmicSignatureToken",
                                    "type": "Contract"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setCosmicSignatureToken",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "9646d758",
                        "sourceBytes": {
                            "begin": 8180,
                            "size": 277
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setCstDutchAuctionBeginningBidPriceMinLimit",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "88ce802c",
                        "sourceBytes": {
                            "begin": 2664,
                            "size": 248
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setCstDutchAuctionDurationDivisor",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "23eb90e8",
                        "sourceBytes": {
                            "begin": 2443,
                            "size": 218
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setCstPrizeAmountMultiplier",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "9c37b7ca",
                        "sourceBytes": {
                            "begin": 3324,
                            "size": 200
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setCstRewardAmountForBidding",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "7a32ccba",
                        "sourceBytes": {
                            "begin": 3118,
                            "size": 203
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setDelayDurationBeforeRoundActivation",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "09794bee",
                        "sourceBytes": {
                            "begin": 1136,
                            "size": 234
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setEthBidPriceIncreaseDivisor",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "f49efe9d",
                        "sourceBytes": {
                            "begin": 2010,
                            "size": 206
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setEthBidRefundAmountInGasMinLimit",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "0587aedc",
                        "sourceBytes": {
                            "begin": 2219,
                            "size": 221
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setEthDutchAuctionDurationDivisor",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "f34d411c",
                        "sourceBytes": {
                            "begin": 1550,
                            "size": 218
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setEthDutchAuctionEndingBidPriceDivisor",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "ddd6df07",
                        "sourceBytes": {
                            "begin": 1771,
                            "size": 236
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setInitialDurationUntilMainPrizeDivisor",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "77fa1027",
                        "sourceBytes": {
                            "begin": 6354,
                            "size": 236
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setMainEthPrizeAmountPercentage",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "6b59acb8",
                        "sourceBytes": {
                            "begin": 7298,
                            "size": 879
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setMainPrizeTimeIncrementInMicroSeconds",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "a4be0d40",
                        "sourceBytes": {
                            "begin": 6593,
                            "size": 236
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setMainPrizeTimeIncrementIncreaseDivisor",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "cfb4e599",
                        "sourceBytes": {
                            "begin": 6832,
                            "size": 239
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setMarketingWallet",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "5d098b38",
                        "sourceBytes": {
                            "begin": 9920,
                            "size": 223
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setMarketingWalletCstContributionAmount",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "d9ab9eaa",
                        "sourceBytes": {
                            "begin": 10146,
                            "size": 236
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setNumRaffleCosmicSignatureNftsForBidders",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "1e9cbb7e",
                        "sourceBytes": {
                            "begin": 5112,
                            "size": 242
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setNumRaffleCosmicSignatureNftsForRandomWalkNftStakers",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "135f3d28",
                        "sourceBytes": {
                            "begin": 5357,
                            "size": 281
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setNumRaffleEthPrizesForBidders",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "2f894cd7",
                        "sourceBytes": {
                            "begin": 4897,
                            "size": 212
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "IPrizesWallet",
                                    "type": "Contract"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setPrizesWallet",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "6c17e3cc",
                        "sourceBytes": {
                            "begin": 8990,
                            "size": 252
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setRaffleTotalEthPrizeAmountForBiddersPercentage",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "fdfb9ba4",
                        "sourceBytes": {
                            "begin": 4204,
                            "size": 690
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "IRandomWalkNFT",
                                    "type": "Contract"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setRandomWalkNft",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "9edeaf8e",
                        "sourceBytes": {
                            "begin": 8460,
                            "size": 257
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setRoundActivationTime",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "2b91c7bb",
                        "sourceBytes": {
                            "begin": 1373,
                            "size": 174
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "IStakingWalletCosmicSignatureNft",
                                    "type": "Contract"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setStakingWalletCosmicSignatureNft",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "5a1e5bde",
                        "sourceBytes": {
                            "begin": 9570,
                            "size": 347
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "IStakingWalletRandomWalkNft",
                                    "type": "Contract"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setStakingWalletRandomWalkNft",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "b4f1b134",
                        "sourceBytes": {
                            "begin": 9245,
                            "size": 322
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setTimeoutDurationToClaimMainPrize",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "f0bdab7c",
                        "sourceBytes": {
                            "begin": 7074,
                            "size": 221
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "stakingWalletCosmicSignatureNft",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "StakingWalletCosmicSignatureNft",
                                    "type": "Contract"
                                }
                            }
                        ],
                        "sighash": "a922ab5d",
                        "sourceBytes": {
                            "begin": 14609,
                            "size": 70
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "stakingWalletRandomWalkNft",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "StakingWalletRandomWalkNft",
                                    "type": "Contract"
                                }
                            }
                        ],
                        "sighash": "2d809e88",
                        "sourceBytes": {
                            "begin": 14505,
                            "size": 60
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "timeoutDurationToClaimMainPrize",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "3b9d292e",
                        "sourceBytes": {
                            "begin": 13559,
                            "size": 46
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "token",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "CosmicSignatureToken",
                                    "type": "Contract"
                                }
                            }
                        ],
                        "sighash": "fc0c546a",
                        "sourceBytes": {
                            "begin": 13935,
                            "size": 33
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "transferOwnership",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
                        "paramNames": [
                            "newOwner"
                        ],
                        "returns": [],
                        "sighash": "f2fde38b",
                        "sourceBytes": {
                            "begin": 3405,
                            "size": 215
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "tryGetCurrentChampions",
                        "notpayable": true,
                        "originalFile": "contracts/production/BidStatistics.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "cb720d4d",
                        "sourceBytes": {
                            "begin": 4154,
                            "size": 2623
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "upgradeTo",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGame.sol",
                        "paramNames": [
                            "newImplementationAddress_"
                        ],
                        "returns": [],
                        "sighash": "3659cfe6",
                        "sourceBytes": {
                            "begin": 7127,
                            "size": 350
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "PackedBytes"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "upgradeToAndCall",
                        "notpayable": false,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
                        "paramNames": [
                            "newImplementation",
                            "data"
                        ],
                        "returns": [],
                        "sighash": "4f1ef286",
                        "sourceBytes": {
                            "begin": 4161,
                            "size": 214
                        },
                        "stateMutability": "payable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "usedRandomWalkNfts",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "ebb9bc5c",
                        "sourceBytes": {
                            "begin": 10094,
                            "size": 70
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    }
                ],
                "bytecode": "",
                "compilerName": "solc",
                "compilerParameters": {
                    "optimizerOn": false,
                    "optimizerRuns": null,
                    "type": "SolcParameters",
                    "viaIR": false
                },
                "compilerVersion": "0.8.30",
                "constructorBytecode": "",
                "constructorSrcmap": "1550:7628:57:-:0;;;1171:4:2;1128:48;;;;;;;;;2113:121:57;;;;;;;;;;2208:22;:20;;;:22;;:::i;:::-;1550:7628;;9264:798:1;9416:13;9348:66;9341:89;9506:1;9438:66;9431:77;9584:1;9516:66;9509:77;9653:30;9686:26;:24;;;:26;;:::i;:::-;9653:59;;9812:1;9745:66;9738:76;9829:1;:15;;;;;;;;;;;;9825:76;;;9867:23;;;;;;;;;;;;;;9825:76;9932:16;9914:34;;:1;:14;;;;;;;;;;;;:34;;;9910:146;;9981:16;9964:1;:14;;;:33;;;;;;;;;;;;;;;;;;10016:29;10028:16;10016:29;;;;;;:::i;:::-;;;;;;;;9910:146;9313:749;9264:798::o;11214:444::-;11272:30;11407:13;11339:66;11332:89;11497:1;11429:66;11422:77;11575:1;11507:66;11500:77;11621:21;11611:31;;11214:444;:::o;7:101:98:-;43:7;83:18;76:5;72:30;61:41;;7:101;;;:::o;114:115::-;199:23;216:5;199:23;:::i;:::-;194:3;187:36;114:115;;:::o;235:218::-;326:4;364:2;353:9;349:18;341:26;;377:69;443:1;432:9;428:17;419:6;377:69;:::i;:::-;235:218;;;;:::o;1550:7628:57:-;;;;;;;;;;;;;;;;;;;;;;;",
                "extensionContracts": [],
                "file": "contracts/production/CosmicSignatureGame.sol",
                "immutables": [
                    {
                        "length": 32,
                        "offset": 31541,
                        "type": {
                            "location": "stack",
                            "typeDesc": {
                                "primitiveName": "address",
                                "type": "Primitive"
                            }
                        },
                        "varname": "__self"
                    },
                    {
                        "length": 32,
                        "offset": 31626,
                        "type": {
                            "location": "stack",
                            "typeDesc": {
                                "primitiveName": "address",
                                "type": "Primitive"
                            }
                        },
                        "varname": "__self"
                    },
                    {
                        "length": 32,
                        "offset": 32314,
                        "type": {
                            "location": "stack",
                            "typeDesc": {
                                "primitiveName": "address",
                                "type": "Primitive"
                            }
                        },
                        "varname": "__self"
                    }
                ],
                "internalFunctionStarts": [
                    45060,
                    14341,
                    43035,
                    36892,
                    16415,
                    45094,
                    41003,
                    47149,
                    34862,
                    10288,
                    49213,
                    18501,
                    18508,
                    47183,
                    41046,
                    14423,
                    16472,
                    22617,
                    12376,
                    43102,
                    12383,
                    49247,
                    41055,
                    45164,
                    43119,
                    18546,
                    45176,
                    18553,
                    14461,
                    16510,
                    43134,
                    18560,
                    41088,
                    10370,
                    14468,
                    18567,
                    10377,
                    47241,
                    41105,
                    45204,
                    43159,
                    49305,
                    18589,
                    41122,
                    16548,
                    49327,
                    45231,
                    41137,
                    18610,
                    47286,
                    18617,
                    43198,
                    49347,
                    37064,
                    30922,
                    41162,
                    41179,
                    41194,
                    49390,
                    39153,
                    47356,
                    41219,
                    47366,
                    18699,
                    22796,
                    35088,
                    18706,
                    41236,
                    47382,
                    47397,
                    14630,
                    41258,
                    14637,
                    47412,
                    49468,
                    41278,
                    43326,
                    47427,
                    16710,
                    33100,
                    49502,
                    8555,
                    37228,
                    43371,
                    47472,
                    24953,
                    45436,
                    39293,
                    47495,
                    45453,
                    47507,
                    49560,
                    45468,
                    49570,
                    35239,
                    22952,
                    43435,
                    41406,
                    49618,
                    45535,
                    8672,
                    33249,
                    49640,
                    43500,
                    47599,
                    49649,
                    45575,
                    49672,
                    47631,
                    16935,
                    45609,
                    18987,
                    16949,
                    41534,
                    41551,
                    35408,
                    16985,
                    47705,
                    8799,
                    16992,
                    43616,
                    45667,
                    41573,
                    16999,
                    21101,
                    17006,
                    14958,
                    33393,
                    41593,
                    19069,
                    43650,
                    19076,
                    47748,
                    12938,
                    12945,
                    41636,
                    8881,
                    45745,
                    41653,
                    43708,
                    10944,
                    41668,
                    31429,
                    35527,
                    37576,
                    45779,
                    19158,
                    19165,
                    41693,
                    47852,
                    15087,
                    33520,
                    45809,
                    25330,
                    19201,
                    6917,
                    43786,
                    41741,
                    15125,
                    47897,
                    21274,
                    19239,
                    43820,
                    45874,
                    13107,
                    13114,
                    15163,
                    39740,
                    39749,
                    39753,
                    11083,
                    39757,
                    41806,
                    11090,
                    39766,
                    43864,
                    9049,
                    13152,
                    9056,
                    47968,
                    13159,
                    39788,
                    43884,
                    41851,
                    35708,
                    39808,
                    33669,
                    48007,
                    15245,
                    19348,
                    43927,
                    9130,
                    9143,
                    48055,
                    39870,
                    48065,
                    46028,
                    48081,
                    41941,
                    39901,
                    41950,
                    15327,
                    48096,
                    44005,
                    41965,
                    46062,
                    39918,
                    48119,
                    39933,
                    37886,
                    48131,
                    41990,
                    44039,
                    11274,
                    21519,
                    39958,
                    42007,
                    31769,
                    13339,
                    19486,
                    39967,
                    35872,
                    42029,
                    39982,
                    11312,
                    15409,
                    46134,
                    46143,
                    42049,
                    40007,
                    44111,
                    46162,
                    9305,
                    48223,
                    42092,
                    40050,
                    46195,
                    46210,
                    44162,
                    40072,
                    48283,
                    46235,
                    40092,
                    40096,
                    40100,
                    38056,
                    13484,
                    48303,
                    44207,
                    40116,
                    11456,
                    19654,
                    42182,
                    46286,
                    42199,
                    48346,
                    17628,
                    11484,
                    44255,
                    36065,
                    40161,
                    17635,
                    9444,
                    48357,
                    17642,
                    9451,
                    42221,
                    21744,
                    48372,
                    46326,
                    15607,
                    13566,
                    15614,
                    42241,
                    11522,
                    44294,
                    44303,
                    40210,
                    19736,
                    46360,
                    48411,
                    48421,
                    40236,
                    42284,
                    13615,
                    44336,
                    48437,
                    9533,
                    42301,
                    44351,
                    48452,
                    46404,
                    42316,
                    48467,
                    11604,
                    38230,
                    40284,
                    42341,
                    40298,
                    9583,
                    9590,
                    42358,
                    9597,
                    48512,
                    13697,
                    9604,
                    13704,
                    44425,
                    42380,
                    13711,
                    46482,
                    44435,
                    13718,
                    44438,
                    48535,
                    15776,
                    42400,
                    48547,
                    11686,
                    40363,
                    46516,
                    44470,
                    11713,
                    11720,
                    32202,
                    42443,
                    44490,
                    46546,
                    9686,
                    40408,
                    42460,
                    36326,
                    40425,
                    15858,
                    42482,
                    22004,
                    44530,
                    48639,
                    40447,
                    19973,
                    42502,
                    40467,
                    44564,
                    15896,
                    46617,
                    48671,
                    9768,
                    48681,
                    42545,
                    13880,
                    48697,
                    42562,
                    48712,
                    44622,
                    34385,
                    42577,
                    36446,
                    44639,
                    46695,
                    42602,
                    44654,
                    38511,
                    42612,
                    48757,
                    20090,
                    11906,
                    22148,
                    42628,
                    46729,
                    48780,
                    42642,
                    40595,
                    48792,
                    40610,
                    44721,
                    16058,
                    44731,
                    40635,
                    32447,
                    14019,
                    46787,
                    24261,
                    42698,
                    40657,
                    40677,
                    44776,
                    42730,
                    46827,
                    48884,
                    34552,
                    42747,
                    12033,
                    36615,
                    12040,
                    38669,
                    46861,
                    40720,
                    42769,
                    44824,
                    42789,
                    44842,
                    46891,
                    48944,
                    44857,
                    48956,
                    16197,
                    44869,
                    18248,
                    40782,
                    42832,
                    32600,
                    48987,
                    14181,
                    46969,
                    49017,
                    36735,
                    40835,
                    22404,
                    40839,
                    40843,
                    34708,
                    44950,
                    16279,
                    18330,
                    42906,
                    47003,
                    18337,
                    49057,
                    12208,
                    44983,
                    47033,
                    16317,
                    44992,
                    49091,
                    16324,
                    38865,
                    40928,
                    45029,
                    45036,
                    49135,
                    14320,
                    18419,
                    42996,
                    14327
                ],
                "internalFunctions": {
                    "0xf196e50000": {
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol|OwnableUpgradeable",
                        "declaringContract": "OwnableUpgradeable",
                        "method": {
                            "contractName": "OwnableUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_getOwnableStorage",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 11971,
                                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol|OwnableUpgradeable.OwnableStorage",
                                        "containingContract": "OwnableUpgradeable",
                                        "structMembers": [
                                            {
                                                "name": "_owner",
                                                "type": {
                                                    "primitiveName": "address",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "OwnableStorage",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1192,
                                "size": 159
                            },
                            "stateMutability": "pure",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50001": {
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol|OwnableUpgradeable",
                        "declaringContract": "OwnableUpgradeable",
                        "method": {
                            "contractName": "OwnableUpgradeable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "__Ownable_init",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
                            "paramNames": [
                                "initialOwner"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1847,
                                "size": 127
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50002": {
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol|OwnableUpgradeable",
                        "declaringContract": "OwnableUpgradeable",
                        "method": {
                            "contractName": "OwnableUpgradeable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_transferOwnership",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
                            "paramNames": [
                                "newOwner"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3774,
                                "size": 248
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50003": {
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol|OwnableUpgradeable",
                        "declaringContract": "OwnableUpgradeable",
                        "method": {
                            "contractName": "OwnableUpgradeable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "__Ownable_init_unchained",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
                            "paramNames": [
                                "initialOwner"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1980,
                                "size": 235
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50004": {
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol|OwnableUpgradeable",
                        "declaringContract": "OwnableUpgradeable",
                        "method": {
                            "contractName": "OwnableUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_checkOwner",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2658,
                                "size": 162
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50005": {
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol|OwnableUpgradeable",
                        "declaringContract": "OwnableUpgradeable",
                        "method": {
                            "contractName": "OwnableUpgradeable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "transferOwnership",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
                            "paramNames": [
                                "newOwner"
                            ],
                            "returns": [],
                            "sighash": "f2fde38b",
                            "sourceBytes": {
                                "begin": 3405,
                                "size": 215
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50006": {
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol|OwnableUpgradeable",
                        "declaringContract": "OwnableUpgradeable",
                        "method": {
                            "contractName": "OwnableUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "renounceOwnership",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "715018a6",
                            "sourceBytes": {
                                "begin": 3155,
                                "size": 101
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50007": {
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol|OwnableUpgradeable",
                        "declaringContract": "OwnableUpgradeable",
                        "method": {
                            "contractName": "OwnableUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "owner",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "8da5cb5b",
                            "sourceBytes": {
                                "begin": 2441,
                                "size": 144
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50008": {
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol|Initializable",
                        "declaringContract": "Initializable",
                        "method": {
                            "contractName": "Initializable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_checkInitializing",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 7084,
                                "size": 141
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50009": {
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol|Initializable",
                        "declaringContract": "Initializable",
                        "method": {
                            "contractName": "Initializable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_disableInitializers",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 7711,
                                "size": 422
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5000a": {
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol|Initializable",
                        "declaringContract": "Initializable",
                        "method": {
                            "contractName": "Initializable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_getInitializableStorage",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 5151,
                                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol|Initializable.InitializableStorage",
                                        "containingContract": "Initializable",
                                        "structMembers": [
                                            {
                                                "name": "_initialized",
                                                "type": {
                                                    "primitiveName": "uint64",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "_initializing",
                                                "type": {
                                                    "primitiveName": "bool",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "InitializableStorage",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 8737,
                                "size": 170
                            },
                            "stateMutability": "pure",
                            "visibility": "private"
                        }
                    },
                    "0xf196e5000b": {
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol|Initializable",
                        "declaringContract": "Initializable",
                        "method": {
                            "contractName": "Initializable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_getInitializedVersion",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint64",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 8243,
                                "size": 128
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5000c": {
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol|Initializable",
                        "declaringContract": "Initializable",
                        "method": {
                            "contractName": "Initializable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_isInitializing",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 8487,
                                "size": 120
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5000d": {
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol|UUPSUpgradeable",
                        "declaringContract": "UUPSUpgradeable",
                        "method": {
                            "contractName": "UUPSUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "__UUPSUpgradeable_init",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2970,
                                "size": 67
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5000e": {
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol|UUPSUpgradeable",
                        "declaringContract": "UUPSUpgradeable",
                        "method": {
                            "contractName": "UUPSUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "__UUPSUpgradeable_init_unchained",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3043,
                                "size": 77
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5000f": {
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol|UUPSUpgradeable",
                        "declaringContract": "UUPSUpgradeable",
                        "method": {
                            "contractName": "UUPSUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_checkProxy",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4603,
                                "size": 312
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50010": {
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol|UUPSUpgradeable",
                        "declaringContract": "UUPSUpgradeable",
                        "method": {
                            "contractName": "UUPSUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_checkNotDelegated",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5032,
                                "size": 213
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50011": {
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol|UUPSUpgradeable",
                        "declaringContract": "UUPSUpgradeable",
                        "method": {
                            "contractName": "UUPSUpgradeable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_upgradeToAndCallUUPS",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
                            "paramNames": [
                                "newImplementation",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 6057,
                                "size": 538
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50012": {
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol|UUPSUpgradeable",
                        "declaringContract": "UUPSUpgradeable",
                        "method": {
                            "contractName": "UUPSUpgradeable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "upgradeToAndCall",
                            "notpayable": false,
                            "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
                            "paramNames": [
                                "newImplementation",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "4f1ef286",
                            "sourceBytes": {
                                "begin": 4161,
                                "size": 214
                            },
                            "stateMutability": "payable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50013": {
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol|ContextUpgradeable",
                        "declaringContract": "ContextUpgradeable",
                        "method": {
                            "contractName": "ContextUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "__Context_init",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 748,
                                "size": 59
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50014": {
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol|ContextUpgradeable",
                        "declaringContract": "ContextUpgradeable",
                        "method": {
                            "contractName": "ContextUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "__Context_init_unchained",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 813,
                                "size": 69
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50015": {
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol|ContextUpgradeable",
                        "declaringContract": "ContextUpgradeable",
                        "method": {
                            "contractName": "ContextUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_contextSuffixLength",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1094,
                                "size": 97
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50016": {
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol|ContextUpgradeable",
                        "declaringContract": "ContextUpgradeable",
                        "method": {
                            "contractName": "ContextUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_msgSender",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 887,
                                "size": 96
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50017": {
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol|ContextUpgradeable",
                        "declaringContract": "ContextUpgradeable",
                        "method": {
                            "contractName": "ContextUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_msgData",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "calldata",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 989,
                                "size": 99
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50018": {
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardTransientUpgradeable.sol|ReentrancyGuardTransientUpgradeable",
                        "declaringContract": "ReentrancyGuardTransientUpgradeable",
                        "method": {
                            "contractName": "ReentrancyGuardTransientUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "__ReentrancyGuardTransient_init",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardTransientUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1410,
                                "size": 76
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50019": {
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardTransientUpgradeable.sol|ReentrancyGuardTransientUpgradeable",
                        "declaringContract": "ReentrancyGuardTransientUpgradeable",
                        "method": {
                            "contractName": "ReentrancyGuardTransientUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "__ReentrancyGuardTransient_init_unchained",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardTransientUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1492,
                                "size": 86
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5001a": {
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardTransientUpgradeable.sol|ReentrancyGuardTransientUpgradeable",
                        "declaringContract": "ReentrancyGuardTransientUpgradeable",
                        "method": {
                            "contractName": "ReentrancyGuardTransientUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_reentrancyGuardEntered",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardTransientUpgradeable.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2219,
                                "size": 132
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5001b": {
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardTransientUpgradeable.sol|ReentrancyGuardTransientUpgradeable",
                        "declaringContract": "ReentrancyGuardTransientUpgradeable",
                        "method": {
                            "contractName": "ReentrancyGuardTransientUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_nonReentrantBefore",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardTransientUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1583,
                                "size": 346
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e5001c": {
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardTransientUpgradeable.sol|ReentrancyGuardTransientUpgradeable",
                        "declaringContract": "ReentrancyGuardTransientUpgradeable",
                        "method": {
                            "contractName": "ReentrancyGuardTransientUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_nonReentrantAfter",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardTransientUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1935,
                                "size": 105
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e5001d": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/access/Ownable.sol|Ownable",
                        "declaringContract": "Ownable",
                        "method": {
                            "contractName": "Ownable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_checkOwner",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1796,
                                "size": 162
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5001e": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/access/Ownable.sol|Ownable",
                        "declaringContract": "Ownable",
                        "method": {
                            "contractName": "Ownable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_transferOwnership",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
                            "paramNames": [
                                "newOwner"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2912,
                                "size": 187
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5001f": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/access/Ownable.sol|Ownable",
                        "declaringContract": "Ownable",
                        "method": {
                            "contractName": "Ownable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "transferOwnership",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
                            "paramNames": [
                                "newOwner"
                            ],
                            "returns": [],
                            "sighash": "f2fde38b",
                            "sourceBytes": {
                                "begin": 2543,
                                "size": 215
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50020": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/access/Ownable.sol|Ownable",
                        "declaringContract": "Ownable",
                        "method": {
                            "contractName": "Ownable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "renounceOwnership",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "715018a6",
                            "sourceBytes": {
                                "begin": 2293,
                                "size": 101
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50021": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/access/Ownable.sol|Ownable",
                        "declaringContract": "Ownable",
                        "method": {
                            "contractName": "Ownable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "owner",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "8da5cb5b",
                            "sourceBytes": {
                                "begin": 1638,
                                "size": 85
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50022": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/governance/utils/Votes.sol|Votes",
                        "declaringContract": "Votes",
                        "method": {
                            "contractName": "Votes",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_validateTimepoint",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/governance/utils/Votes.sol",
                            "paramNames": [
                                "timepoint"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint48",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3415,
                                "size": 273
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50023": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/governance/utils/Votes.sol|Votes",
                        "declaringContract": "Votes",
                        "method": {
                            "contractName": "Votes",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_getTotalSupply",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/governance/utils/Votes.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5384,
                                "size": 117
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50024": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/governance/utils/Votes.sol|Votes",
                        "declaringContract": "Votes",
                        "method": {
                            "contractName": "Votes",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_moveDelegateVotes",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/governance/utils/Votes.sol",
                            "paramNames": [
                                "from",
                                "to",
                                "amount"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 7761,
                                "size": 789
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50025": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/governance/utils/Votes.sol|Votes",
                        "declaringContract": "Votes",
                        "method": {
                            "contractName": "Votes",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_delegate",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/governance/utils/Votes.sol",
                            "paramNames": [
                                "account",
                                "delegatee"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 6730,
                                "size": 312
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50026": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/governance/utils/Votes.sol|Votes",
                        "declaringContract": "Votes",
                        "method": {
                            "contractName": "Votes",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_transferVotingUnits",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/governance/utils/Votes.sol",
                            "paramNames": [
                                "from",
                                "to",
                                "amount"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 7276,
                                "size": 399
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50027": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/governance/utils/Votes.sol|Votes",
                        "declaringContract": "Votes",
                        "method": {
                            "contractName": "Votes",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_numCheckpoints",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/governance/utils/Votes.sol",
                            "paramNames": [
                                "account"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 8625,
                                "size": 162
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50028": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/governance/utils/Votes.sol|Votes",
                        "declaringContract": "Votes",
                        "method": {
                            "contractName": "Votes",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_checkpoints",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/governance/utils/Votes.sol",
                            "paramNames": [
                                "account",
                                "pos"
                            ],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "astId": 21006,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Checkpoint208",
                                        "containingContract": "Checkpoints",
                                        "structMembers": [
                                            {
                                                "name": "_key",
                                                "type": {
                                                    "primitiveName": "uint48",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "_value",
                                                "type": {
                                                    "primitiveName": "uint208",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "Checkpoint208",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 8864,
                                "size": 199
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50029": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/governance/utils/Votes.sol|Votes",
                        "declaringContract": "Votes",
                        "method": {
                            "contractName": "Votes",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint208",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint208",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_add",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/governance/utils/Votes.sol",
                            "paramNames": [
                                "a",
                                "b"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint208",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 9348,
                                "size": 96
                            },
                            "stateMutability": "pure",
                            "visibility": "private"
                        }
                    },
                    "0xf196e5002a": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/governance/utils/Votes.sol|Votes",
                        "declaringContract": "Votes",
                        "method": {
                            "contractName": "Votes",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint208",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint208",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_subtract",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/governance/utils/Votes.sol",
                            "paramNames": [
                                "a",
                                "b"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint208",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 9450,
                                "size": 101
                            },
                            "stateMutability": "pure",
                            "visibility": "private"
                        }
                    },
                    "0xf196e5002b": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/governance/utils/Votes.sol|Votes",
                        "declaringContract": "Votes",
                        "method": {
                            "contractName": "Votes",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "getPastTotalSupply",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/governance/utils/Votes.sol",
                            "paramNames": [
                                "timepoint"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "8e539e8c",
                            "sourceBytes": {
                                "begin": 5132,
                                "size": 175
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5002c": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/governance/utils/Votes.sol|Votes",
                        "declaringContract": "Votes",
                        "method": {
                            "contractName": "Votes",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "delegate",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/governance/utils/Votes.sol",
                            "paramNames": [
                                "delegatee"
                            ],
                            "returns": [],
                            "sighash": "5c19a95c",
                            "sourceBytes": {
                                "begin": 5782,
                                "size": 138
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5002d": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/governance/utils/Votes.sol|Votes",
                        "declaringContract": "Votes",
                        "method": {
                            "contractName": "Votes",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "delegates",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/governance/utils/Votes.sol",
                            "paramNames": [
                                "account"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "587cde1e",
                            "sourceBytes": {
                                "begin": 5583,
                                "size": 117
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5002e": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/governance/utils/Votes.sol|Votes",
                        "declaringContract": "Votes",
                        "method": {
                            "contractName": "Votes",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint8",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "delegateBySig",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/governance/utils/Votes.sol",
                            "paramNames": [
                                "delegatee",
                                "nonce",
                                "expiry",
                                "v",
                                "r",
                                "s"
                            ],
                            "returns": [],
                            "sighash": "c3cda520",
                            "sourceBytes": {
                                "begin": 5998,
                                "size": 554
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5002f": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/governance/utils/Votes.sol|Votes",
                        "declaringContract": "Votes",
                        "method": {
                            "contractName": "Votes",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "getPastVotes",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/governance/utils/Votes.sol",
                            "paramNames": [
                                "account",
                                "timepoint"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "3a46b1a8",
                            "sourceBytes": {
                                "begin": 4298,
                                "size": 198
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50030": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/governance/utils/Votes.sol|Votes",
                        "declaringContract": "Votes",
                        "method": {
                            "contractName": "Votes",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "CLOCK_MODE",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/governance/utils/Votes.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                }
                            ],
                            "sighash": "4bf5d7e9",
                            "sourceBytes": {
                                "begin": 3040,
                                "size": 272
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50031": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol|Votes",
                        "declaringContract": "Votes",
                        "method": {
                            "contractName": "Votes",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "eip712Domain",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes1",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "dynamicArrayBaseType": {
                                            "primitiveName": "uint256",
                                            "type": "Primitive"
                                        },
                                        "type": "Array"
                                    }
                                }
                            ],
                            "sighash": "84b0196e",
                            "sourceBytes": {
                                "begin": 5144,
                                "size": 557
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50032": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/governance/utils/Votes.sol|Votes",
                        "declaringContract": "Votes",
                        "method": {
                            "contractName": "Votes",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "getVotes",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/governance/utils/Votes.sol",
                            "paramNames": [
                                "account"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "9ab24eb0",
                            "sourceBytes": {
                                "begin": 3778,
                                "size": 135
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50033": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Nonces.sol|Votes",
                        "declaringContract": "Votes",
                        "method": {
                            "contractName": "Votes",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "nonces",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Nonces.sol",
                            "paramNames": [
                                "owner"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "7ecebe00",
                            "sourceBytes": {
                                "begin": 538,
                                "size": 107
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50034": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/governance/utils/Votes.sol|Votes",
                        "declaringContract": "Votes",
                        "method": {
                            "contractName": "Votes",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "clock",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/governance/utils/Votes.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint48",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "91ddadf4",
                            "sourceBytes": {
                                "begin": 2789,
                                "size": 96
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50035": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol|ERC1967Utils",
                        "declaringContract": "ERC1967Utils",
                        "method": {
                            "contractName": "ERC1967Utils",
                            "fullArgs": [],
                            "isLibrary": true,
                            "name": "getImplementation",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1441,
                                "size": 138
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50036": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol|ERC1967Utils",
                        "declaringContract": "ERC1967Utils",
                        "method": {
                            "contractName": "ERC1967Utils",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_setImplementation",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
                            "paramNames": [
                                "newImplementation"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1671,
                                "size": 281
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50037": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol|ERC1967Utils",
                        "declaringContract": "ERC1967Utils",
                        "method": {
                            "contractName": "ERC1967Utils",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_setAdmin",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
                            "paramNames": [
                                "newAdmin"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3490,
                                "size": 217
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50038": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol|ERC1967Utils",
                        "declaringContract": "ERC1967Utils",
                        "method": {
                            "contractName": "ERC1967Utils",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "upgradeToAndCall",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
                            "paramNames": [
                                "newImplementation",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2264,
                                "size": 344
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50039": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol|ERC1967Utils",
                        "declaringContract": "ERC1967Utils",
                        "method": {
                            "contractName": "ERC1967Utils",
                            "fullArgs": [],
                            "isLibrary": true,
                            "name": "getAdmin",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3287,
                                "size": 120
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5003a": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol|ERC1967Utils",
                        "declaringContract": "ERC1967Utils",
                        "method": {
                            "contractName": "ERC1967Utils",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "changeAdmin",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
                            "paramNames": [
                                "newAdmin"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3827,
                                "size": 142
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5003b": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol|ERC1967Utils",
                        "declaringContract": "ERC1967Utils",
                        "method": {
                            "contractName": "ERC1967Utils",
                            "fullArgs": [],
                            "isLibrary": true,
                            "name": "getBeacon",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4415,
                                "size": 122
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5003c": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol|ERC1967Utils",
                        "declaringContract": "ERC1967Utils",
                        "method": {
                            "contractName": "ERC1967Utils",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_setBeacon",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
                            "paramNames": [
                                "newBeacon"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4620,
                                "size": 437
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e5003d": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol|ERC1967Utils",
                        "declaringContract": "ERC1967Utils",
                        "method": {
                            "contractName": "ERC1967Utils",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "upgradeBeaconToAndCall",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
                            "paramNames": [
                                "newBeacon",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5582,
                                "size": 342
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5003e": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol|ERC1967Utils",
                        "declaringContract": "ERC1967Utils",
                        "method": {
                            "contractName": "ERC1967Utils",
                            "fullArgs": [],
                            "isLibrary": true,
                            "name": "_checkNonPayable",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 6113,
                                "size": 122
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e5003f": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol|ERC20",
                        "declaringContract": "ERC20",
                        "method": {
                            "contractName": "ERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_transfer",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
                            "paramNames": [
                                "from",
                                "to",
                                "value"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5393,
                                "size": 300
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50040": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol|ERC20",
                        "declaringContract": "ERC20",
                        "method": {
                            "contractName": "ERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_burn",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
                            "paramNames": [
                                "account",
                                "value"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 7984,
                                "size": 206
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50041": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol|ERC20",
                        "declaringContract": "ERC20",
                        "method": {
                            "contractName": "ERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_update",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
                            "paramNames": [
                                "from",
                                "to",
                                "value"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 6008,
                                "size": 1107
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50042": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol|ERC20",
                        "declaringContract": "ERC20",
                        "method": {
                            "contractName": "ERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_mint",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
                            "paramNames": [
                                "account",
                                "value"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 7458,
                                "size": 208
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50043": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol|ERC20",
                        "declaringContract": "ERC20",
                        "method": {
                            "contractName": "ERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_approve",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
                            "paramNames": [
                                "owner",
                                "spender",
                                "value"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 8726,
                                "size": 128
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50044": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol|ERC20",
                        "declaringContract": "ERC20",
                        "method": {
                            "contractName": "ERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_approve",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
                            "paramNames": [
                                "owner",
                                "spender",
                                "value",
                                "emitEvent"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 9701,
                                "size": 432
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50045": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol|ERC20",
                        "declaringContract": "ERC20",
                        "method": {
                            "contractName": "ERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_spendAllowance",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
                            "paramNames": [
                                "owner",
                                "spender",
                                "value"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 10415,
                                "size": 476
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50046": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol|ERC20",
                        "declaringContract": "ERC20",
                        "method": {
                            "contractName": "ERC20",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "symbol",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                }
                            ],
                            "sighash": "95d89b41",
                            "sourceBytes": {
                                "begin": 1981,
                                "size": 93
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50047": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol|ERC20",
                        "declaringContract": "ERC20",
                        "method": {
                            "contractName": "ERC20",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "name",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                }
                            ],
                            "sighash": "06fdde03",
                            "sourceBytes": {
                                "begin": 1779,
                                "size": 89
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50048": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol|ERC20",
                        "declaringContract": "ERC20",
                        "method": {
                            "contractName": "ERC20",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "decimals",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint8",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "313ce567",
                            "sourceBytes": {
                                "begin": 2707,
                                "size": 82
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50049": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol|ERC20",
                        "declaringContract": "ERC20",
                        "method": {
                            "contractName": "ERC20",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "totalSupply",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "18160ddd",
                            "sourceBytes": {
                                "begin": 2849,
                                "size": 97
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5004a": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol|ERC20",
                        "declaringContract": "ERC20",
                        "method": {
                            "contractName": "ERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "balanceOf",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
                            "paramNames": [
                                "account"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "70a08231",
                            "sourceBytes": {
                                "begin": 3004,
                                "size": 116
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5004b": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol|ERC20",
                        "declaringContract": "ERC20",
                        "method": {
                            "contractName": "ERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "approve",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
                            "paramNames": [
                                "spender",
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "095ea7b3",
                            "sourceBytes": {
                                "begin": 3998,
                                "size": 186
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5004c": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol|ERC20",
                        "declaringContract": "ERC20",
                        "method": {
                            "contractName": "ERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "transfer",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
                            "paramNames": [
                                "to",
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "a9059cbb",
                            "sourceBytes": {
                                "begin": 3315,
                                "size": 178
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5004d": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol|ERC20",
                        "declaringContract": "ERC20",
                        "method": {
                            "contractName": "ERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "transferFrom",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
                            "paramNames": [
                                "from",
                                "to",
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "23b872dd",
                            "sourceBytes": {
                                "begin": 4776,
                                "size": 244
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5004e": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol|ERC20",
                        "declaringContract": "ERC20",
                        "method": {
                            "contractName": "ERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "allowance",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
                            "paramNames": [
                                "owner",
                                "spender"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "dd62ed3e",
                            "sourceBytes": {
                                "begin": 3551,
                                "size": 140
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5004f": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol|ERC20Burnable",
                        "declaringContract": "ERC20Burnable",
                        "method": {
                            "contractName": "ERC20Burnable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "burn",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [],
                            "sighash": "42966c68",
                            "sourceBytes": {
                                "begin": 618,
                                "size": 87
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50050": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol|ERC20Burnable",
                        "declaringContract": "ERC20Burnable",
                        "method": {
                            "contractName": "ERC20Burnable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "burnFrom",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
                            "paramNames": [
                                "account",
                                "value"
                            ],
                            "returns": [],
                            "sighash": "79cc6790",
                            "sourceBytes": {
                                "begin": 1021,
                                "size": 158
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50051": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol|ERC20Permit",
                        "declaringContract": "ERC20Permit",
                        "method": {
                            "contractName": "ERC20Permit",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "nonces",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
                            "paramNames": [
                                "owner"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "7ecebe00",
                            "sourceBytes": {
                                "begin": 2409,
                                "size": 143
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50052": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol|ERC20Permit",
                        "declaringContract": "ERC20Permit",
                        "method": {
                            "contractName": "ERC20Permit",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint8",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "permit",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
                            "paramNames": [
                                "owner",
                                "spender",
                                "value",
                                "deadline",
                                "v",
                                "r",
                                "s"
                            ],
                            "returns": [],
                            "sighash": "d505accf",
                            "sourceBytes": {
                                "begin": 1683,
                                "size": 672
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50053": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol|ERC20Votes",
                        "declaringContract": "ERC20Votes",
                        "method": {
                            "contractName": "ERC20Votes",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_maxSupply",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2113,
                                "size": 103
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50054": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol|ERC20Votes",
                        "declaringContract": "ERC20Votes",
                        "method": {
                            "contractName": "ERC20Votes",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_update",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol",
                            "paramNames": [
                                "from",
                                "to",
                                "value"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2356,
                                "size": 413
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50055": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol|ERC20Votes",
                        "declaringContract": "ERC20Votes",
                        "method": {
                            "contractName": "ERC20Votes",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_getVotingUnits",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol",
                            "paramNames": [
                                "account"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3029,
                                "size": 133
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50056": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol|ERC20Votes",
                        "declaringContract": "ERC20Votes",
                        "method": {
                            "contractName": "ERC20Votes",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "numCheckpoints",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol",
                            "paramNames": [
                                "account"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "6fcfff45",
                            "sourceBytes": {
                                "begin": 3237,
                                "size": 126
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50057": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol|ERC20Votes",
                        "declaringContract": "ERC20Votes",
                        "method": {
                            "contractName": "ERC20Votes",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "checkpoints",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol",
                            "paramNames": [
                                "account",
                                "pos"
                            ],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "astId": 21006,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Checkpoint208",
                                        "containingContract": "Checkpoints",
                                        "structMembers": [
                                            {
                                                "name": "_key",
                                                "type": {
                                                    "primitiveName": "uint48",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "_value",
                                                "type": {
                                                    "primitiveName": "uint208",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "Checkpoint208",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "f1127ed8",
                            "sourceBytes": {
                                "begin": 3440,
                                "size": 163
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50058": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "safeTransfer",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "to",
                                "value"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1219,
                                "size": 160
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50059": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "safeTransferFrom",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "from",
                                "to",
                                "value"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1618,
                                "size": 188
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5005a": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "forceApprove",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "spender",
                                "value"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4400,
                                "size": 380
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5005b": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "safeIncreaseAllowance",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "spender",
                                "value"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2462,
                                "size": 225
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5005c": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "safeDecreaseAllowance",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "spender",
                                "requestedDecrease"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3355,
                                "size": 468
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5005d": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC1363",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "transferAndCallRelaxed",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "to",
                                "value",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5124,
                                "size": 322
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5005e": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC1363",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "transferFromAndCallRelaxed",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "from",
                                "to",
                                "value",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5798,
                                "size": 406
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5005f": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC1363",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "approveAndCallRelaxed",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "to",
                                "value",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 6869,
                                "size": 320
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50060": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_callOptionalReturn",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 7686,
                                "size": 720
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50061": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_callOptionalReturnBool",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "data"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 8908,
                                "size": 480
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50062": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol|ERC721",
                        "declaringContract": "ERC721",
                        "method": {
                            "contractName": "ERC721",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_baseURI",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3173,
                                "size": 92
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50063": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol|ERC721",
                        "declaringContract": "ERC721",
                        "method": {
                            "contractName": "ERC721",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_isAuthorized",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
                            "paramNames": [
                                "owner",
                                "spender",
                                "tokenId"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 6401,
                                "size": 272
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50064": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol|ERC721",
                        "declaringContract": "ERC721",
                        "method": {
                            "contractName": "ERC721",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_ownerOf",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
                            "paramNames": [
                                "tokenId"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5732,
                                "size": 115
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50065": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol|ERC721",
                        "declaringContract": "ERC721",
                        "method": {
                            "contractName": "ERC721",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_getApproved",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
                            "paramNames": [
                                "tokenId"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5963,
                                "size": 127
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50066": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol|ERC721",
                        "declaringContract": "ERC721",
                        "method": {
                            "contractName": "ERC721",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_checkAuthorized",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
                            "paramNames": [
                                "owner",
                                "spender",
                                "tokenId"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 7105,
                                "size": 368
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50067": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol|ERC721",
                        "declaringContract": "ERC721",
                        "method": {
                            "contractName": "ERC721",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint128",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_increaseBalance",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
                            "paramNames": [
                                "account",
                                "value"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 8115,
                                "size": 153
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50068": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol|ERC721",
                        "declaringContract": "ERC721",
                        "method": {
                            "contractName": "ERC721",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_update",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
                            "paramNames": [
                                "to",
                                "tokenId",
                                "auth"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 8861,
                                "size": 795
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50069": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol|ERC721",
                        "declaringContract": "ERC721",
                        "method": {
                            "contractName": "ERC721",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_mint",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
                            "paramNames": [
                                "to",
                                "tokenId"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 9978,
                                "size": 327
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5006a": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol|ERC721",
                        "declaringContract": "ERC721",
                        "method": {
                            "contractName": "ERC721",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_safeMint",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
                            "paramNames": [
                                "to",
                                "tokenId"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 10656,
                                "size": 100
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5006b": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol|ERC721",
                        "declaringContract": "ERC721",
                        "method": {
                            "contractName": "ERC721",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_safeMint",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
                            "paramNames": [
                                "to",
                                "tokenId",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 10977,
                                "size": 207
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5006c": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol|ERC721",
                        "declaringContract": "ERC721",
                        "method": {
                            "contractName": "ERC721",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_burn",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
                            "paramNames": [
                                "tokenId"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 11510,
                                "size": 227
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5006d": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol|ERC721",
                        "declaringContract": "ERC721",
                        "method": {
                            "contractName": "ERC721",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_transfer",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
                            "paramNames": [
                                "from",
                                "to",
                                "tokenId"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 12061,
                                "size": 460
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5006e": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol|ERC721",
                        "declaringContract": "ERC721",
                        "method": {
                            "contractName": "ERC721",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_safeTransfer",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
                            "paramNames": [
                                "from",
                                "to",
                                "tokenId"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 13455,
                                "size": 128
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5006f": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol|ERC721",
                        "declaringContract": "ERC721",
                        "method": {
                            "contractName": "ERC721",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_safeTransfer",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
                            "paramNames": [
                                "from",
                                "to",
                                "tokenId",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 13820,
                                "size": 229
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50070": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol|ERC721",
                        "declaringContract": "ERC721",
                        "method": {
                            "contractName": "ERC721",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_approve",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
                            "paramNames": [
                                "to",
                                "tokenId",
                                "auth"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 14492,
                                "size": 120
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50071": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol|ERC721",
                        "declaringContract": "ERC721",
                        "method": {
                            "contractName": "ERC721",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "safeTransferFrom",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
                            "paramNames": [
                                "from",
                                "to",
                                "tokenId"
                            ],
                            "returns": [],
                            "sighash": "42842e0e",
                            "sourceBytes": {
                                "begin": 4786,
                                "size": 132
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50072": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol|ERC721",
                        "declaringContract": "ERC721",
                        "method": {
                            "contractName": "ERC721",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "transferFrom",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
                            "paramNames": [
                                "from",
                                "to",
                                "tokenId"
                            ],
                            "returns": [],
                            "sighash": "23b872dd",
                            "sourceBytes": {
                                "begin": 4142,
                                "size": 578
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50073": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol|ERC721",
                        "declaringContract": "ERC721",
                        "method": {
                            "contractName": "ERC721",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "safeTransferFrom",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
                            "paramNames": [
                                "from",
                                "to",
                                "tokenId",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "b88d4fde",
                            "sourceBytes": {
                                "begin": 4984,
                                "size": 233
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50074": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol|ERC721",
                        "declaringContract": "ERC721",
                        "method": {
                            "contractName": "ERC721",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_requireOwned",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
                            "paramNames": [
                                "tokenId"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 16212,
                                "size": 241
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50075": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol|ERC721",
                        "declaringContract": "ERC721",
                        "method": {
                            "contractName": "ERC721",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_setApprovalForAll",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
                            "paramNames": [
                                "owner",
                                "operator",
                                "approved"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 15665,
                                "size": 312
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50076": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol|ERC721",
                        "declaringContract": "ERC721",
                        "method": {
                            "contractName": "ERC721",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_approve",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
                            "paramNames": [
                                "to",
                                "tokenId",
                                "auth",
                                "emitEvent"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 14794,
                                "size": 662
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50077": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol|ERC721",
                        "declaringContract": "ERC721",
                        "method": {
                            "contractName": "ERC721",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "symbol",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                }
                            ],
                            "sighash": "95d89b41",
                            "sourceBytes": {
                                "begin": 2517,
                                "size": 93
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50078": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol|ERC721",
                        "declaringContract": "ERC721",
                        "method": {
                            "contractName": "ERC721",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "tokenURI",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
                            "paramNames": [
                                "tokenId"
                            ],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                }
                            ],
                            "sighash": "c87b56dd",
                            "sourceBytes": {
                                "begin": 2676,
                                "size": 255
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50079": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol|ERC721",
                        "declaringContract": "ERC721",
                        "method": {
                            "contractName": "ERC721",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "ownerOf",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
                            "paramNames": [
                                "tokenId"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "6352211e",
                            "sourceBytes": {
                                "begin": 2184,
                                "size": 118
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5007a": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol|ERC721",
                        "declaringContract": "ERC721",
                        "method": {
                            "contractName": "ERC721",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "setApprovalForAll",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
                            "paramNames": [
                                "operator",
                                "approved"
                            ],
                            "returns": [],
                            "sighash": "a22cb465",
                            "sourceBytes": {
                                "begin": 3717,
                                "size": 144
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5007b": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol|ERC721",
                        "declaringContract": "ERC721",
                        "method": {
                            "contractName": "ERC721",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes4",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "supportsInterface",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
                            "paramNames": [
                                "interfaceId"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "01ffc9a7",
                            "sourceBytes": {
                                "begin": 1560,
                                "size": 300
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5007c": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol|ERC721",
                        "declaringContract": "ERC721",
                        "method": {
                            "contractName": "ERC721",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "isApprovedForAll",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
                            "paramNames": [
                                "owner",
                                "operator"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "e985e9c5",
                            "sourceBytes": {
                                "begin": 3927,
                                "size": 153
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5007d": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol|ERC721",
                        "declaringContract": "ERC721",
                        "method": {
                            "contractName": "ERC721",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "balanceOf",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
                            "paramNames": [
                                "owner"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "70a08231",
                            "sourceBytes": {
                                "begin": 1919,
                                "size": 208
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5007e": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol|ERC721",
                        "declaringContract": "ERC721",
                        "method": {
                            "contractName": "ERC721",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "approve",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
                            "paramNames": [
                                "to",
                                "tokenId"
                            ],
                            "returns": [],
                            "sighash": "095ea7b3",
                            "sourceBytes": {
                                "begin": 3322,
                                "size": 113
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5007f": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol|ERC721",
                        "declaringContract": "ERC721",
                        "method": {
                            "contractName": "ERC721",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "name",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                }
                            ],
                            "sighash": "06fdde03",
                            "sourceBytes": {
                                "begin": 2364,
                                "size": 89
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50080": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol|ERC721",
                        "declaringContract": "ERC721",
                        "method": {
                            "contractName": "ERC721",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "getApproved",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
                            "paramNames": [
                                "tokenId"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "081812fc",
                            "sourceBytes": {
                                "begin": 3496,
                                "size": 154
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50081": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol|ERC721Enumerable",
                        "declaringContract": "ERC721Enumerable",
                        "method": {
                            "contractName": "ERC721Enumerable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_update",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
                            "paramNames": [
                                "to",
                                "tokenId",
                                "auth"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2518,
                                "size": 625
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50082": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol|ERC721Enumerable",
                        "declaringContract": "ERC721Enumerable",
                        "method": {
                            "contractName": "ERC721Enumerable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_addTokenToOwnerEnumeration",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
                            "paramNames": [
                                "to",
                                "tokenId"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3437,
                                "size": 214
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50083": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol|ERC721Enumerable",
                        "declaringContract": "ERC721Enumerable",
                        "method": {
                            "contractName": "ERC721Enumerable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_removeTokenFromAllTokensEnumeration",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
                            "paramNames": [
                                "tokenId"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5967,
                                "size": 1061
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50084": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol|ERC721Enumerable",
                        "declaringContract": "ERC721Enumerable",
                        "method": {
                            "contractName": "ERC721Enumerable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_addTokenToAllTokensEnumeration",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
                            "paramNames": [
                                "tokenId"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3846,
                                "size": 161
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50085": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol|ERC721Enumerable",
                        "declaringContract": "ERC721Enumerable",
                        "method": {
                            "contractName": "ERC721Enumerable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_removeTokenFromOwnerEnumeration",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
                            "paramNames": [
                                "from",
                                "tokenId"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4624,
                                "size": 1055
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50086": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol|ERC721Enumerable",
                        "declaringContract": "ERC721Enumerable",
                        "method": {
                            "contractName": "ERC721Enumerable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint128",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_increaseBalance",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
                            "paramNames": [
                                "account",
                                "amount"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 7145,
                                "size": 234
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50087": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol|ERC721Enumerable",
                        "declaringContract": "ERC721Enumerable",
                        "method": {
                            "contractName": "ERC721Enumerable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "tokenOfOwnerByIndex",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
                            "paramNames": [
                                "owner",
                                "index"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "2f745c59",
                            "sourceBytes": {
                                "begin": 1736,
                                "size": 255
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50088": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol|ERC721Enumerable",
                        "declaringContract": "ERC721Enumerable",
                        "method": {
                            "contractName": "ERC721Enumerable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "totalSupply",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "18160ddd",
                            "sourceBytes": {
                                "begin": 2062,
                                "size": 102
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50089": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol|ERC721Enumerable",
                        "declaringContract": "ERC721Enumerable",
                        "method": {
                            "contractName": "ERC721Enumerable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "tokenByIndex",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
                            "paramNames": [
                                "index"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "4f6ccce7",
                            "sourceBytes": {
                                "begin": 2236,
                                "size": 226
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5008a": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol|ERC721Enumerable",
                        "declaringContract": "ERC721Enumerable",
                        "method": {
                            "contractName": "ERC721Enumerable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes4",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "supportsInterface",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
                            "paramNames": [
                                "interfaceId"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "01ffc9a7",
                            "sourceBytes": {
                                "begin": 1435,
                                "size": 222
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5008b": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol|ERC721Utils",
                        "declaringContract": "ERC721Utils",
                        "method": {
                            "contractName": "ERC721Utils",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "checkOnERC721Received",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol",
                            "paramNames": [
                                "operator",
                                "from",
                                "to",
                                "tokenId",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 985,
                                "size": 924
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5008c": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Address.sol|Address",
                        "declaringContract": "Address",
                        "method": {
                            "contractName": "Address",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "sendValue",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Address.sol",
                            "paramNames": [
                                "recipient",
                                "amount"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1290,
                                "size": 365
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5008d": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Address.sol|Address",
                        "declaringContract": "Address",
                        "method": {
                            "contractName": "Address",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "functionCall",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Address.sol",
                            "paramNames": [
                                "target",
                                "data"
                            ],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2500,
                                "size": 151
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5008e": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Address.sol|Address",
                        "declaringContract": "Address",
                        "method": {
                            "contractName": "Address",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "functionDelegateCall",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Address.sol",
                            "paramNames": [
                                "target",
                                "data"
                            ],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3916,
                                "size": 253
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5008f": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Address.sol|Address",
                        "declaringContract": "Address",
                        "method": {
                            "contractName": "Address",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "functionCallWithValue",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Address.sol",
                            "paramNames": [
                                "target",
                                "data",
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2975,
                                "size": 407
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50090": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Address.sol|Address",
                        "declaringContract": "Address",
                        "method": {
                            "contractName": "Address",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "functionStaticCall",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Address.sol",
                            "paramNames": [
                                "target",
                                "data"
                            ],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3521,
                                "size": 254
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50091": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Address.sol|Address",
                        "declaringContract": "Address",
                        "method": {
                            "contractName": "Address",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "verifyCallResultFromTarget",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Address.sol",
                            "paramNames": [
                                "target",
                                "success",
                                "returndata"
                            ],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4437,
                                "size": 582
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50092": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Address.sol|Address",
                        "declaringContract": "Address",
                        "method": {
                            "contractName": "Address",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "verifyCallResult",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Address.sol",
                            "paramNames": [
                                "success",
                                "returndata"
                            ],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5221,
                                "size": 224
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50093": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Address.sol|Address",
                        "declaringContract": "Address",
                        "method": {
                            "contractName": "Address",
                            "fullArgs": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_revert",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Address.sol",
                            "paramNames": [
                                "returndata"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5559,
                                "size": 487
                            },
                            "stateMutability": "pure",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50094": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Context.sol|Context",
                        "declaringContract": "Context",
                        "method": {
                            "contractName": "Context",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_msgSender",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Context.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 656,
                                "size": 96
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50095": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Context.sol|Context",
                        "declaringContract": "Context",
                        "method": {
                            "contractName": "Context",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_msgData",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Context.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "calldata",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 758,
                                "size": 99
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50096": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Context.sol|Context",
                        "declaringContract": "Context",
                        "method": {
                            "contractName": "Context",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_contextSuffixLength",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Context.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 863,
                                "size": 97
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50097": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Nonces.sol|Nonces",
                        "declaringContract": "Nonces",
                        "method": {
                            "contractName": "Nonces",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_useNonce",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Nonces.sol",
                            "paramNames": [
                                "owner"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 759,
                                "size": 395
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50098": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Nonces.sol|Nonces",
                        "declaringContract": "Nonces",
                        "method": {
                            "contractName": "Nonces",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_useCheckedNonce",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Nonces.sol",
                            "paramNames": [
                                "owner",
                                "nonce"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1265,
                                "size": 222
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50099": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Panic.sol|Panic",
                        "declaringContract": "Panic",
                        "method": {
                            "contractName": "Panic",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "panic",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Panic.sol",
                            "paramNames": [
                                "code"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1776,
                                "size": 194
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5009a": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/ShortStrings.sol|ShortStrings",
                        "declaringContract": "ShortStrings",
                        "method": {
                            "contractName": "ShortStrings",
                            "fullArgs": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toShortString",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/ShortStrings.sol",
                            "paramNames": [
                                "str"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "astId": 22340,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/ShortStrings.sol|ShortString",
                                        "containingContract": null,
                                        "type": "UserDefinedValueType",
                                        "valueTypeAliasedName": {
                                            "primitiveName": "bytes32",
                                            "type": "Primitive"
                                        },
                                        "valueTypeName": "ShortString"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1708,
                                "size": 286
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5009b": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/ShortStrings.sol|ShortStrings",
                        "declaringContract": "ShortStrings",
                        "method": {
                            "contractName": "ShortStrings",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "astId": 22340,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/ShortStrings.sol|ShortString",
                                        "containingContract": null,
                                        "type": "UserDefinedValueType",
                                        "valueTypeAliasedName": {
                                            "primitiveName": "bytes32",
                                            "type": "Primitive"
                                        },
                                        "valueTypeName": "ShortString"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toString",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/ShortStrings.sol",
                            "paramNames": [
                                "sstr"
                            ],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2078,
                                "size": 378
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5009c": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/ShortStrings.sol|ShortStrings",
                        "declaringContract": "ShortStrings",
                        "method": {
                            "contractName": "ShortStrings",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "astId": 22340,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/ShortStrings.sol|ShortString",
                                        "containingContract": null,
                                        "type": "UserDefinedValueType",
                                        "valueTypeAliasedName": {
                                            "primitiveName": "bytes32",
                                            "type": "Primitive"
                                        },
                                        "valueTypeName": "ShortString"
                                    }
                                },
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toStringWithFallback",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/ShortStrings.sol",
                            "paramNames": [
                                "value",
                                "store"
                            ],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3358,
                                "size": 267
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5009d": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/ShortStrings.sol|ShortStrings",
                        "declaringContract": "ShortStrings",
                        "method": {
                            "contractName": "ShortStrings",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "astId": 22340,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/ShortStrings.sol|ShortString",
                                        "containingContract": null,
                                        "type": "UserDefinedValueType",
                                        "valueTypeAliasedName": {
                                            "primitiveName": "bytes32",
                                            "type": "Primitive"
                                        },
                                        "valueTypeName": "ShortString"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "byteLength",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/ShortStrings.sol",
                            "paramNames": [
                                "sstr"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2528,
                                "size": 245
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5009e": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/ShortStrings.sol|ShortStrings",
                        "declaringContract": "ShortStrings",
                        "method": {
                            "contractName": "ShortStrings",
                            "fullArgs": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                },
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toShortStringWithFallback",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/ShortStrings.sol",
                            "paramNames": [
                                "value",
                                "store"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "astId": 22340,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/ShortStrings.sol|ShortString",
                                        "containingContract": null,
                                        "type": "UserDefinedValueType",
                                        "valueTypeAliasedName": {
                                            "primitiveName": "bytes32",
                                            "type": "Primitive"
                                        },
                                        "valueTypeName": "ShortString"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2887,
                                "size": 340
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5009f": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/ShortStrings.sol|ShortStrings",
                        "declaringContract": "ShortStrings",
                        "method": {
                            "contractName": "ShortStrings",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "astId": 22340,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/ShortStrings.sol|ShortString",
                                        "containingContract": null,
                                        "type": "UserDefinedValueType",
                                        "valueTypeAliasedName": {
                                            "primitiveName": "bytes32",
                                            "type": "Primitive"
                                        },
                                        "valueTypeName": "ShortString"
                                    }
                                },
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "byteLengthWithFallback",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/ShortStrings.sol",
                            "paramNames": [
                                "value",
                                "store"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4000,
                                "size": 279
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500a0": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol|StorageSlot",
                        "declaringContract": "StorageSlot",
                        "method": {
                            "contractName": "StorageSlot",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "getAddressSlot",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol",
                            "paramNames": [
                                "slot"
                            ],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 877,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol|StorageSlot.AddressSlot",
                                        "containingContract": "StorageSlot",
                                        "structMembers": [
                                            {
                                                "name": "value",
                                                "type": {
                                                    "primitiveName": "address",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "AddressSlot",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1899,
                                "size": 163
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500a1": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol|StorageSlot",
                        "declaringContract": "StorageSlot",
                        "method": {
                            "contractName": "StorageSlot",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "getBooleanSlot",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol",
                            "paramNames": [
                                "slot"
                            ],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 880,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol|StorageSlot.BooleanSlot",
                                        "containingContract": "StorageSlot",
                                        "structMembers": [
                                            {
                                                "name": "value",
                                                "type": {
                                                    "primitiveName": "bool",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "BooleanSlot",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2159,
                                "size": 163
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500a2": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol|StorageSlot",
                        "declaringContract": "StorageSlot",
                        "method": {
                            "contractName": "StorageSlot",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "getInt256Slot",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol",
                            "paramNames": [
                                "slot"
                            ],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 889,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol|StorageSlot.Int256Slot",
                                        "containingContract": "StorageSlot",
                                        "structMembers": [
                                            {
                                                "name": "value",
                                                "type": {
                                                    "primitiveName": "int256",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "Int256Slot",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2938,
                                "size": 161
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500a3": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol|StorageSlot",
                        "declaringContract": "StorageSlot",
                        "method": {
                            "contractName": "StorageSlot",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "getBytes32Slot",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol",
                            "paramNames": [
                                "slot"
                            ],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 883,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol|StorageSlot.Bytes32Slot",
                                        "containingContract": "StorageSlot",
                                        "structMembers": [
                                            {
                                                "name": "value",
                                                "type": {
                                                    "primitiveName": "bytes32",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "Bytes32Slot",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2419,
                                "size": 163
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500a4": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol|StorageSlot",
                        "declaringContract": "StorageSlot",
                        "method": {
                            "contractName": "StorageSlot",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "getUint256Slot",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol",
                            "paramNames": [
                                "slot"
                            ],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 886,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol|StorageSlot.Uint256Slot",
                                        "containingContract": "StorageSlot",
                                        "structMembers": [
                                            {
                                                "name": "value",
                                                "type": {
                                                    "primitiveName": "uint256",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "Uint256Slot",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2679,
                                "size": 163
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500a5": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol|StorageSlot",
                        "declaringContract": "StorageSlot",
                        "method": {
                            "contractName": "StorageSlot",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "getStringSlot",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol",
                            "paramNames": [
                                "slot"
                            ],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 892,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol|StorageSlot.StringSlot",
                                        "containingContract": "StorageSlot",
                                        "structMembers": [
                                            {
                                                "name": "value",
                                                "type": {
                                                    "type": "StringType"
                                                }
                                            }
                                        ],
                                        "structName": "StringSlot",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3195,
                                "size": 161
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500a6": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol|StorageSlot",
                        "declaringContract": "StorageSlot",
                        "method": {
                            "contractName": "StorageSlot",
                            "fullArgs": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "getStringSlot",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol",
                            "paramNames": [
                                "store"
                            ],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 892,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol|StorageSlot.StringSlot",
                                        "containingContract": "StorageSlot",
                                        "structMembers": [
                                            {
                                                "name": "value",
                                                "type": {
                                                    "type": "StringType"
                                                }
                                            }
                                        ],
                                        "structName": "StringSlot",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3468,
                                "size": 175
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500a7": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol|StorageSlot",
                        "declaringContract": "StorageSlot",
                        "method": {
                            "contractName": "StorageSlot",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "getBytesSlot",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol",
                            "paramNames": [
                                "slot"
                            ],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 895,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol|StorageSlot.BytesSlot",
                                        "containingContract": "StorageSlot",
                                        "structMembers": [
                                            {
                                                "name": "value",
                                                "type": {
                                                    "type": "PackedBytes"
                                                }
                                            }
                                        ],
                                        "structName": "BytesSlot",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3738,
                                "size": 159
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500a8": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol|StorageSlot",
                        "declaringContract": "StorageSlot",
                        "method": {
                            "contractName": "StorageSlot",
                            "fullArgs": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "getBytesSlot",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol",
                            "paramNames": [
                                "store"
                            ],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 895,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol|StorageSlot.BytesSlot",
                                        "containingContract": "StorageSlot",
                                        "structMembers": [
                                            {
                                                "name": "value",
                                                "type": {
                                                    "type": "PackedBytes"
                                                }
                                            }
                                        ],
                                        "structName": "BytesSlot",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4007,
                                "size": 172
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500a9": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Strings.sol|Strings",
                        "declaringContract": "Strings",
                        "method": {
                            "contractName": "Strings",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toString",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 987,
                                "size": 632
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500aa": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Strings.sol|Strings",
                        "declaringContract": "Strings",
                        "method": {
                            "contractName": "Strings",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toStringSigned",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1719,
                                "size": 168
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500ab": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Strings.sol|Strings",
                        "declaringContract": "Strings",
                        "method": {
                            "contractName": "Strings",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toHexString",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
                            "paramNames": [
                                "addr"
                            ],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2973,
                                "size": 148
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500ac": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Strings.sol|Strings",
                        "declaringContract": "Strings",
                        "method": {
                            "contractName": "Strings",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toHexString",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1992,
                                "size": 174
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500ad": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Strings.sol|Strings",
                        "declaringContract": "Strings",
                        "method": {
                            "contractName": "Strings",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toHexString",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
                            "paramNames": [
                                "value",
                                "length"
                            ],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2289,
                                "size": 525
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500ae": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Strings.sol|Strings",
                        "declaringContract": "Strings",
                        "method": {
                            "contractName": "Strings",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toChecksumHexString",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
                            "paramNames": [
                                "addr"
                            ],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3297,
                                "size": 723
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500af": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Strings.sol|Strings",
                        "declaringContract": "Strings",
                        "method": {
                            "contractName": "Strings",
                            "fullArgs": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "equal",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
                            "paramNames": [
                                "a",
                                "b"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4097,
                                "size": 182
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500b0": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Strings.sol|Strings",
                        "declaringContract": "Strings",
                        "method": {
                            "contractName": "Strings",
                            "fullArgs": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "parseUint",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
                            "paramNames": [
                                "input"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4504,
                                "size": 136
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500b1": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Strings.sol|Strings",
                        "declaringContract": "Strings",
                        "method": {
                            "contractName": "Strings",
                            "fullArgs": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "parseUint",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
                            "paramNames": [
                                "input",
                                "begin",
                                "end"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4938,
                                "size": 253
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500b2": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Strings.sol|Strings",
                        "declaringContract": "Strings",
                        "method": {
                            "contractName": "Strings",
                            "fullArgs": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "tryParseUint",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
                            "paramNames": [
                                "input"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5417,
                                "size": 178
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500b3": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Strings.sol|Strings",
                        "declaringContract": "Strings",
                        "method": {
                            "contractName": "Strings",
                            "fullArgs": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "tryParseUint",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
                            "paramNames": [
                                "input",
                                "begin",
                                "end"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5844,
                                "size": 297
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500b4": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Strings.sol|Strings",
                        "declaringContract": "Strings",
                        "method": {
                            "contractName": "Strings",
                            "fullArgs": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_tryParseUintUncheckedBounds",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
                            "paramNames": [
                                "input",
                                "begin",
                                "end"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 6353,
                                "size": 515
                            },
                            "stateMutability": "pure",
                            "visibility": "private"
                        }
                    },
                    "0xf196e500b5": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Strings.sol|Strings",
                        "declaringContract": "Strings",
                        "method": {
                            "contractName": "Strings",
                            "fullArgs": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "parseInt",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
                            "paramNames": [
                                "input"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 7095,
                                "size": 133
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500b6": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Strings.sol|Strings",
                        "declaringContract": "Strings",
                        "method": {
                            "contractName": "Strings",
                            "fullArgs": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "parseInt",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
                            "paramNames": [
                                "input",
                                "begin",
                                "end"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 7535,
                                "size": 249
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500b7": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Strings.sol|Strings",
                        "declaringContract": "Strings",
                        "method": {
                            "contractName": "Strings",
                            "fullArgs": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "tryParseInt",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
                            "paramNames": [
                                "input"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 8082,
                                "size": 175
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500b8": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Strings.sol|Strings",
                        "declaringContract": "Strings",
                        "method": {
                            "contractName": "Strings",
                            "fullArgs": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "tryParseInt",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
                            "paramNames": [
                                "input",
                                "begin",
                                "end"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 8628,
                                "size": 294
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500b9": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Strings.sol|Strings",
                        "declaringContract": "Strings",
                        "method": {
                            "contractName": "Strings",
                            "fullArgs": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "tryParseAddress",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
                            "paramNames": [
                                "input"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 14425,
                                "size": 168
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500ba": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Strings.sol|Strings",
                        "declaringContract": "Strings",
                        "method": {
                            "contractName": "Strings",
                            "fullArgs": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "tryParseAddress",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
                            "paramNames": [
                                "input",
                                "begin",
                                "end"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 14807,
                                "size": 889
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500bb": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Strings.sol|Strings",
                        "declaringContract": "Strings",
                        "method": {
                            "contractName": "Strings",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes1",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_tryParseChr",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
                            "paramNames": [
                                "chr"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint8",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 15702,
                                "size": 524
                            },
                            "stateMutability": "pure",
                            "visibility": "private"
                        }
                    },
                    "0xf196e500bc": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Strings.sol|Strings",
                        "declaringContract": "Strings",
                        "method": {
                            "contractName": "Strings",
                            "fullArgs": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_unsafeReadBytesOffset",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
                            "paramNames": [
                                "buffer",
                                "offset"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 16505,
                                "size": 331
                            },
                            "stateMutability": "pure",
                            "visibility": "private"
                        }
                    },
                    "0xf196e500bd": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Strings.sol|Strings",
                        "declaringContract": "Strings",
                        "method": {
                            "contractName": "Strings",
                            "fullArgs": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "parseHexUint",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
                            "paramNames": [
                                "input",
                                "begin",
                                "end"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 10834,
                                "size": 259
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500be": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Strings.sol|Strings",
                        "declaringContract": "Strings",
                        "method": {
                            "contractName": "Strings",
                            "fullArgs": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "parseHexUint",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
                            "paramNames": [
                                "input"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 10381,
                                "size": 142
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500bf": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Strings.sol|Strings",
                        "declaringContract": "Strings",
                        "method": {
                            "contractName": "Strings",
                            "fullArgs": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_tryParseIntUncheckedBounds",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
                            "paramNames": [
                                "input",
                                "begin",
                                "end"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 9133,
                                "size": 978
                            },
                            "stateMutability": "pure",
                            "visibility": "private"
                        }
                    },
                    "0xf196e500c0": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Strings.sol|Strings",
                        "declaringContract": "Strings",
                        "method": {
                            "contractName": "Strings",
                            "fullArgs": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "tryParseHexUint",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
                            "paramNames": [
                                "input"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 11322,
                                "size": 184
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500c1": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Strings.sol|Strings",
                        "declaringContract": "Strings",
                        "method": {
                            "contractName": "Strings",
                            "fullArgs": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "tryParseHexUint",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
                            "paramNames": [
                                "input",
                                "begin",
                                "end"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 11758,
                                "size": 303
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500c2": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Strings.sol|Strings",
                        "declaringContract": "Strings",
                        "method": {
                            "contractName": "Strings",
                            "fullArgs": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_tryParseHexUintUncheckedBounds",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
                            "paramNames": [
                                "input",
                                "begin",
                                "end"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 12276,
                                "size": 1051
                            },
                            "stateMutability": "pure",
                            "visibility": "private"
                        }
                    },
                    "0xf196e500c3": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Strings.sol|Strings",
                        "declaringContract": "Strings",
                        "method": {
                            "contractName": "Strings",
                            "fullArgs": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "parseAddress",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
                            "paramNames": [
                                "input"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 13550,
                                "size": 142
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500c4": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Strings.sol|Strings",
                        "declaringContract": "Strings",
                        "method": {
                            "contractName": "Strings",
                            "fullArgs": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "parseAddress",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
                            "paramNames": [
                                "input",
                                "begin",
                                "end"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 13955,
                                "size": 268
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500c5": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol|TransientSlot",
                        "declaringContract": "TransientSlot",
                        "method": {
                            "contractName": "TransientSlot",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "asAddress",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol",
                            "paramNames": [
                                "slot"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "astId": 5409,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol|TransientSlot.AddressSlot",
                                        "containingContract": "TransientSlot",
                                        "type": "UserDefinedValueType",
                                        "valueTypeAliasedName": {
                                            "primitiveName": "bytes32",
                                            "type": "Primitive"
                                        },
                                        "valueTypeName": "AddressSlot"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1368,
                                "size": 115
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500c6": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol|TransientSlot",
                        "declaringContract": "TransientSlot",
                        "method": {
                            "contractName": "TransientSlot",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "asBoolean",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol",
                            "paramNames": [
                                "slot"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "astId": 5426,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol|TransientSlot.BooleanSlot",
                                        "containingContract": "TransientSlot",
                                        "type": "UserDefinedValueType",
                                        "valueTypeAliasedName": {
                                            "primitiveName": "bytes32",
                                            "type": "Primitive"
                                        },
                                        "valueTypeName": "BooleanSlot"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1663,
                                "size": 115
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500c7": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol|TransientSlot",
                        "declaringContract": "TransientSlot",
                        "method": {
                            "contractName": "TransientSlot",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "asInt256",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol",
                            "paramNames": [
                                "slot"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "astId": 5477,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol|TransientSlot.Int256Slot",
                                        "containingContract": "TransientSlot",
                                        "type": "UserDefinedValueType",
                                        "valueTypeAliasedName": {
                                            "primitiveName": "bytes32",
                                            "type": "Primitive"
                                        },
                                        "valueTypeName": "Int256Slot"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2554,
                                "size": 112
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500c8": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol|TransientSlot",
                        "declaringContract": "TransientSlot",
                        "method": {
                            "contractName": "TransientSlot",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "asBytes32",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol",
                            "paramNames": [
                                "slot"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "astId": 5443,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol|TransientSlot.Bytes32Slot",
                                        "containingContract": "TransientSlot",
                                        "type": "UserDefinedValueType",
                                        "valueTypeAliasedName": {
                                            "primitiveName": "bytes32",
                                            "type": "Primitive"
                                        },
                                        "valueTypeName": "Bytes32Slot"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1961,
                                "size": 115
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500c9": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol|TransientSlot",
                        "declaringContract": "TransientSlot",
                        "method": {
                            "contractName": "TransientSlot",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "asUint256",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol",
                            "paramNames": [
                                "slot"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "astId": 5460,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol|TransientSlot.Uint256Slot",
                                        "containingContract": "TransientSlot",
                                        "type": "UserDefinedValueType",
                                        "valueTypeAliasedName": {
                                            "primitiveName": "bytes32",
                                            "type": "Primitive"
                                        },
                                        "valueTypeName": "Uint256Slot"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2259,
                                "size": 115
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500ca": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol|TransientSlot",
                        "declaringContract": "TransientSlot",
                        "method": {
                            "contractName": "TransientSlot",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "astId": 5409,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol|TransientSlot.AddressSlot",
                                        "containingContract": "TransientSlot",
                                        "type": "UserDefinedValueType",
                                        "valueTypeAliasedName": {
                                            "primitiveName": "bytes32",
                                            "type": "Primitive"
                                        },
                                        "valueTypeName": "AddressSlot"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "tload",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol",
                            "paramNames": [
                                "slot"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2761,
                                "size": 156
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500cb": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol|TransientSlot",
                        "declaringContract": "TransientSlot",
                        "method": {
                            "contractName": "TransientSlot",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "astId": 5409,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol|TransientSlot.AddressSlot",
                                        "containingContract": "TransientSlot",
                                        "type": "UserDefinedValueType",
                                        "valueTypeAliasedName": {
                                            "primitiveName": "bytes32",
                                            "type": "Primitive"
                                        },
                                        "valueTypeName": "AddressSlot"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "tstore",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol",
                            "paramNames": [
                                "slot",
                                "value"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3006,
                                "size": 142
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500cc": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol|TransientSlot",
                        "declaringContract": "TransientSlot",
                        "method": {
                            "contractName": "TransientSlot",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "astId": 5426,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol|TransientSlot.BooleanSlot",
                                        "containingContract": "TransientSlot",
                                        "type": "UserDefinedValueType",
                                        "valueTypeAliasedName": {
                                            "primitiveName": "bytes32",
                                            "type": "Primitive"
                                        },
                                        "valueTypeName": "BooleanSlot"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "tload",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol",
                            "paramNames": [
                                "slot"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3243,
                                "size": 153
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500cd": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol|TransientSlot",
                        "declaringContract": "TransientSlot",
                        "method": {
                            "contractName": "TransientSlot",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "astId": 5426,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol|TransientSlot.BooleanSlot",
                                        "containingContract": "TransientSlot",
                                        "type": "UserDefinedValueType",
                                        "valueTypeAliasedName": {
                                            "primitiveName": "bytes32",
                                            "type": "Primitive"
                                        },
                                        "valueTypeName": "BooleanSlot"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "tstore",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol",
                            "paramNames": [
                                "slot",
                                "value"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3485,
                                "size": 139
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500ce": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol|TransientSlot",
                        "declaringContract": "TransientSlot",
                        "method": {
                            "contractName": "TransientSlot",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "astId": 5443,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol|TransientSlot.Bytes32Slot",
                                        "containingContract": "TransientSlot",
                                        "type": "UserDefinedValueType",
                                        "valueTypeAliasedName": {
                                            "primitiveName": "bytes32",
                                            "type": "Primitive"
                                        },
                                        "valueTypeName": "Bytes32Slot"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "tload",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol",
                            "paramNames": [
                                "slot"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3719,
                                "size": 156
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500cf": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol|TransientSlot",
                        "declaringContract": "TransientSlot",
                        "method": {
                            "contractName": "TransientSlot",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "astId": 5443,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol|TransientSlot.Bytes32Slot",
                                        "containingContract": "TransientSlot",
                                        "type": "UserDefinedValueType",
                                        "valueTypeAliasedName": {
                                            "primitiveName": "bytes32",
                                            "type": "Primitive"
                                        },
                                        "valueTypeName": "Bytes32Slot"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "tstore",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol",
                            "paramNames": [
                                "slot",
                                "value"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3964,
                                "size": 142
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500d0": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol|TransientSlot",
                        "declaringContract": "TransientSlot",
                        "method": {
                            "contractName": "TransientSlot",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "astId": 5460,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol|TransientSlot.Uint256Slot",
                                        "containingContract": "TransientSlot",
                                        "type": "UserDefinedValueType",
                                        "valueTypeAliasedName": {
                                            "primitiveName": "bytes32",
                                            "type": "Primitive"
                                        },
                                        "valueTypeName": "Uint256Slot"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "tload",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol",
                            "paramNames": [
                                "slot"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4201,
                                "size": 156
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500d1": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol|TransientSlot",
                        "declaringContract": "TransientSlot",
                        "method": {
                            "contractName": "TransientSlot",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "astId": 5460,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol|TransientSlot.Uint256Slot",
                                        "containingContract": "TransientSlot",
                                        "type": "UserDefinedValueType",
                                        "valueTypeAliasedName": {
                                            "primitiveName": "bytes32",
                                            "type": "Primitive"
                                        },
                                        "valueTypeName": "Uint256Slot"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "tstore",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol",
                            "paramNames": [
                                "slot",
                                "value"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4446,
                                "size": 142
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500d2": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol|TransientSlot",
                        "declaringContract": "TransientSlot",
                        "method": {
                            "contractName": "TransientSlot",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "astId": 5477,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol|TransientSlot.Int256Slot",
                                        "containingContract": "TransientSlot",
                                        "type": "UserDefinedValueType",
                                        "valueTypeAliasedName": {
                                            "primitiveName": "bytes32",
                                            "type": "Primitive"
                                        },
                                        "valueTypeName": "Int256Slot"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "tload",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol",
                            "paramNames": [
                                "slot"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4683,
                                "size": 154
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500d3": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol|TransientSlot",
                        "declaringContract": "TransientSlot",
                        "method": {
                            "contractName": "TransientSlot",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "astId": 5477,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol|TransientSlot.Int256Slot",
                                        "containingContract": "TransientSlot",
                                        "type": "UserDefinedValueType",
                                        "valueTypeAliasedName": {
                                            "primitiveName": "bytes32",
                                            "type": "Primitive"
                                        },
                                        "valueTypeName": "Int256Slot"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "tstore",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol",
                            "paramNames": [
                                "slot",
                                "value"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4926,
                                "size": 140
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500d4": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol|ECDSA",
                        "declaringContract": "ECDSA",
                        "method": {
                            "contractName": "ECDSA",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "tryRecover",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
                            "paramNames": [
                                "hash",
                                "signature"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "astId": 19354,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol|ECDSA.RecoverError",
                                        "containingContract": "ECDSA",
                                        "enumMembers": [
                                            {
                                                "name": "NoError"
                                            },
                                            {
                                                "name": "InvalidSignature"
                                            },
                                            {
                                                "name": "InvalidSignatureLength"
                                            },
                                            {
                                                "name": "InvalidSignatureS"
                                            }
                                        ],
                                        "enumName": "RecoverError",
                                        "type": "UserDefinedEnum"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2129,
                                "size": 778
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500d5": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol|ECDSA",
                        "declaringContract": "ECDSA",
                        "method": {
                            "contractName": "ECDSA",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "recover",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
                            "paramNames": [
                                "hash",
                                "signature"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3714,
                                "size": 255
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500d6": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol|ECDSA",
                        "declaringContract": "ECDSA",
                        "method": {
                            "contractName": "ECDSA",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint8",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "tryRecover",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
                            "paramNames": [
                                "hash",
                                "v",
                                "r",
                                "s"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "astId": 19354,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol|ECDSA.RecoverError",
                                        "containingContract": "ECDSA",
                                        "enumMembers": [
                                            {
                                                "name": "NoError"
                                            },
                                            {
                                                "name": "InvalidSignature"
                                            },
                                            {
                                                "name": "InvalidSignatureLength"
                                            },
                                            {
                                                "name": "InvalidSignatureS"
                                            }
                                        ],
                                        "enumName": "RecoverError",
                                        "type": "UserDefinedEnum"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5203,
                                "size": 1551
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500d7": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol|ECDSA",
                        "declaringContract": "ECDSA",
                        "method": {
                            "contractName": "ECDSA",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "tryRecover",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
                            "paramNames": [
                                "hash",
                                "r",
                                "vs"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "astId": 19354,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol|ECDSA.RecoverError",
                                        "containingContract": "ECDSA",
                                        "enumMembers": [
                                            {
                                                "name": "NoError"
                                            },
                                            {
                                                "name": "InvalidSignature"
                                            },
                                            {
                                                "name": "InvalidSignatureLength"
                                            },
                                            {
                                                "name": "InvalidSignatureS"
                                            }
                                        ],
                                        "enumName": "RecoverError",
                                        "type": "UserDefinedEnum"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4185,
                                "size": 505
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500d8": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol|ECDSA",
                        "declaringContract": "ECDSA",
                        "method": {
                            "contractName": "ECDSA",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "recover",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
                            "paramNames": [
                                "hash",
                                "r",
                                "vs"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4817,
                                "size": 250
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500d9": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol|ECDSA",
                        "declaringContract": "ECDSA",
                        "method": {
                            "contractName": "ECDSA",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint8",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "recover",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
                            "paramNames": [
                                "hash",
                                "v",
                                "r",
                                "s"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 6887,
                                "size": 260
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500da": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol|ECDSA",
                        "declaringContract": "ECDSA",
                        "method": {
                            "contractName": "ECDSA",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "astId": 19354,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol|ECDSA.RecoverError",
                                        "containingContract": "ECDSA",
                                        "enumMembers": [
                                            {
                                                "name": "NoError"
                                            },
                                            {
                                                "name": "InvalidSignature"
                                            },
                                            {
                                                "name": "InvalidSignatureLength"
                                            },
                                            {
                                                "name": "InvalidSignatureS"
                                            }
                                        ],
                                        "enumName": "RecoverError",
                                        "type": "UserDefinedEnum"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_throwError",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
                            "paramNames": [
                                "error",
                                "errorArg"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 7280,
                                "size": 532
                            },
                            "stateMutability": "pure",
                            "visibility": "private"
                        }
                    },
                    "0xf196e500db": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol|EIP712",
                        "declaringContract": "EIP712",
                        "method": {
                            "contractName": "EIP712",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_domainSeparatorV4",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3845,
                                "size": 262
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500dc": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol|EIP712",
                        "declaringContract": "EIP712",
                        "method": {
                            "contractName": "EIP712",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_EIP712Name",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 6021,
                                "size": 126
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500dd": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol|EIP712",
                        "declaringContract": "EIP712",
                        "method": {
                            "contractName": "EIP712",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_buildDomainSeparator",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4113,
                                "size": 179
                            },
                            "stateMutability": "view",
                            "visibility": "private"
                        }
                    },
                    "0xf196e500de": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol|EIP712",
                        "declaringContract": "EIP712",
                        "method": {
                            "contractName": "EIP712",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_hashTypedDataV4",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol",
                            "paramNames": [
                                "structHash"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4917,
                                "size": 176
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500df": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol|EIP712",
                        "declaringContract": "EIP712",
                        "method": {
                            "contractName": "EIP712",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_EIP712Version",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 6473,
                                "size": 135
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500e0": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol|MessageHashUtils",
                        "declaringContract": "MessageHashUtils",
                        "method": {
                            "contractName": "MessageHashUtils",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toEthSignedMessageHash",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
                            "paramNames": [
                                "messageHash"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1222,
                                "size": 433
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500e1": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol|MessageHashUtils",
                        "declaringContract": "MessageHashUtils",
                        "method": {
                            "contractName": "MessageHashUtils",
                            "fullArgs": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toEthSignedMessageHash",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
                            "paramNames": [
                                "message"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2121,
                                "size": 229
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500e2": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol|MessageHashUtils",
                        "declaringContract": "MessageHashUtils",
                        "method": {
                            "contractName": "MessageHashUtils",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toDataWithIntendedValidatorHash",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
                            "paramNames": [
                                "validator",
                                "data"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2693,
                                "size": 191
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500e3": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol|MessageHashUtils",
                        "declaringContract": "MessageHashUtils",
                        "method": {
                            "contractName": "MessageHashUtils",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toTypedDataHash",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
                            "paramNames": [
                                "domainSeparator",
                                "structHash"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3326,
                                "size": 374
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500e4": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol|ERC165",
                        "declaringContract": "ERC165",
                        "method": {
                            "contractName": "ERC165",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes4",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "supportsInterface",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
                            "paramNames": [
                                "interfaceId"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "01ffc9a7",
                            "sourceBytes": {
                                "begin": 763,
                                "size": 146
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e500e5": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "tryAdd",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "a",
                                "b"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 586,
                                "size": 231
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500e6": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "trySub",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "a",
                                "b"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 937,
                                "size": 204
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500e7": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "tryMod",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "a",
                                "b"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2235,
                                "size": 205
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500e8": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "tryMul",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "a",
                                "b"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1264,
                                "size": 508
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500e9": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "tryDiv",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "a",
                                "b"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1896,
                                "size": 205
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500ea": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "ternary",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "condition",
                                "a",
                                "b"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2825,
                                "size": 294
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500eb": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "max",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "a",
                                "b"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3189,
                                "size": 111
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500ec": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "min",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "a",
                                "b"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3371,
                                "size": 111
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500ed": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "average",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "a",
                                "b"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3595,
                                "size": 153
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500ee": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "ceilDiv",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "a",
                                "b"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3969,
                                "size": 704
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500ef": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "mulDiv",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "x",
                                "y",
                                "denominator"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4996,
                                "size": 4226
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500f0": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "astId": 6328,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math.Rounding",
                                        "containingContract": "Math",
                                        "enumMembers": [
                                            {
                                                "name": "Floor"
                                            },
                                            {
                                                "name": "Ceil"
                                            },
                                            {
                                                "name": "Trunc"
                                            },
                                            {
                                                "name": "Expand"
                                            }
                                        ],
                                        "enumName": "Rounding",
                                        "type": "UserDefinedEnum"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "mulDiv",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "x",
                                "y",
                                "denominator",
                                "rounding"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 9351,
                                "size": 238
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500f1": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "invMod",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "a",
                                "n"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 10153,
                                "size": 1919
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500f2": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "invModPrime",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "a",
                                "p"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 12597,
                                "size": 157
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500f3": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "modExp",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "b",
                                "e",
                                "m"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 13443,
                                "size": 255
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500f4": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "tryModExp",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "b",
                                "e",
                                "m"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 14447,
                                "size": 1598
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500f5": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "astId": 6328,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math.Rounding",
                                        "containingContract": "Math",
                                        "enumMembers": [
                                            {
                                                "name": "Floor"
                                            },
                                            {
                                                "name": "Ceil"
                                            },
                                            {
                                                "name": "Trunc"
                                            },
                                            {
                                                "name": "Expand"
                                            }
                                        ],
                                        "enumName": "Rounding",
                                        "type": "UserDefinedEnum"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "log10",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "value",
                                "rounding"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 26386,
                                "size": 258
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500f6": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "log256",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 26901,
                                "size": 737
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500f7": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "astId": 6328,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math.Rounding",
                                        "containingContract": "Math",
                                        "enumMembers": [
                                            {
                                                "name": "Floor"
                                            },
                                            {
                                                "name": "Ceil"
                                            },
                                            {
                                                "name": "Trunc"
                                            },
                                            {
                                                "name": "Expand"
                                            }
                                        ],
                                        "enumName": "Rounding",
                                        "type": "UserDefinedEnum"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "log256",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "value",
                                "rounding"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 27793,
                                "size": 266
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500f8": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "astId": 6328,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math.Rounding",
                                        "containingContract": "Math",
                                        "enumMembers": [
                                            {
                                                "name": "Floor"
                                            },
                                            {
                                                "name": "Ceil"
                                            },
                                            {
                                                "name": "Trunc"
                                            },
                                            {
                                                "name": "Expand"
                                            }
                                        ],
                                        "enumName": "Rounding",
                                        "type": "UserDefinedEnum"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "unsignedRoundsUp",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "rounding"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 28183,
                                "size": 122
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500f9": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_zeroBytes",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "byteArray"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 17529,
                                "size": 248
                            },
                            "stateMutability": "pure",
                            "visibility": "private"
                        }
                    },
                    "0xf196e500fa": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "tryModExp",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "b",
                                "e",
                                "m"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 16520,
                                "size": 926
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500fb": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "modExp",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "b",
                                "e",
                                "m"
                            ],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 16141,
                                "size": 280
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500fc": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "sqrt",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "a"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 18080,
                                "size": 5181
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500fd": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "astId": 6328,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math.Rounding",
                                        "containingContract": "Math",
                                        "enumMembers": [
                                            {
                                                "name": "Floor"
                                            },
                                            {
                                                "name": "Ceil"
                                            },
                                            {
                                                "name": "Trunc"
                                            },
                                            {
                                                "name": "Expand"
                                            }
                                        ],
                                        "enumName": "Rounding",
                                        "type": "UserDefinedEnum"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "sqrt",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "a",
                                "rounding"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 23358,
                                "size": 247
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500fe": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "log2",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 23735,
                                "size": 1042
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500ff": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "astId": 6328,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math.Rounding",
                                        "containingContract": "Math",
                                        "enumMembers": [
                                            {
                                                "name": "Floor"
                                            },
                                            {
                                                "name": "Ceil"
                                            },
                                            {
                                                "name": "Trunc"
                                            },
                                            {
                                                "name": "Expand"
                                            }
                                        ],
                                        "enumName": "Rounding",
                                        "type": "UserDefinedEnum"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "log2",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "value",
                                "rounding"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 24930,
                                "size": 255
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50100": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math",
                        "declaringContract": "Math",
                        "method": {
                            "contractName": "Math",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "log10",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 25316,
                                "size": 916
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50101": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint248",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint248",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1629,
                                "size": 218
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50102": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint240",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint240",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2138,
                                "size": 218
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50103": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint216",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint216",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3665,
                                "size": 218
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50104": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint232",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint232",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2647,
                                "size": 218
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50105": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint224",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint224",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3156,
                                "size": 218
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50106": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint208",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint208",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4174,
                                "size": 218
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50107": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint200",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint200",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4683,
                                "size": 218
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50108": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint192",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint192",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5192,
                                "size": 218
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50109": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint184",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint184",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5701,
                                "size": 218
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5010a": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint176",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint176",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 6210,
                                "size": 218
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5010b": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint168",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint168",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 6719,
                                "size": 218
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5010c": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint160",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint160",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 7228,
                                "size": 218
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5010d": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint152",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint152",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 7737,
                                "size": 218
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5010e": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint144",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint144",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 8246,
                                "size": 218
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5010f": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint136",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint136",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 8755,
                                "size": 218
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50110": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint128",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint128",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 9264,
                                "size": 218
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50111": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt216",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int216",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 19875,
                                "size": 224
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50112": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt208",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int208",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 20422,
                                "size": 224
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50113": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt200",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int200",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 20969,
                                "size": 224
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50114": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt192",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int192",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 21516,
                                "size": 224
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50115": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt184",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int184",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 22063,
                                "size": 224
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50116": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt176",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int176",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 22610,
                                "size": 224
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50117": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt168",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int168",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 23157,
                                "size": 224
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50118": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint16",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint16",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 16296,
                                "size": 213
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50119": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint8",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint8",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 16792,
                                "size": 208
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5011a": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint256",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 17171,
                                "size": 193
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5011b": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt248",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int248",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 17687,
                                "size": 224
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5011c": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt240",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int240",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 18234,
                                "size": 224
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5011d": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt232",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int232",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 18781,
                                "size": 224
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5011e": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt224",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int224",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 19328,
                                "size": 224
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5011f": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint40",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint40",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 14796,
                                "size": 213
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50120": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint32",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 15296,
                                "size": 213
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50121": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint24",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint24",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 15796,
                                "size": 213
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50122": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt160",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int160",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 23704,
                                "size": 224
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50123": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt152",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int152",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 24251,
                                "size": 224
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50124": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt144",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int144",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 24798,
                                "size": 224
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50125": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt136",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int136",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 25345,
                                "size": 224
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50126": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt128",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int128",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 25892,
                                "size": 224
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50127": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt120",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int120",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 26439,
                                "size": 224
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50128": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt112",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int112",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 26986,
                                "size": 224
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50129": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt104",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int104",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 27533,
                                "size": 224
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5012a": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt96",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int96",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 28075,
                                "size": 220
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5012b": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt88",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int88",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 28613,
                                "size": 220
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5012c": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt80",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int80",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 29151,
                                "size": 220
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5012d": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt72",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int72",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 29689,
                                "size": 220
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5012e": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt56",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int56",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 30765,
                                "size": 220
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5012f": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt48",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int48",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 31303,
                                "size": 220
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50130": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt40",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int40",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 31841,
                                "size": 220
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50131": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt32",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 32379,
                                "size": 220
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50132": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt24",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int24",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 32917,
                                "size": 220
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50133": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt16",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int16",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 33455,
                                "size": 220
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50134": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt8",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int8",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 33988,
                                "size": 216
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50135": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt256",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 34380,
                                "size": 314
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50136": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "b"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 34795,
                                "size": 145
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50137": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toInt64",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int64",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 30227,
                                "size": 220
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50138": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint104",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint104",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 10791,
                                "size": 218
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50139": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint112",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint112",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 10282,
                                "size": 218
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5013a": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint120",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint120",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 9773,
                                "size": 218
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5013b": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint96",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint96",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 11296,
                                "size": 213
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5013c": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint88",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint88",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 11796,
                                "size": 213
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5013d": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint80",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint80",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 12296,
                                "size": 213
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5013e": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint72",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint72",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 12796,
                                "size": 213
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5013f": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint64",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint64",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 13296,
                                "size": 213
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50140": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint56",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint56",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 13796,
                                "size": 213
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50141": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol|SafeCast",
                        "declaringContract": "SafeCast",
                        "method": {
                            "contractName": "SafeCast",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toUint48",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
                            "paramNames": [
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint48",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 14296,
                                "size": 213
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50142": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol|SignedMath",
                        "declaringContract": "SignedMath",
                        "method": {
                            "contractName": "SignedMath",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "ternary",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
                            "paramNames": [
                                "condition",
                                "a",
                                "b"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 662,
                                "size": 299
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50143": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol|SignedMath",
                        "declaringContract": "SignedMath",
                        "method": {
                            "contractName": "SignedMath",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "max",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
                            "paramNames": [
                                "a",
                                "b"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1038,
                                "size": 108
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50144": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol|SignedMath",
                        "declaringContract": "SignedMath",
                        "method": {
                            "contractName": "SignedMath",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "abs",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
                            "paramNames": [
                                "n"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1788,
                                "size": 822
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50145": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol|SignedMath",
                        "declaringContract": "SignedMath",
                        "method": {
                            "contractName": "SignedMath",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "min",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
                            "paramNames": [
                                "a",
                                "b"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1224,
                                "size": 108
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50146": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol|SignedMath",
                        "declaringContract": "SignedMath",
                        "method": {
                            "contractName": "SignedMath",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "average",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
                            "paramNames": [
                                "a",
                                "b"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1469,
                                "size": 230
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50147": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints",
                        "declaringContract": "Checkpoints",
                        "method": {
                            "contractName": "Checkpoints",
                            "fullArgs": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 20477,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Trace224",
                                        "containingContract": "Checkpoints",
                                        "structMembers": [
                                            {
                                                "name": "_checkpoints",
                                                "type": {
                                                    "dynamicArrayBaseType": {
                                                        "astId": 20482,
                                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Checkpoint224",
                                                        "containingContract": "Checkpoints",
                                                        "structMembers": [
                                                            {
                                                                "name": "_key",
                                                                "type": {
                                                                    "primitiveName": "uint32",
                                                                    "type": "Primitive"
                                                                }
                                                            },
                                                            {
                                                                "name": "_value",
                                                                "type": {
                                                                    "primitiveName": "uint224",
                                                                    "type": "Primitive"
                                                                }
                                                            }
                                                        ],
                                                        "structName": "Checkpoint224",
                                                        "type": "UserDefinedStruct"
                                                    },
                                                    "type": "Array"
                                                }
                                            }
                                        ],
                                        "structName": "Trace224",
                                        "type": "UserDefinedStruct"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint32",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint224",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "push",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol",
                            "paramNames": [
                                "self",
                                "key",
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint224",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint224",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1277,
                                "size": 210
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50148": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints",
                        "declaringContract": "Checkpoints",
                        "method": {
                            "contractName": "Checkpoints",
                            "fullArgs": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 20477,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Trace224",
                                        "containingContract": "Checkpoints",
                                        "structMembers": [
                                            {
                                                "name": "_checkpoints",
                                                "type": {
                                                    "dynamicArrayBaseType": {
                                                        "astId": 20482,
                                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Checkpoint224",
                                                        "containingContract": "Checkpoints",
                                                        "structMembers": [
                                                            {
                                                                "name": "_key",
                                                                "type": {
                                                                    "primitiveName": "uint32",
                                                                    "type": "Primitive"
                                                                }
                                                            },
                                                            {
                                                                "name": "_value",
                                                                "type": {
                                                                    "primitiveName": "uint224",
                                                                    "type": "Primitive"
                                                                }
                                                            }
                                                        ],
                                                        "structName": "Checkpoint224",
                                                        "type": "UserDefinedStruct"
                                                    },
                                                    "type": "Array"
                                                }
                                            }
                                        ],
                                        "structName": "Trace224",
                                        "type": "UserDefinedStruct"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "lowerLookup",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol",
                            "paramNames": [
                                "self",
                                "key"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint224",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1652,
                                "size": 295
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50149": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints",
                        "declaringContract": "Checkpoints",
                        "method": {
                            "contractName": "Checkpoints",
                            "fullArgs": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 20477,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Trace224",
                                        "containingContract": "Checkpoints",
                                        "structMembers": [
                                            {
                                                "name": "_checkpoints",
                                                "type": {
                                                    "dynamicArrayBaseType": {
                                                        "astId": 20482,
                                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Checkpoint224",
                                                        "containingContract": "Checkpoints",
                                                        "structMembers": [
                                                            {
                                                                "name": "_key",
                                                                "type": {
                                                                    "primitiveName": "uint32",
                                                                    "type": "Primitive"
                                                                }
                                                            },
                                                            {
                                                                "name": "_value",
                                                                "type": {
                                                                    "primitiveName": "uint224",
                                                                    "type": "Primitive"
                                                                }
                                                            }
                                                        ],
                                                        "structName": "Checkpoint224",
                                                        "type": "UserDefinedStruct"
                                                    },
                                                    "type": "Array"
                                                }
                                            }
                                        ],
                                        "structName": "Trace224",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "latest",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol",
                            "paramNames": [
                                "self"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint224",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3442,
                                "size": 206
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5014a": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints",
                        "declaringContract": "Checkpoints",
                        "method": {
                            "contractName": "Checkpoints",
                            "fullArgs": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 20477,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Trace224",
                                        "containingContract": "Checkpoints",
                                        "structMembers": [
                                            {
                                                "name": "_checkpoints",
                                                "type": {
                                                    "dynamicArrayBaseType": {
                                                        "astId": 20482,
                                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Checkpoint224",
                                                        "containingContract": "Checkpoints",
                                                        "structMembers": [
                                                            {
                                                                "name": "_key",
                                                                "type": {
                                                                    "primitiveName": "uint32",
                                                                    "type": "Primitive"
                                                                }
                                                            },
                                                            {
                                                                "name": "_value",
                                                                "type": {
                                                                    "primitiveName": "uint224",
                                                                    "type": "Primitive"
                                                                }
                                                            }
                                                        ],
                                                        "structName": "Checkpoint224",
                                                        "type": "UserDefinedStruct"
                                                    },
                                                    "type": "Array"
                                                }
                                            }
                                        ],
                                        "structName": "Trace224",
                                        "type": "UserDefinedStruct"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "upperLookup",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol",
                            "paramNames": [
                                "self",
                                "key"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint224",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2114,
                                "size": 297
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5014b": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints",
                        "declaringContract": "Checkpoints",
                        "method": {
                            "contractName": "Checkpoints",
                            "fullArgs": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 20477,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Trace224",
                                        "containingContract": "Checkpoints",
                                        "structMembers": [
                                            {
                                                "name": "_checkpoints",
                                                "type": {
                                                    "dynamicArrayBaseType": {
                                                        "astId": 20482,
                                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Checkpoint224",
                                                        "containingContract": "Checkpoints",
                                                        "structMembers": [
                                                            {
                                                                "name": "_key",
                                                                "type": {
                                                                    "primitiveName": "uint32",
                                                                    "type": "Primitive"
                                                                }
                                                            },
                                                            {
                                                                "name": "_value",
                                                                "type": {
                                                                    "primitiveName": "uint224",
                                                                    "type": "Primitive"
                                                                }
                                                            }
                                                        ],
                                                        "structName": "Checkpoint224",
                                                        "type": "UserDefinedStruct"
                                                    },
                                                    "type": "Array"
                                                }
                                            }
                                        ],
                                        "structName": "Trace224",
                                        "type": "UserDefinedStruct"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "upperLookupRecent",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol",
                            "paramNames": [
                                "self",
                                "key"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint224",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2716,
                                "size": 606
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5014c": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints",
                        "declaringContract": "Checkpoints",
                        "method": {
                            "contractName": "Checkpoints",
                            "fullArgs": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 20477,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Trace224",
                                        "containingContract": "Checkpoints",
                                        "structMembers": [
                                            {
                                                "name": "_checkpoints",
                                                "type": {
                                                    "dynamicArrayBaseType": {
                                                        "astId": 20482,
                                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Checkpoint224",
                                                        "containingContract": "Checkpoints",
                                                        "structMembers": [
                                                            {
                                                                "name": "_key",
                                                                "type": {
                                                                    "primitiveName": "uint32",
                                                                    "type": "Primitive"
                                                                }
                                                            },
                                                            {
                                                                "name": "_value",
                                                                "type": {
                                                                    "primitiveName": "uint224",
                                                                    "type": "Primitive"
                                                                }
                                                            }
                                                        ],
                                                        "structName": "Checkpoint224",
                                                        "type": "UserDefinedStruct"
                                                    },
                                                    "type": "Array"
                                                }
                                            }
                                        ],
                                        "structName": "Trace224",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "latestCheckpoint",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol",
                            "paramNames": [
                                "self"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint32",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint224",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3827,
                                "size": 389
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5014d": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints",
                        "declaringContract": "Checkpoints",
                        "method": {
                            "contractName": "Checkpoints",
                            "fullArgs": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 20477,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Trace224",
                                        "containingContract": "Checkpoints",
                                        "structMembers": [
                                            {
                                                "name": "_checkpoints",
                                                "type": {
                                                    "dynamicArrayBaseType": {
                                                        "astId": 20482,
                                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Checkpoint224",
                                                        "containingContract": "Checkpoints",
                                                        "structMembers": [
                                                            {
                                                                "name": "_key",
                                                                "type": {
                                                                    "primitiveName": "uint32",
                                                                    "type": "Primitive"
                                                                }
                                                            },
                                                            {
                                                                "name": "_value",
                                                                "type": {
                                                                    "primitiveName": "uint224",
                                                                    "type": "Primitive"
                                                                }
                                                            }
                                                        ],
                                                        "structName": "Checkpoint224",
                                                        "type": "UserDefinedStruct"
                                                    },
                                                    "type": "Array"
                                                }
                                            }
                                        ],
                                        "structName": "Trace224",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "length",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol",
                            "paramNames": [
                                "self"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4284,
                                "size": 119
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5014e": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints",
                        "declaringContract": "Checkpoints",
                        "method": {
                            "contractName": "Checkpoints",
                            "fullArgs": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 20477,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Trace224",
                                        "containingContract": "Checkpoints",
                                        "structMembers": [
                                            {
                                                "name": "_checkpoints",
                                                "type": {
                                                    "dynamicArrayBaseType": {
                                                        "astId": 20482,
                                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Checkpoint224",
                                                        "containingContract": "Checkpoints",
                                                        "structMembers": [
                                                            {
                                                                "name": "_key",
                                                                "type": {
                                                                    "primitiveName": "uint32",
                                                                    "type": "Primitive"
                                                                }
                                                            },
                                                            {
                                                                "name": "_value",
                                                                "type": {
                                                                    "primitiveName": "uint224",
                                                                    "type": "Primitive"
                                                                }
                                                            }
                                                        ],
                                                        "structName": "Checkpoint224",
                                                        "type": "UserDefinedStruct"
                                                    },
                                                    "type": "Array"
                                                }
                                            }
                                        ],
                                        "structName": "Trace224",
                                        "type": "UserDefinedStruct"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "at",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol",
                            "paramNames": [
                                "self",
                                "pos"
                            ],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "astId": 20482,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Checkpoint224",
                                        "containingContract": "Checkpoints",
                                        "structMembers": [
                                            {
                                                "name": "_key",
                                                "type": {
                                                    "primitiveName": "uint32",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "_value",
                                                "type": {
                                                    "primitiveName": "uint224",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "Checkpoint224",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4475,
                                "size": 138
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5014f": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints",
                        "declaringContract": "Checkpoints",
                        "method": {
                            "contractName": "Checkpoints",
                            "fullArgs": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "dynamicArrayBaseType": {
                                            "astId": 20482,
                                            "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Checkpoint224",
                                            "containingContract": "Checkpoints",
                                            "structMembers": [
                                                {
                                                    "name": "_key",
                                                    "type": {
                                                        "primitiveName": "uint32",
                                                        "type": "Primitive"
                                                    }
                                                },
                                                {
                                                    "name": "_value",
                                                    "type": {
                                                        "primitiveName": "uint224",
                                                        "type": "Primitive"
                                                    }
                                                }
                                            ],
                                            "structName": "Checkpoint224",
                                            "type": "UserDefinedStruct"
                                        },
                                        "type": "Array"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint32",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint224",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_insert",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol",
                            "paramNames": [
                                "self",
                                "key",
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint224",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint224",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4789,
                                "size": 922
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50150": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints",
                        "declaringContract": "Checkpoints",
                        "method": {
                            "contractName": "Checkpoints",
                            "fullArgs": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "dynamicArrayBaseType": {
                                            "astId": 20482,
                                            "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Checkpoint224",
                                            "containingContract": "Checkpoints",
                                            "structMembers": [
                                                {
                                                    "name": "_key",
                                                    "type": {
                                                        "primitiveName": "uint32",
                                                        "type": "Primitive"
                                                    }
                                                },
                                                {
                                                    "name": "_value",
                                                    "type": {
                                                        "primitiveName": "uint224",
                                                        "type": "Primitive"
                                                    }
                                                }
                                            ],
                                            "structName": "Checkpoint224",
                                            "type": "UserDefinedStruct"
                                        },
                                        "type": "Array"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint32",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_upperBinaryLookup",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol",
                            "paramNames": [
                                "self",
                                "key",
                                "low",
                                "high"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 6061,
                                "size": 433
                            },
                            "stateMutability": "view",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50151": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints",
                        "declaringContract": "Checkpoints",
                        "method": {
                            "contractName": "Checkpoints",
                            "fullArgs": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "dynamicArrayBaseType": {
                                            "astId": 20482,
                                            "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Checkpoint224",
                                            "containingContract": "Checkpoints",
                                            "structMembers": [
                                                {
                                                    "name": "_key",
                                                    "type": {
                                                        "primitiveName": "uint32",
                                                        "type": "Primitive"
                                                    }
                                                },
                                                {
                                                    "name": "_value",
                                                    "type": {
                                                        "primitiveName": "uint224",
                                                        "type": "Primitive"
                                                    }
                                                }
                                            ],
                                            "structName": "Checkpoint224",
                                            "type": "UserDefinedStruct"
                                        },
                                        "type": "Array"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint32",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_lowerBinaryLookup",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol",
                            "paramNames": [
                                "self",
                                "key",
                                "low",
                                "high"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 6845,
                                "size": 433
                            },
                            "stateMutability": "view",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50152": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints",
                        "declaringContract": "Checkpoints",
                        "method": {
                            "contractName": "Checkpoints",
                            "fullArgs": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "dynamicArrayBaseType": {
                                            "astId": 20482,
                                            "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Checkpoint224",
                                            "containingContract": "Checkpoints",
                                            "structMembers": [
                                                {
                                                    "name": "_key",
                                                    "type": {
                                                        "primitiveName": "uint32",
                                                        "type": "Primitive"
                                                    }
                                                },
                                                {
                                                    "name": "_value",
                                                    "type": {
                                                        "primitiveName": "uint224",
                                                        "type": "Primitive"
                                                    }
                                                }
                                            ],
                                            "structName": "Checkpoint224",
                                            "type": "UserDefinedStruct"
                                        },
                                        "type": "Array"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_unsafeAccess",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol",
                            "paramNames": [
                                "self",
                                "pos"
                            ],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 20482,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Checkpoint224",
                                        "containingContract": "Checkpoints",
                                        "structMembers": [
                                            {
                                                "name": "_key",
                                                "type": {
                                                    "primitiveName": "uint32",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "_value",
                                                "type": {
                                                    "primitiveName": "uint224",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "Checkpoint224",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 7421,
                                "size": 265
                            },
                            "stateMutability": "pure",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50153": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints",
                        "declaringContract": "Checkpoints",
                        "method": {
                            "contractName": "Checkpoints",
                            "fullArgs": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 21001,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Trace208",
                                        "containingContract": "Checkpoints",
                                        "structMembers": [
                                            {
                                                "name": "_checkpoints",
                                                "type": {
                                                    "dynamicArrayBaseType": {
                                                        "astId": 21006,
                                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Checkpoint208",
                                                        "containingContract": "Checkpoints",
                                                        "structMembers": [
                                                            {
                                                                "name": "_key",
                                                                "type": {
                                                                    "primitiveName": "uint48",
                                                                    "type": "Primitive"
                                                                }
                                                            },
                                                            {
                                                                "name": "_value",
                                                                "type": {
                                                                    "primitiveName": "uint208",
                                                                    "type": "Primitive"
                                                                }
                                                            }
                                                        ],
                                                        "structName": "Checkpoint208",
                                                        "type": "UserDefinedStruct"
                                                    },
                                                    "type": "Array"
                                                }
                                            }
                                        ],
                                        "structName": "Trace208",
                                        "type": "UserDefinedStruct"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint48",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint208",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "push",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol",
                            "paramNames": [
                                "self",
                                "key",
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint208",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint208",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 8145,
                                "size": 210
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50154": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints",
                        "declaringContract": "Checkpoints",
                        "method": {
                            "contractName": "Checkpoints",
                            "fullArgs": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 21001,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Trace208",
                                        "containingContract": "Checkpoints",
                                        "structMembers": [
                                            {
                                                "name": "_checkpoints",
                                                "type": {
                                                    "dynamicArrayBaseType": {
                                                        "astId": 21006,
                                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Checkpoint208",
                                                        "containingContract": "Checkpoints",
                                                        "structMembers": [
                                                            {
                                                                "name": "_key",
                                                                "type": {
                                                                    "primitiveName": "uint48",
                                                                    "type": "Primitive"
                                                                }
                                                            },
                                                            {
                                                                "name": "_value",
                                                                "type": {
                                                                    "primitiveName": "uint208",
                                                                    "type": "Primitive"
                                                                }
                                                            }
                                                        ],
                                                        "structName": "Checkpoint208",
                                                        "type": "UserDefinedStruct"
                                                    },
                                                    "type": "Array"
                                                }
                                            }
                                        ],
                                        "structName": "Trace208",
                                        "type": "UserDefinedStruct"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint48",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "lowerLookup",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol",
                            "paramNames": [
                                "self",
                                "key"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint208",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 8520,
                                "size": 295
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50155": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints",
                        "declaringContract": "Checkpoints",
                        "method": {
                            "contractName": "Checkpoints",
                            "fullArgs": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 21001,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Trace208",
                                        "containingContract": "Checkpoints",
                                        "structMembers": [
                                            {
                                                "name": "_checkpoints",
                                                "type": {
                                                    "dynamicArrayBaseType": {
                                                        "astId": 21006,
                                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Checkpoint208",
                                                        "containingContract": "Checkpoints",
                                                        "structMembers": [
                                                            {
                                                                "name": "_key",
                                                                "type": {
                                                                    "primitiveName": "uint48",
                                                                    "type": "Primitive"
                                                                }
                                                            },
                                                            {
                                                                "name": "_value",
                                                                "type": {
                                                                    "primitiveName": "uint208",
                                                                    "type": "Primitive"
                                                                }
                                                            }
                                                        ],
                                                        "structName": "Checkpoint208",
                                                        "type": "UserDefinedStruct"
                                                    },
                                                    "type": "Array"
                                                }
                                            }
                                        ],
                                        "structName": "Trace208",
                                        "type": "UserDefinedStruct"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint48",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "upperLookup",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol",
                            "paramNames": [
                                "self",
                                "key"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint208",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 8982,
                                "size": 297
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50156": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints",
                        "declaringContract": "Checkpoints",
                        "method": {
                            "contractName": "Checkpoints",
                            "fullArgs": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 21001,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Trace208",
                                        "containingContract": "Checkpoints",
                                        "structMembers": [
                                            {
                                                "name": "_checkpoints",
                                                "type": {
                                                    "dynamicArrayBaseType": {
                                                        "astId": 21006,
                                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Checkpoint208",
                                                        "containingContract": "Checkpoints",
                                                        "structMembers": [
                                                            {
                                                                "name": "_key",
                                                                "type": {
                                                                    "primitiveName": "uint48",
                                                                    "type": "Primitive"
                                                                }
                                                            },
                                                            {
                                                                "name": "_value",
                                                                "type": {
                                                                    "primitiveName": "uint208",
                                                                    "type": "Primitive"
                                                                }
                                                            }
                                                        ],
                                                        "structName": "Checkpoint208",
                                                        "type": "UserDefinedStruct"
                                                    },
                                                    "type": "Array"
                                                }
                                            }
                                        ],
                                        "structName": "Trace208",
                                        "type": "UserDefinedStruct"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint48",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "upperLookupRecent",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol",
                            "paramNames": [
                                "self",
                                "key"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint208",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 9584,
                                "size": 606
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50157": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints",
                        "declaringContract": "Checkpoints",
                        "method": {
                            "contractName": "Checkpoints",
                            "fullArgs": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 21525,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Trace160",
                                        "containingContract": "Checkpoints",
                                        "structMembers": [
                                            {
                                                "name": "_checkpoints",
                                                "type": {
                                                    "dynamicArrayBaseType": {
                                                        "astId": 21530,
                                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Checkpoint160",
                                                        "containingContract": "Checkpoints",
                                                        "structMembers": [
                                                            {
                                                                "name": "_key",
                                                                "type": {
                                                                    "primitiveName": "uint96",
                                                                    "type": "Primitive"
                                                                }
                                                            },
                                                            {
                                                                "name": "_value",
                                                                "type": {
                                                                    "primitiveName": "uint160",
                                                                    "type": "Primitive"
                                                                }
                                                            }
                                                        ],
                                                        "structName": "Checkpoint160",
                                                        "type": "UserDefinedStruct"
                                                    },
                                                    "type": "Array"
                                                }
                                            }
                                        ],
                                        "structName": "Trace160",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "latestCheckpoint",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol",
                            "paramNames": [
                                "self"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint96",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint160",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 17563,
                                "size": 389
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50158": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints",
                        "declaringContract": "Checkpoints",
                        "method": {
                            "contractName": "Checkpoints",
                            "fullArgs": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 21525,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Trace160",
                                        "containingContract": "Checkpoints",
                                        "structMembers": [
                                            {
                                                "name": "_checkpoints",
                                                "type": {
                                                    "dynamicArrayBaseType": {
                                                        "astId": 21530,
                                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Checkpoint160",
                                                        "containingContract": "Checkpoints",
                                                        "structMembers": [
                                                            {
                                                                "name": "_key",
                                                                "type": {
                                                                    "primitiveName": "uint96",
                                                                    "type": "Primitive"
                                                                }
                                                            },
                                                            {
                                                                "name": "_value",
                                                                "type": {
                                                                    "primitiveName": "uint160",
                                                                    "type": "Primitive"
                                                                }
                                                            }
                                                        ],
                                                        "structName": "Checkpoint160",
                                                        "type": "UserDefinedStruct"
                                                    },
                                                    "type": "Array"
                                                }
                                            }
                                        ],
                                        "structName": "Trace160",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "length",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol",
                            "paramNames": [
                                "self"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 18020,
                                "size": 119
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50159": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints",
                        "declaringContract": "Checkpoints",
                        "method": {
                            "contractName": "Checkpoints",
                            "fullArgs": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 21525,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Trace160",
                                        "containingContract": "Checkpoints",
                                        "structMembers": [
                                            {
                                                "name": "_checkpoints",
                                                "type": {
                                                    "dynamicArrayBaseType": {
                                                        "astId": 21530,
                                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Checkpoint160",
                                                        "containingContract": "Checkpoints",
                                                        "structMembers": [
                                                            {
                                                                "name": "_key",
                                                                "type": {
                                                                    "primitiveName": "uint96",
                                                                    "type": "Primitive"
                                                                }
                                                            },
                                                            {
                                                                "name": "_value",
                                                                "type": {
                                                                    "primitiveName": "uint160",
                                                                    "type": "Primitive"
                                                                }
                                                            }
                                                        ],
                                                        "structName": "Checkpoint160",
                                                        "type": "UserDefinedStruct"
                                                    },
                                                    "type": "Array"
                                                }
                                            }
                                        ],
                                        "structName": "Trace160",
                                        "type": "UserDefinedStruct"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "at",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol",
                            "paramNames": [
                                "self",
                                "pos"
                            ],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "astId": 21530,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Checkpoint160",
                                        "containingContract": "Checkpoints",
                                        "structMembers": [
                                            {
                                                "name": "_key",
                                                "type": {
                                                    "primitiveName": "uint96",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "_value",
                                                "type": {
                                                    "primitiveName": "uint160",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "Checkpoint160",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 18211,
                                "size": 138
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5015a": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints",
                        "declaringContract": "Checkpoints",
                        "method": {
                            "contractName": "Checkpoints",
                            "fullArgs": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "dynamicArrayBaseType": {
                                            "astId": 21530,
                                            "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Checkpoint160",
                                            "containingContract": "Checkpoints",
                                            "structMembers": [
                                                {
                                                    "name": "_key",
                                                    "type": {
                                                        "primitiveName": "uint96",
                                                        "type": "Primitive"
                                                    }
                                                },
                                                {
                                                    "name": "_value",
                                                    "type": {
                                                        "primitiveName": "uint160",
                                                        "type": "Primitive"
                                                    }
                                                }
                                            ],
                                            "structName": "Checkpoint160",
                                            "type": "UserDefinedStruct"
                                        },
                                        "type": "Array"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint96",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint160",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_insert",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol",
                            "paramNames": [
                                "self",
                                "key",
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint160",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint160",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 18525,
                                "size": 922
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e5015b": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints",
                        "declaringContract": "Checkpoints",
                        "method": {
                            "contractName": "Checkpoints",
                            "fullArgs": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "dynamicArrayBaseType": {
                                            "astId": 21530,
                                            "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Checkpoint160",
                                            "containingContract": "Checkpoints",
                                            "structMembers": [
                                                {
                                                    "name": "_key",
                                                    "type": {
                                                        "primitiveName": "uint96",
                                                        "type": "Primitive"
                                                    }
                                                },
                                                {
                                                    "name": "_value",
                                                    "type": {
                                                        "primitiveName": "uint160",
                                                        "type": "Primitive"
                                                    }
                                                }
                                            ],
                                            "structName": "Checkpoint160",
                                            "type": "UserDefinedStruct"
                                        },
                                        "type": "Array"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint96",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_upperBinaryLookup",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol",
                            "paramNames": [
                                "self",
                                "key",
                                "low",
                                "high"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 19797,
                                "size": 433
                            },
                            "stateMutability": "view",
                            "visibility": "private"
                        }
                    },
                    "0xf196e5015c": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints",
                        "declaringContract": "Checkpoints",
                        "method": {
                            "contractName": "Checkpoints",
                            "fullArgs": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "dynamicArrayBaseType": {
                                            "astId": 21530,
                                            "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Checkpoint160",
                                            "containingContract": "Checkpoints",
                                            "structMembers": [
                                                {
                                                    "name": "_key",
                                                    "type": {
                                                        "primitiveName": "uint96",
                                                        "type": "Primitive"
                                                    }
                                                },
                                                {
                                                    "name": "_value",
                                                    "type": {
                                                        "primitiveName": "uint160",
                                                        "type": "Primitive"
                                                    }
                                                }
                                            ],
                                            "structName": "Checkpoint160",
                                            "type": "UserDefinedStruct"
                                        },
                                        "type": "Array"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint96",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_lowerBinaryLookup",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol",
                            "paramNames": [
                                "self",
                                "key",
                                "low",
                                "high"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 20581,
                                "size": 433
                            },
                            "stateMutability": "view",
                            "visibility": "private"
                        }
                    },
                    "0xf196e5015d": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints",
                        "declaringContract": "Checkpoints",
                        "method": {
                            "contractName": "Checkpoints",
                            "fullArgs": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "dynamicArrayBaseType": {
                                            "astId": 21530,
                                            "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Checkpoint160",
                                            "containingContract": "Checkpoints",
                                            "structMembers": [
                                                {
                                                    "name": "_key",
                                                    "type": {
                                                        "primitiveName": "uint96",
                                                        "type": "Primitive"
                                                    }
                                                },
                                                {
                                                    "name": "_value",
                                                    "type": {
                                                        "primitiveName": "uint160",
                                                        "type": "Primitive"
                                                    }
                                                }
                                            ],
                                            "structName": "Checkpoint160",
                                            "type": "UserDefinedStruct"
                                        },
                                        "type": "Array"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_unsafeAccess",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol",
                            "paramNames": [
                                "self",
                                "pos"
                            ],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 21530,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Checkpoint160",
                                        "containingContract": "Checkpoints",
                                        "structMembers": [
                                            {
                                                "name": "_key",
                                                "type": {
                                                    "primitiveName": "uint96",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "_value",
                                                "type": {
                                                    "primitiveName": "uint160",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "Checkpoint160",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 21157,
                                "size": 265
                            },
                            "stateMutability": "pure",
                            "visibility": "private"
                        }
                    },
                    "0xf196e5015e": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints",
                        "declaringContract": "Checkpoints",
                        "method": {
                            "contractName": "Checkpoints",
                            "fullArgs": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 21525,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Trace160",
                                        "containingContract": "Checkpoints",
                                        "structMembers": [
                                            {
                                                "name": "_checkpoints",
                                                "type": {
                                                    "dynamicArrayBaseType": {
                                                        "astId": 21530,
                                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Checkpoint160",
                                                        "containingContract": "Checkpoints",
                                                        "structMembers": [
                                                            {
                                                                "name": "_key",
                                                                "type": {
                                                                    "primitiveName": "uint96",
                                                                    "type": "Primitive"
                                                                }
                                                            },
                                                            {
                                                                "name": "_value",
                                                                "type": {
                                                                    "primitiveName": "uint160",
                                                                    "type": "Primitive"
                                                                }
                                                            }
                                                        ],
                                                        "structName": "Checkpoint160",
                                                        "type": "UserDefinedStruct"
                                                    },
                                                    "type": "Array"
                                                }
                                            }
                                        ],
                                        "structName": "Trace160",
                                        "type": "UserDefinedStruct"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint96",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "upperLookup",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol",
                            "paramNames": [
                                "self",
                                "key"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint160",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 15850,
                                "size": 297
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5015f": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints",
                        "declaringContract": "Checkpoints",
                        "method": {
                            "contractName": "Checkpoints",
                            "fullArgs": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 21525,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Trace160",
                                        "containingContract": "Checkpoints",
                                        "structMembers": [
                                            {
                                                "name": "_checkpoints",
                                                "type": {
                                                    "dynamicArrayBaseType": {
                                                        "astId": 21530,
                                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Checkpoint160",
                                                        "containingContract": "Checkpoints",
                                                        "structMembers": [
                                                            {
                                                                "name": "_key",
                                                                "type": {
                                                                    "primitiveName": "uint96",
                                                                    "type": "Primitive"
                                                                }
                                                            },
                                                            {
                                                                "name": "_value",
                                                                "type": {
                                                                    "primitiveName": "uint160",
                                                                    "type": "Primitive"
                                                                }
                                                            }
                                                        ],
                                                        "structName": "Checkpoint160",
                                                        "type": "UserDefinedStruct"
                                                    },
                                                    "type": "Array"
                                                }
                                            }
                                        ],
                                        "structName": "Trace160",
                                        "type": "UserDefinedStruct"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint96",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "upperLookupRecent",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol",
                            "paramNames": [
                                "self",
                                "key"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint160",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 16452,
                                "size": 606
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50160": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints",
                        "declaringContract": "Checkpoints",
                        "method": {
                            "contractName": "Checkpoints",
                            "fullArgs": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 21525,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Trace160",
                                        "containingContract": "Checkpoints",
                                        "structMembers": [
                                            {
                                                "name": "_checkpoints",
                                                "type": {
                                                    "dynamicArrayBaseType": {
                                                        "astId": 21530,
                                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Checkpoint160",
                                                        "containingContract": "Checkpoints",
                                                        "structMembers": [
                                                            {
                                                                "name": "_key",
                                                                "type": {
                                                                    "primitiveName": "uint96",
                                                                    "type": "Primitive"
                                                                }
                                                            },
                                                            {
                                                                "name": "_value",
                                                                "type": {
                                                                    "primitiveName": "uint160",
                                                                    "type": "Primitive"
                                                                }
                                                            }
                                                        ],
                                                        "structName": "Checkpoint160",
                                                        "type": "UserDefinedStruct"
                                                    },
                                                    "type": "Array"
                                                }
                                            }
                                        ],
                                        "structName": "Trace160",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "latest",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol",
                            "paramNames": [
                                "self"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint160",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 17178,
                                "size": 206
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50161": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints",
                        "declaringContract": "Checkpoints",
                        "method": {
                            "contractName": "Checkpoints",
                            "fullArgs": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 21001,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Trace208",
                                        "containingContract": "Checkpoints",
                                        "structMembers": [
                                            {
                                                "name": "_checkpoints",
                                                "type": {
                                                    "dynamicArrayBaseType": {
                                                        "astId": 21006,
                                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Checkpoint208",
                                                        "containingContract": "Checkpoints",
                                                        "structMembers": [
                                                            {
                                                                "name": "_key",
                                                                "type": {
                                                                    "primitiveName": "uint48",
                                                                    "type": "Primitive"
                                                                }
                                                            },
                                                            {
                                                                "name": "_value",
                                                                "type": {
                                                                    "primitiveName": "uint208",
                                                                    "type": "Primitive"
                                                                }
                                                            }
                                                        ],
                                                        "structName": "Checkpoint208",
                                                        "type": "UserDefinedStruct"
                                                    },
                                                    "type": "Array"
                                                }
                                            }
                                        ],
                                        "structName": "Trace208",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "length",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol",
                            "paramNames": [
                                "self"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 11152,
                                "size": 119
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50162": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints",
                        "declaringContract": "Checkpoints",
                        "method": {
                            "contractName": "Checkpoints",
                            "fullArgs": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 21001,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Trace208",
                                        "containingContract": "Checkpoints",
                                        "structMembers": [
                                            {
                                                "name": "_checkpoints",
                                                "type": {
                                                    "dynamicArrayBaseType": {
                                                        "astId": 21006,
                                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Checkpoint208",
                                                        "containingContract": "Checkpoints",
                                                        "structMembers": [
                                                            {
                                                                "name": "_key",
                                                                "type": {
                                                                    "primitiveName": "uint48",
                                                                    "type": "Primitive"
                                                                }
                                                            },
                                                            {
                                                                "name": "_value",
                                                                "type": {
                                                                    "primitiveName": "uint208",
                                                                    "type": "Primitive"
                                                                }
                                                            }
                                                        ],
                                                        "structName": "Checkpoint208",
                                                        "type": "UserDefinedStruct"
                                                    },
                                                    "type": "Array"
                                                }
                                            }
                                        ],
                                        "structName": "Trace208",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "latestCheckpoint",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol",
                            "paramNames": [
                                "self"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint48",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint208",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 10695,
                                "size": 389
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50163": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints",
                        "declaringContract": "Checkpoints",
                        "method": {
                            "contractName": "Checkpoints",
                            "fullArgs": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 21001,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Trace208",
                                        "containingContract": "Checkpoints",
                                        "structMembers": [
                                            {
                                                "name": "_checkpoints",
                                                "type": {
                                                    "dynamicArrayBaseType": {
                                                        "astId": 21006,
                                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Checkpoint208",
                                                        "containingContract": "Checkpoints",
                                                        "structMembers": [
                                                            {
                                                                "name": "_key",
                                                                "type": {
                                                                    "primitiveName": "uint48",
                                                                    "type": "Primitive"
                                                                }
                                                            },
                                                            {
                                                                "name": "_value",
                                                                "type": {
                                                                    "primitiveName": "uint208",
                                                                    "type": "Primitive"
                                                                }
                                                            }
                                                        ],
                                                        "structName": "Checkpoint208",
                                                        "type": "UserDefinedStruct"
                                                    },
                                                    "type": "Array"
                                                }
                                            }
                                        ],
                                        "structName": "Trace208",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "latest",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol",
                            "paramNames": [
                                "self"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint208",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 10310,
                                "size": 206
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50164": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints",
                        "declaringContract": "Checkpoints",
                        "method": {
                            "contractName": "Checkpoints",
                            "fullArgs": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 21001,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Trace208",
                                        "containingContract": "Checkpoints",
                                        "structMembers": [
                                            {
                                                "name": "_checkpoints",
                                                "type": {
                                                    "dynamicArrayBaseType": {
                                                        "astId": 21006,
                                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Checkpoint208",
                                                        "containingContract": "Checkpoints",
                                                        "structMembers": [
                                                            {
                                                                "name": "_key",
                                                                "type": {
                                                                    "primitiveName": "uint48",
                                                                    "type": "Primitive"
                                                                }
                                                            },
                                                            {
                                                                "name": "_value",
                                                                "type": {
                                                                    "primitiveName": "uint208",
                                                                    "type": "Primitive"
                                                                }
                                                            }
                                                        ],
                                                        "structName": "Checkpoint208",
                                                        "type": "UserDefinedStruct"
                                                    },
                                                    "type": "Array"
                                                }
                                            }
                                        ],
                                        "structName": "Trace208",
                                        "type": "UserDefinedStruct"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "at",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol",
                            "paramNames": [
                                "self",
                                "pos"
                            ],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "astId": 21006,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Checkpoint208",
                                        "containingContract": "Checkpoints",
                                        "structMembers": [
                                            {
                                                "name": "_key",
                                                "type": {
                                                    "primitiveName": "uint48",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "_value",
                                                "type": {
                                                    "primitiveName": "uint208",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "Checkpoint208",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 11343,
                                "size": 138
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50165": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints",
                        "declaringContract": "Checkpoints",
                        "method": {
                            "contractName": "Checkpoints",
                            "fullArgs": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "dynamicArrayBaseType": {
                                            "astId": 21006,
                                            "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Checkpoint208",
                                            "containingContract": "Checkpoints",
                                            "structMembers": [
                                                {
                                                    "name": "_key",
                                                    "type": {
                                                        "primitiveName": "uint48",
                                                        "type": "Primitive"
                                                    }
                                                },
                                                {
                                                    "name": "_value",
                                                    "type": {
                                                        "primitiveName": "uint208",
                                                        "type": "Primitive"
                                                    }
                                                }
                                            ],
                                            "structName": "Checkpoint208",
                                            "type": "UserDefinedStruct"
                                        },
                                        "type": "Array"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint48",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint208",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_insert",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol",
                            "paramNames": [
                                "self",
                                "key",
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint208",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint208",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 11657,
                                "size": 922
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50166": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints",
                        "declaringContract": "Checkpoints",
                        "method": {
                            "contractName": "Checkpoints",
                            "fullArgs": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "dynamicArrayBaseType": {
                                            "astId": 21006,
                                            "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Checkpoint208",
                                            "containingContract": "Checkpoints",
                                            "structMembers": [
                                                {
                                                    "name": "_key",
                                                    "type": {
                                                        "primitiveName": "uint48",
                                                        "type": "Primitive"
                                                    }
                                                },
                                                {
                                                    "name": "_value",
                                                    "type": {
                                                        "primitiveName": "uint208",
                                                        "type": "Primitive"
                                                    }
                                                }
                                            ],
                                            "structName": "Checkpoint208",
                                            "type": "UserDefinedStruct"
                                        },
                                        "type": "Array"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint48",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_upperBinaryLookup",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol",
                            "paramNames": [
                                "self",
                                "key",
                                "low",
                                "high"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 12929,
                                "size": 433
                            },
                            "stateMutability": "view",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50167": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints",
                        "declaringContract": "Checkpoints",
                        "method": {
                            "contractName": "Checkpoints",
                            "fullArgs": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "dynamicArrayBaseType": {
                                            "astId": 21006,
                                            "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Checkpoint208",
                                            "containingContract": "Checkpoints",
                                            "structMembers": [
                                                {
                                                    "name": "_key",
                                                    "type": {
                                                        "primitiveName": "uint48",
                                                        "type": "Primitive"
                                                    }
                                                },
                                                {
                                                    "name": "_value",
                                                    "type": {
                                                        "primitiveName": "uint208",
                                                        "type": "Primitive"
                                                    }
                                                }
                                            ],
                                            "structName": "Checkpoint208",
                                            "type": "UserDefinedStruct"
                                        },
                                        "type": "Array"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint48",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_lowerBinaryLookup",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol",
                            "paramNames": [
                                "self",
                                "key",
                                "low",
                                "high"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 13713,
                                "size": 433
                            },
                            "stateMutability": "view",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50168": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints",
                        "declaringContract": "Checkpoints",
                        "method": {
                            "contractName": "Checkpoints",
                            "fullArgs": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "dynamicArrayBaseType": {
                                            "astId": 21006,
                                            "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Checkpoint208",
                                            "containingContract": "Checkpoints",
                                            "structMembers": [
                                                {
                                                    "name": "_key",
                                                    "type": {
                                                        "primitiveName": "uint48",
                                                        "type": "Primitive"
                                                    }
                                                },
                                                {
                                                    "name": "_value",
                                                    "type": {
                                                        "primitiveName": "uint208",
                                                        "type": "Primitive"
                                                    }
                                                }
                                            ],
                                            "structName": "Checkpoint208",
                                            "type": "UserDefinedStruct"
                                        },
                                        "type": "Array"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_unsafeAccess",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol",
                            "paramNames": [
                                "self",
                                "pos"
                            ],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 21006,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Checkpoint208",
                                        "containingContract": "Checkpoints",
                                        "structMembers": [
                                            {
                                                "name": "_key",
                                                "type": {
                                                    "primitiveName": "uint48",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "_value",
                                                "type": {
                                                    "primitiveName": "uint208",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "Checkpoint208",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 14289,
                                "size": 265
                            },
                            "stateMutability": "pure",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50169": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints",
                        "declaringContract": "Checkpoints",
                        "method": {
                            "contractName": "Checkpoints",
                            "fullArgs": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 21525,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Trace160",
                                        "containingContract": "Checkpoints",
                                        "structMembers": [
                                            {
                                                "name": "_checkpoints",
                                                "type": {
                                                    "dynamicArrayBaseType": {
                                                        "astId": 21530,
                                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Checkpoint160",
                                                        "containingContract": "Checkpoints",
                                                        "structMembers": [
                                                            {
                                                                "name": "_key",
                                                                "type": {
                                                                    "primitiveName": "uint96",
                                                                    "type": "Primitive"
                                                                }
                                                            },
                                                            {
                                                                "name": "_value",
                                                                "type": {
                                                                    "primitiveName": "uint160",
                                                                    "type": "Primitive"
                                                                }
                                                            }
                                                        ],
                                                        "structName": "Checkpoint160",
                                                        "type": "UserDefinedStruct"
                                                    },
                                                    "type": "Array"
                                                }
                                            }
                                        ],
                                        "structName": "Trace160",
                                        "type": "UserDefinedStruct"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint96",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint160",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "push",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol",
                            "paramNames": [
                                "self",
                                "key",
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint160",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint160",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 15013,
                                "size": 210
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5016a": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints",
                        "declaringContract": "Checkpoints",
                        "method": {
                            "contractName": "Checkpoints",
                            "fullArgs": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 21525,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Trace160",
                                        "containingContract": "Checkpoints",
                                        "structMembers": [
                                            {
                                                "name": "_checkpoints",
                                                "type": {
                                                    "dynamicArrayBaseType": {
                                                        "astId": 21530,
                                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Checkpoint160",
                                                        "containingContract": "Checkpoints",
                                                        "structMembers": [
                                                            {
                                                                "name": "_key",
                                                                "type": {
                                                                    "primitiveName": "uint96",
                                                                    "type": "Primitive"
                                                                }
                                                            },
                                                            {
                                                                "name": "_value",
                                                                "type": {
                                                                    "primitiveName": "uint160",
                                                                    "type": "Primitive"
                                                                }
                                                            }
                                                        ],
                                                        "structName": "Checkpoint160",
                                                        "type": "UserDefinedStruct"
                                                    },
                                                    "type": "Array"
                                                }
                                            }
                                        ],
                                        "structName": "Trace160",
                                        "type": "UserDefinedStruct"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint96",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "lowerLookup",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol",
                            "paramNames": [
                                "self",
                                "key"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint160",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 15388,
                                "size": 295
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5016b": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/types/Time.sol|Time",
                        "declaringContract": "Time",
                        "method": {
                            "contractName": "Time",
                            "fullArgs": [],
                            "isLibrary": true,
                            "name": "timestamp",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/types/Time.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint48",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 750,
                                "size": 110
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5016c": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/types/Time.sol|Time",
                        "declaringContract": "Time",
                        "method": {
                            "contractName": "Time",
                            "fullArgs": [],
                            "isLibrary": true,
                            "name": "blockNumber",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/types/Time.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint48",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 931,
                                "size": 109
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5016d": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/types/Time.sol|Time",
                        "declaringContract": "Time",
                        "method": {
                            "contractName": "Time",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "astId": 22673,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/types/Time.sol|Time.Delay",
                                        "containingContract": "Time",
                                        "type": "UserDefinedValueType",
                                        "valueTypeAliasedName": {
                                            "primitiveName": "uint112",
                                            "type": "Primitive"
                                        },
                                        "valueTypeName": "Delay"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "getFull",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/types/Time.sol",
                            "paramNames": [
                                "self"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint32",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint32",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint48",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3393,
                                "size": 159
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5016e": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/types/Time.sol|Time",
                        "declaringContract": "Time",
                        "method": {
                            "contractName": "Time",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "toDelay",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/types/Time.sol",
                            "paramNames": [
                                "duration"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "astId": 22673,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/types/Time.sol|Time.Delay",
                                        "containingContract": "Time",
                                        "type": "UserDefinedValueType",
                                        "valueTypeAliasedName": {
                                            "primitiveName": "uint112",
                                            "type": "Primitive"
                                        },
                                        "valueTypeName": "Delay"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2508,
                                "size": 108
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5016f": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/types/Time.sol|Time",
                        "declaringContract": "Time",
                        "method": {
                            "contractName": "Time",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "astId": 22673,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/types/Time.sol|Time.Delay",
                                        "containingContract": "Time",
                                        "type": "UserDefinedValueType",
                                        "valueTypeAliasedName": {
                                            "primitiveName": "uint112",
                                            "type": "Primitive"
                                        },
                                        "valueTypeName": "Delay"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint48",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_getFullAt",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/types/Time.sol",
                            "paramNames": [
                                "self",
                                "timepoint"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint32",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint32",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint48",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2868,
                                "size": 307
                            },
                            "stateMutability": "pure",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50170": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/types/Time.sol|Time",
                        "declaringContract": "Time",
                        "method": {
                            "contractName": "Time",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "astId": 22673,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/types/Time.sol|Time.Delay",
                                        "containingContract": "Time",
                                        "type": "UserDefinedValueType",
                                        "valueTypeAliasedName": {
                                            "primitiveName": "uint112",
                                            "type": "Primitive"
                                        },
                                        "valueTypeName": "Delay"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "get",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/types/Time.sol",
                            "paramNames": [
                                "self"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3609,
                                "size": 130
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50171": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/types/Time.sol|Time",
                        "declaringContract": "Time",
                        "method": {
                            "contractName": "Time",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "astId": 22673,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/types/Time.sol|Time.Delay",
                                        "containingContract": "Time",
                                        "type": "UserDefinedValueType",
                                        "valueTypeAliasedName": {
                                            "primitiveName": "uint112",
                                            "type": "Primitive"
                                        },
                                        "valueTypeName": "Delay"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint32",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "withUpdate",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/types/Time.sol",
                            "paramNames": [
                                "self",
                                "newValue",
                                "minSetback"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "astId": 22673,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/types/Time.sol|Time.Delay",
                                        "containingContract": "Time",
                                        "type": "UserDefinedValueType",
                                        "valueTypeAliasedName": {
                                            "primitiveName": "uint112",
                                            "type": "Primitive"
                                        },
                                        "valueTypeName": "Delay"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint48",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4033,
                                "size": 390
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50172": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/types/Time.sol|Time",
                        "declaringContract": "Time",
                        "method": {
                            "contractName": "Time",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "astId": 22673,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/types/Time.sol|Time.Delay",
                                        "containingContract": "Time",
                                        "type": "UserDefinedValueType",
                                        "valueTypeAliasedName": {
                                            "primitiveName": "uint112",
                                            "type": "Primitive"
                                        },
                                        "valueTypeName": "Delay"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "unpack",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/types/Time.sol",
                            "paramNames": [
                                "self"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint32",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint32",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint48",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4551,
                                "size": 317
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50173": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/types/Time.sol|Time",
                        "declaringContract": "Time",
                        "method": {
                            "contractName": "Time",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint32",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint32",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint48",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "pack",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/utils/types/Time.sol",
                            "paramNames": [
                                "valueBefore",
                                "valueAfter",
                                "effect"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "astId": 22673,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/types/Time.sol|Time.Delay",
                                        "containingContract": "Time",
                                        "type": "UserDefinedValueType",
                                        "valueTypeAliasedName": {
                                            "primitiveName": "uint112",
                                            "type": "Primitive"
                                        },
                                        "valueTypeName": "Delay"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4943,
                                "size": 210
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50174": {
                        "canonicalId": "contracts/production/AddressValidator.sol|AddressValidator",
                        "declaringContract": "AddressValidator",
                        "method": {
                            "contractName": "AddressValidator",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_checkProvidedAddressIsNonZero",
                            "notpayable": true,
                            "originalFile": "contracts/production/AddressValidator.sol",
                            "paramNames": [
                                "value_"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 377,
                                "size": 186
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50175": {
                        "canonicalId": "contracts/production/BidStatistics.sol|BidStatistics",
                        "declaringContract": "BidStatistics",
                        "method": {
                            "contractName": "BidStatistics",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_updateChampionsIfNeeded",
                            "notpayable": true,
                            "originalFile": "contracts/production/BidStatistics.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1409,
                                "size": 1102
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50176": {
                        "canonicalId": "contracts/production/BidStatistics.sol|BidStatistics",
                        "declaringContract": "BidStatistics",
                        "method": {
                            "contractName": "BidStatistics",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_updateChronoWarriorIfNeeded",
                            "notpayable": true,
                            "originalFile": "contracts/production/BidStatistics.sol",
                            "paramNames": [
                                "chronoEndTimeStamp_"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2629,
                                "size": 806
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50177": {
                        "canonicalId": "contracts/production/Bidding.sol|Bidding",
                        "declaringContract": "Bidding",
                        "method": {
                            "contractName": "Bidding",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_bidWithEth",
                            "notpayable": true,
                            "originalFile": "contracts/production/Bidding.sol",
                            "paramNames": [
                                "randomWalkNftId_",
                                "message_"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3177,
                                "size": 5239
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50178": {
                        "canonicalId": "contracts/production/Bidding.sol|Bidding",
                        "declaringContract": "Bidding",
                        "method": {
                            "contractName": "Bidding",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_getEthDutchAuctionDuration",
                            "notpayable": true,
                            "originalFile": "contracts/production/Bidding.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 11851,
                                "size": 293
                            },
                            "stateMutability": "view",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50179": {
                        "canonicalId": "contracts/production/Bidding.sol|Bidding",
                        "declaringContract": "Bidding",
                        "method": {
                            "contractName": "Bidding",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_getCstDutchAuctionElapsedDuration",
                            "notpayable": true,
                            "originalFile": "contracts/production/Bidding.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 18122,
                                "size": 310
                            },
                            "stateMutability": "view",
                            "visibility": "private"
                        }
                    },
                    "0xf196e5017a": {
                        "canonicalId": "contracts/production/Bidding.sol|Bidding",
                        "declaringContract": "Bidding",
                        "method": {
                            "contractName": "Bidding",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_bidWithCst",
                            "notpayable": true,
                            "originalFile": "contracts/production/Bidding.sol",
                            "paramNames": [
                                "priceMaxLimit_",
                                "message_"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 13257,
                                "size": 3115
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e5017b": {
                        "canonicalId": "contracts/production/Bidding.sol|Bidding",
                        "declaringContract": "Bidding",
                        "method": {
                            "contractName": "Bidding",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_getCstDutchAuctionDuration",
                            "notpayable": true,
                            "originalFile": "contracts/production/Bidding.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 17761,
                                "size": 293
                            },
                            "stateMutability": "view",
                            "visibility": "private"
                        }
                    },
                    "0xf196e5017c": {
                        "canonicalId": "contracts/production/Bidding.sol|Bidding",
                        "declaringContract": "Bidding",
                        "method": {
                            "contractName": "Bidding",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_getCstDutchAuctionTotalAndRemainingDurations",
                            "notpayable": true,
                            "originalFile": "contracts/production/Bidding.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 18511,
                                "size": 512
                            },
                            "stateMutability": "view",
                            "visibility": "private"
                        }
                    },
                    "0xf196e5017d": {
                        "canonicalId": "contracts/production/Bidding.sol|Bidding",
                        "declaringContract": "Bidding",
                        "method": {
                            "contractName": "Bidding",
                            "fullArgs": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_bidCommon",
                            "notpayable": true,
                            "originalFile": "contracts/production/Bidding.sol",
                            "paramNames": [
                                "message_"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 19309,
                                "size": 1791
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e5017e": {
                        "canonicalId": "contracts/production/Bidding.sol|Bidding",
                        "declaringContract": "Bidding",
                        "method": {
                            "contractName": "Bidding",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "getNextCstBidPrice",
                            "notpayable": true,
                            "originalFile": "contracts/production/Bidding.sol",
                            "paramNames": [
                                "currentTimeOffset_"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "71162641",
                            "sourceBytes": {
                                "begin": 16424,
                                "size": 827
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5017f": {
                        "canonicalId": "contracts/production/Bidding.sol|Bidding",
                        "declaringContract": "Bidding",
                        "method": {
                            "contractName": "Bidding",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "getEthPlusRandomWalkNftBidPrice",
                            "notpayable": true,
                            "originalFile": "contracts/production/Bidding.sol",
                            "paramNames": [
                                "ethBidPrice_"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "27995f07",
                            "sourceBytes": {
                                "begin": 10470,
                                "size": 867
                            },
                            "stateMutability": "pure",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50180": {
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol|Bidding",
                        "declaringContract": "Bidding",
                        "method": {
                            "contractName": "Bidding",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "transferOwnership",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
                            "paramNames": [
                                "newOwner"
                            ],
                            "returns": [],
                            "sighash": "f2fde38b",
                            "sourceBytes": {
                                "begin": 3405,
                                "size": 215
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50181": {
                        "canonicalId": "contracts/production/MainPrizeBase.sol|Bidding",
                        "declaringContract": "Bidding",
                        "method": {
                            "contractName": "Bidding",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "getMainPrizeTimeIncrement",
                            "notpayable": true,
                            "originalFile": "contracts/production/MainPrizeBase.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "4f734612",
                            "sourceBytes": {
                                "begin": 1084,
                                "size": 374
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50182": {
                        "canonicalId": "contracts/production/Bidding.sol|Bidding",
                        "declaringContract": "Bidding",
                        "method": {
                            "contractName": "Bidding",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "getNextEthBidPrice",
                            "notpayable": true,
                            "originalFile": "contracts/production/Bidding.sol",
                            "paramNames": [
                                "currentTimeOffset_"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "265aafe2",
                            "sourceBytes": {
                                "begin": 8468,
                                "size": 1937
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50183": {
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol|Bidding",
                        "declaringContract": "Bidding",
                        "method": {
                            "contractName": "Bidding",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "renounceOwnership",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "715018a6",
                            "sourceBytes": {
                                "begin": 3155,
                                "size": 101
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50184": {
                        "canonicalId": "contracts/production/MainPrizeBase.sol|Bidding",
                        "declaringContract": "Bidding",
                        "method": {
                            "contractName": "Bidding",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "getDurationUntilMainPrize",
                            "notpayable": true,
                            "originalFile": "contracts/production/MainPrizeBase.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "36750d2c",
                            "sourceBytes": {
                                "begin": 768,
                                "size": 313
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50185": {
                        "canonicalId": "contracts/production/BiddingBase.sol|Bidding",
                        "declaringContract": "Bidding",
                        "method": {
                            "contractName": "Bidding",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "getDurationElapsedSinceRoundActivation",
                            "notpayable": true,
                            "originalFile": "contracts/production/BiddingBase.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "int256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "040d4d31",
                            "sourceBytes": {
                                "begin": 2157,
                                "size": 318
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50186": {
                        "canonicalId": "contracts/production/MainPrizeBase.sol|Bidding",
                        "declaringContract": "Bidding",
                        "method": {
                            "contractName": "Bidding",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "getInitialDurationUntilMainPrize",
                            "notpayable": true,
                            "originalFile": "contracts/production/MainPrizeBase.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "2b8dcbba",
                            "sourceBytes": {
                                "begin": 441,
                                "size": 324
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50187": {
                        "canonicalId": "contracts/production/BiddingBase.sol|BiddingBase",
                        "declaringContract": "BiddingBase",
                        "method": {
                            "contractName": "BiddingBase",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_checkRoundIsInactive",
                            "notpayable": true,
                            "originalFile": "contracts/production/BiddingBase.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 430,
                                "size": 309
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50188": {
                        "canonicalId": "contracts/production/BiddingBase.sol|BiddingBase",
                        "declaringContract": "BiddingBase",
                        "method": {
                            "contractName": "BiddingBase",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_checkRoundIsActive",
                            "notpayable": true,
                            "originalFile": "contracts/production/BiddingBase.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 809,
                                "size": 310
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50189": {
                        "canonicalId": "contracts/production/BiddingBase.sol|BiddingBase",
                        "declaringContract": "BiddingBase",
                        "method": {
                            "contractName": "BiddingBase",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_checkBeforeBidPlacedInRound",
                            "notpayable": true,
                            "originalFile": "contracts/production/BiddingBase.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1474,
                                "size": 236
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5018a": {
                        "canonicalId": "contracts/production/BiddingBase.sol|BiddingBase",
                        "declaringContract": "BiddingBase",
                        "method": {
                            "contractName": "BiddingBase",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_setRoundActivationTime",
                            "notpayable": true,
                            "originalFile": "contracts/production/BiddingBase.sol",
                            "paramNames": [
                                "newValue_"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1713,
                                "size": 146
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5018b": {
                        "canonicalId": "contracts/production/CosmicSignatureGame.sol|CosmicSignatureGame",
                        "declaringContract": "CosmicSignatureGame",
                        "method": {
                            "contractName": "CosmicSignatureGame",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_initialize",
                            "notpayable": true,
                            "originalFile": "contracts/production/CosmicSignatureGame.sol",
                            "paramNames": [
                                "ownerAddress_"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2835,
                                "size": 4249
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5018c": {
                        "canonicalId": "contracts/production/CosmicSignatureGame.sol|CosmicSignatureGame",
                        "declaringContract": "CosmicSignatureGame",
                        "method": {
                            "contractName": "CosmicSignatureGame",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_authorizeUpgrade",
                            "notpayable": true,
                            "originalFile": "contracts/production/CosmicSignatureGame.sol",
                            "paramNames": [
                                "newImplementationAddress_"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 7893,
                                "size": 420
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5018d": {
                        "canonicalId": "contracts/production/SecondaryPrizes.sol|CosmicSignatureGame",
                        "declaringContract": "CosmicSignatureGame",
                        "method": {
                            "contractName": "CosmicSignatureGame",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "getChronoWarriorEthPrizeAmount",
                            "notpayable": true,
                            "originalFile": "contracts/production/SecondaryPrizes.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "2665c882",
                            "sourceBytes": {
                                "begin": 406,
                                "size": 238
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5018e": {
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol|CosmicSignatureGame",
                        "declaringContract": "CosmicSignatureGame",
                        "method": {
                            "contractName": "CosmicSignatureGame",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "upgradeToAndCall",
                            "notpayable": false,
                            "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
                            "paramNames": [
                                "newImplementation",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "4f1ef286",
                            "sourceBytes": {
                                "begin": 4161,
                                "size": 214
                            },
                            "stateMutability": "payable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5018f": {
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol|CosmicSignatureGame",
                        "declaringContract": "CosmicSignatureGame",
                        "method": {
                            "contractName": "CosmicSignatureGame",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "transferOwnership",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
                            "paramNames": [
                                "newOwner"
                            ],
                            "returns": [],
                            "sighash": "f2fde38b",
                            "sourceBytes": {
                                "begin": 3405,
                                "size": 215
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50190": {
                        "canonicalId": "contracts/production/SecondaryPrizes.sol|CosmicSignatureGame",
                        "declaringContract": "CosmicSignatureGame",
                        "method": {
                            "contractName": "CosmicSignatureGame",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "getRaffleTotalEthPrizeAmountForBidders",
                            "notpayable": true,
                            "originalFile": "contracts/production/SecondaryPrizes.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "a35286d1",
                            "sourceBytes": {
                                "begin": 716,
                                "size": 254
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50191": {
                        "canonicalId": "contracts/production/MainPrize.sol|CosmicSignatureGame",
                        "declaringContract": "CosmicSignatureGame",
                        "method": {
                            "contractName": "CosmicSignatureGame",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "getMainEthPrizeAmount",
                            "notpayable": true,
                            "originalFile": "contracts/production/MainPrize.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "5b0a45d9",
                            "sourceBytes": {
                                "begin": 26554,
                                "size": 220
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50192": {
                        "canonicalId": "contracts/production/MainPrize.sol|CosmicSignatureGame",
                        "declaringContract": "CosmicSignatureGame",
                        "method": {
                            "contractName": "CosmicSignatureGame",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "getCharityEthDonationAmount",
                            "notpayable": true,
                            "originalFile": "contracts/production/MainPrize.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0eb16be6",
                            "sourceBytes": {
                                "begin": 26835,
                                "size": 232
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50193": {
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol|CosmicSignatureGame",
                        "declaringContract": "CosmicSignatureGame",
                        "method": {
                            "contractName": "CosmicSignatureGame",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "renounceOwnership",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "715018a6",
                            "sourceBytes": {
                                "begin": 3155,
                                "size": 101
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50194": {
                        "canonicalId": "contracts/production/SecondaryPrizes.sol|CosmicSignatureGame",
                        "declaringContract": "CosmicSignatureGame",
                        "method": {
                            "contractName": "CosmicSignatureGame",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "getCosmicSignatureNftStakingTotalEthRewardAmount",
                            "notpayable": true,
                            "originalFile": "contracts/production/SecondaryPrizes.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "5f0112fe",
                            "sourceBytes": {
                                "begin": 1052,
                                "size": 274
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50195": {
                        "canonicalId": "contracts/production/CosmicSignatureNft.sol|CosmicSignatureNft",
                        "declaringContract": "CosmicSignatureNft",
                        "method": {
                            "contractName": "CosmicSignatureNft",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_checkOnlyGame",
                            "notpayable": true,
                            "originalFile": "contracts/production/CosmicSignatureNft.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1841,
                                "size": 355
                            },
                            "stateMutability": "view",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50196": {
                        "canonicalId": "contracts/production/CosmicSignatureNft.sol|CosmicSignatureNft",
                        "declaringContract": "CosmicSignatureNft",
                        "method": {
                            "contractName": "CosmicSignatureNft",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_baseURI",
                            "notpayable": true,
                            "originalFile": "contracts/production/CosmicSignatureNft.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2707,
                                "size": 92
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50197": {
                        "canonicalId": "contracts/production/CosmicSignatureNft.sol|CosmicSignatureNft",
                        "declaringContract": "CosmicSignatureNft",
                        "method": {
                            "contractName": "CosmicSignatureNft",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_mint",
                            "notpayable": true,
                            "originalFile": "contracts/production/CosmicSignatureNft.sol",
                            "paramNames": [
                                "roundNum_",
                                "nftOwnerAddress_",
                                "randomNumberSeed_"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3896,
                                "size": 558
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50198": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/access/Ownable.sol|CosmicSignatureNft",
                        "declaringContract": "CosmicSignatureNft",
                        "method": {
                            "contractName": "CosmicSignatureNft",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "transferOwnership",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
                            "paramNames": [
                                "newOwner"
                            ],
                            "returns": [],
                            "sighash": "f2fde38b",
                            "sourceBytes": {
                                "begin": 2543,
                                "size": 215
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50199": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/access/Ownable.sol|CosmicSignatureNft",
                        "declaringContract": "CosmicSignatureNft",
                        "method": {
                            "contractName": "CosmicSignatureNft",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "renounceOwnership",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "715018a6",
                            "sourceBytes": {
                                "begin": 2293,
                                "size": 101
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5019a": {
                        "canonicalId": "contracts/production/CosmicSignatureToken.sol|CosmicSignatureToken",
                        "declaringContract": "CosmicSignatureToken",
                        "method": {
                            "contractName": "CosmicSignatureToken",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_checkOnlyGame",
                            "notpayable": true,
                            "originalFile": "contracts/production/CosmicSignatureToken.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2294,
                                "size": 218
                            },
                            "stateMutability": "view",
                            "visibility": "private"
                        }
                    },
                    "0xf196e5019b": {
                        "canonicalId": "contracts/production/CosmicSignatureToken.sol|CosmicSignatureToken",
                        "declaringContract": "CosmicSignatureToken",
                        "method": {
                            "contractName": "CosmicSignatureToken",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_update",
                            "notpayable": true,
                            "originalFile": "contracts/production/CosmicSignatureToken.sol",
                            "paramNames": [
                                "from_",
                                "to_",
                                "value_"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 8033,
                                "size": 300
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5019c": {
                        "canonicalId": "contracts/production/CosmicSignatureToken.sol|CosmicSignatureToken",
                        "declaringContract": "CosmicSignatureToken",
                        "method": {
                            "contractName": "CosmicSignatureToken",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "nonces",
                            "notpayable": true,
                            "originalFile": "contracts/production/CosmicSignatureToken.sol",
                            "paramNames": [
                                "owner_"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "7ecebe00",
                            "sourceBytes": {
                                "begin": 8861,
                                "size": 142
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5019d": {
                        "canonicalId": "contracts/production/CosmicSignatureToken.sol|CosmicSignatureToken",
                        "declaringContract": "CosmicSignatureToken",
                        "method": {
                            "contractName": "CosmicSignatureToken",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "CLOCK_MODE",
                            "notpayable": true,
                            "originalFile": "contracts/production/CosmicSignatureToken.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                }
                            ],
                            "sighash": "4bf5d7e9",
                            "sourceBytes": {
                                "begin": 7686,
                                "size": 98
                            },
                            "stateMutability": "pure",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5019e": {
                        "canonicalId": "contracts/production/CosmicSignatureToken.sol|CosmicSignatureToken",
                        "declaringContract": "CosmicSignatureToken",
                        "method": {
                            "contractName": "CosmicSignatureToken",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "clock",
                            "notpayable": true,
                            "originalFile": "contracts/production/CosmicSignatureToken.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint48",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "91ddadf4",
                            "sourceBytes": {
                                "begin": 7878,
                                "size": 93
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5019f": {
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol|EthDonations",
                        "declaringContract": "EthDonations",
                        "method": {
                            "contractName": "EthDonations",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "transferOwnership",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
                            "paramNames": [
                                "newOwner"
                            ],
                            "returns": [],
                            "sighash": "f2fde38b",
                            "sourceBytes": {
                                "begin": 3405,
                                "size": 215
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e501a0": {
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol|EthDonations",
                        "declaringContract": "EthDonations",
                        "method": {
                            "contractName": "EthDonations",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "renounceOwnership",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "715018a6",
                            "sourceBytes": {
                                "begin": 3155,
                                "size": 101
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e501a1": {
                        "canonicalId": "contracts/production/MainPrize.sol|MainPrize",
                        "declaringContract": "MainPrize",
                        "method": {
                            "contractName": "MainPrize",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_distributePrizes",
                            "notpayable": true,
                            "originalFile": "contracts/production/MainPrize.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5870,
                                "size": 19179
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e501a2": {
                        "canonicalId": "contracts/production/MainPrize.sol|MainPrize",
                        "declaringContract": "MainPrize",
                        "method": {
                            "contractName": "MainPrize",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_prepareNextRound",
                            "notpayable": true,
                            "originalFile": "contracts/production/MainPrize.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 25231,
                                "size": 1268
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e501a3": {
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol|MainPrize",
                        "declaringContract": "MainPrize",
                        "method": {
                            "contractName": "MainPrize",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "renounceOwnership",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "715018a6",
                            "sourceBytes": {
                                "begin": 3155,
                                "size": 101
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e501a4": {
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol|MainPrize",
                        "declaringContract": "MainPrize",
                        "method": {
                            "contractName": "MainPrize",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "transferOwnership",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
                            "paramNames": [
                                "newOwner"
                            ],
                            "returns": [],
                            "sighash": "f2fde38b",
                            "sourceBytes": {
                                "begin": 3405,
                                "size": 215
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e501a5": {
                        "canonicalId": "contracts/production/MainPrizeBase.sol|MainPrizeBase",
                        "declaringContract": "MainPrizeBase",
                        "method": {
                            "contractName": "MainPrizeBase",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_extendMainPrizeTime",
                            "notpayable": true,
                            "originalFile": "contracts/production/MainPrizeBase.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1539,
                                "size": 334
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e501a6": {
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol|OwnableUpgradeableWithReservedStorageGaps",
                        "declaringContract": "OwnableUpgradeableWithReservedStorageGaps",
                        "method": {
                            "contractName": "OwnableUpgradeableWithReservedStorageGaps",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "transferOwnership",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
                            "paramNames": [
                                "newOwner"
                            ],
                            "returns": [],
                            "sighash": "f2fde38b",
                            "sourceBytes": {
                                "begin": 3405,
                                "size": 215
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e501a7": {
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol|OwnableUpgradeableWithReservedStorageGaps",
                        "declaringContract": "OwnableUpgradeableWithReservedStorageGaps",
                        "method": {
                            "contractName": "OwnableUpgradeableWithReservedStorageGaps",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "renounceOwnership",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "715018a6",
                            "sourceBytes": {
                                "begin": 3155,
                                "size": 101
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e501a8": {
                        "canonicalId": "contracts/production/PrizesWallet.sol|PrizesWallet",
                        "declaringContract": "PrizesWallet",
                        "method": {
                            "contractName": "PrizesWallet",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_checkOnlyGame",
                            "notpayable": true,
                            "originalFile": "contracts/production/PrizesWallet.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2522,
                                "size": 218
                            },
                            "stateMutability": "view",
                            "visibility": "private"
                        }
                    },
                    "0xf196e501a9": {
                        "canonicalId": "contracts/production/PrizesWallet.sol|PrizesWallet",
                        "declaringContract": "PrizesWallet",
                        "method": {
                            "contractName": "PrizesWallet",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_registerRoundEnd",
                            "notpayable": true,
                            "originalFile": "contracts/production/PrizesWallet.sol",
                            "paramNames": [
                                "roundNum_",
                                "mainPrizeBeneficiaryAddress_"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4278,
                                "size": 718
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e501aa": {
                        "canonicalId": "contracts/production/PrizesWallet.sol|PrizesWallet",
                        "declaringContract": "PrizesWallet",
                        "method": {
                            "contractName": "PrizesWallet",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_depositEth",
                            "notpayable": true,
                            "originalFile": "contracts/production/PrizesWallet.sol",
                            "paramNames": [
                                "roundNum_",
                                "prizeWinnerAddress_",
                                "amount_"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5628,
                                "size": 838
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e501ab": {
                        "canonicalId": "contracts/production/PrizesWallet.sol|PrizesWallet",
                        "declaringContract": "PrizesWallet",
                        "method": {
                            "contractName": "PrizesWallet",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_getDonatedTokenIndex",
                            "notpayable": true,
                            "originalFile": "contracts/production/PrizesWallet.sol",
                            "paramNames": [
                                "roundNum_",
                                "tokenAddress_"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 12658,
                                "size": 368
                            },
                            "stateMutability": "pure",
                            "visibility": "private"
                        }
                    },
                    "0xf196e501ac": {
                        "canonicalId": "contracts/production/PrizesWallet.sol|PrizesWallet",
                        "declaringContract": "PrizesWallet",
                        "method": {
                            "contractName": "PrizesWallet",
                            "fullArgs": [
                                {
                                    "location": "calldata",
                                    "typeDesc": {
                                        "dynamicArrayBaseType": {
                                            "primitiveName": "uint256",
                                            "type": "Primitive"
                                        },
                                        "type": "Array"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "claimManyDonatedNfts",
                            "notpayable": true,
                            "originalFile": "contracts/production/PrizesWallet.sol",
                            "paramNames": [
                                "indices_"
                            ],
                            "returns": [],
                            "sighash": "e4a6c2a4",
                            "sourceBytes": {
                                "begin": 15885,
                                "size": 229
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e501ad": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/access/Ownable.sol|PrizesWallet",
                        "declaringContract": "PrizesWallet",
                        "method": {
                            "contractName": "PrizesWallet",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "renounceOwnership",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "715018a6",
                            "sourceBytes": {
                                "begin": 2293,
                                "size": 101
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e501ae": {
                        "canonicalId": "contracts/production/PrizesWallet.sol|PrizesWallet",
                        "declaringContract": "PrizesWallet",
                        "method": {
                            "contractName": "PrizesWallet",
                            "fullArgs": [
                                {
                                    "location": "calldata",
                                    "typeDesc": {
                                        "dynamicArrayBaseType": {
                                            "astId": 11624,
                                            "canonicalId": "contracts/production/interfaces/IPrizesWallet.sol|IPrizesWallet.DonatedTokenToClaim",
                                            "containingContract": "IPrizesWallet",
                                            "structMembers": [
                                                {
                                                    "name": "roundNum",
                                                    "type": {
                                                        "primitiveName": "uint256",
                                                        "type": "Primitive"
                                                    }
                                                },
                                                {
                                                    "name": "tokenAddress",
                                                    "type": {
                                                        "contractName": "IERC20",
                                                        "type": "Contract"
                                                    }
                                                }
                                            ],
                                            "structName": "DonatedTokenToClaim",
                                            "type": "UserDefinedStruct"
                                        },
                                        "type": "Array"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "claimManyDonatedTokens",
                            "notpayable": true,
                            "originalFile": "contracts/production/PrizesWallet.sol",
                            "paramNames": [
                                "donatedTokensToClaim_"
                            ],
                            "returns": [],
                            "sighash": "50a15deb",
                            "sourceBytes": {
                                "begin": 11811,
                                "size": 488
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e501af": {
                        "canonicalId": "contracts/production/PrizesWallet.sol|PrizesWallet",
                        "declaringContract": "PrizesWallet",
                        "method": {
                            "contractName": "PrizesWallet",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "claimDonatedToken",
                            "notpayable": true,
                            "originalFile": "contracts/production/PrizesWallet.sol",
                            "paramNames": [
                                "roundNum_",
                                "tokenAddress_"
                            ],
                            "returns": [],
                            "sighash": "95de6c2c",
                            "sourceBytes": {
                                "begin": 10002,
                                "size": 1753
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e501b0": {
                        "canonicalId": "node_modules/@openzeppelin/contracts/access/Ownable.sol|PrizesWallet",
                        "declaringContract": "PrizesWallet",
                        "method": {
                            "contractName": "PrizesWallet",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "transferOwnership",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
                            "paramNames": [
                                "newOwner"
                            ],
                            "returns": [],
                            "sighash": "f2fde38b",
                            "sourceBytes": {
                                "begin": 2543,
                                "size": 215
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e501b1": {
                        "canonicalId": "contracts/production/PrizesWallet.sol|PrizesWallet",
                        "declaringContract": "PrizesWallet",
                        "method": {
                            "contractName": "PrizesWallet",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "claimDonatedNft",
                            "notpayable": true,
                            "originalFile": "contracts/production/PrizesWallet.sol",
                            "paramNames": [
                                "index_"
                            ],
                            "returns": [],
                            "sighash": "94d907fc",
                            "sourceBytes": {
                                "begin": 14281,
                                "size": 1550
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e501b2": {
                        "canonicalId": "contracts/production/PrizesWallet.sol|PrizesWallet",
                        "declaringContract": "PrizesWallet",
                        "method": {
                            "contractName": "PrizesWallet",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "withdrawEth",
                            "notpayable": true,
                            "originalFile": "contracts/production/PrizesWallet.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "a0ef91df",
                            "sourceBytes": {
                                "begin": 6511,
                                "size": 664
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e501b3": {
                        "canonicalId": "contracts/production/StakingWalletNftBase.sol|StakingWalletNftBase",
                        "declaringContract": "StakingWalletNftBase",
                        "method": {
                            "contractName": "StakingWalletNftBase",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "stake",
                            "notpayable": true,
                            "originalFile": "contracts/production/StakingWalletNftBase.sol",
                            "paramNames": [
                                "nftId_"
                            ],
                            "returns": [],
                            "sighash": "a694fc3a",
                            "sourceBytes": {
                                "begin": 1721,
                                "size": 273
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e501b4": {
                        "canonicalId": "contracts/production/StakingWalletRandomWalkNft.sol|StakingWalletRandomWalkNft",
                        "declaringContract": "StakingWalletRandomWalkNft",
                        "method": {
                            "contractName": "StakingWalletRandomWalkNft",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "stake",
                            "notpayable": true,
                            "originalFile": "contracts/production/StakingWalletRandomWalkNft.sol",
                            "paramNames": [
                                "nftId_"
                            ],
                            "returns": [],
                            "sighash": "a694fc3a",
                            "sourceBytes": {
                                "begin": 2521,
                                "size": 1394
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e501b5": {
                        "canonicalId": "contracts/production/StakingWalletRandomWalkNft.sol|StakingWalletRandomWalkNft",
                        "declaringContract": "StakingWalletRandomWalkNft",
                        "method": {
                            "contractName": "StakingWalletRandomWalkNft",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "unstake",
                            "notpayable": true,
                            "originalFile": "contracts/production/StakingWalletRandomWalkNft.sol",
                            "paramNames": [
                                "stakeActionId_"
                            ],
                            "returns": [],
                            "sighash": "2e17de78",
                            "sourceBytes": {
                                "begin": 4325,
                                "size": 1910
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e501b6": {
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol|SystemManagement",
                        "declaringContract": "SystemManagement",
                        "method": {
                            "contractName": "SystemManagement",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "transferOwnership",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
                            "paramNames": [
                                "newOwner"
                            ],
                            "returns": [],
                            "sighash": "f2fde38b",
                            "sourceBytes": {
                                "begin": 3405,
                                "size": 215
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e501b7": {
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol|SystemManagement",
                        "declaringContract": "SystemManagement",
                        "method": {
                            "contractName": "SystemManagement",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "renounceOwnership",
                            "notpayable": true,
                            "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "715018a6",
                            "sourceBytes": {
                                "begin": 3155,
                                "size": 101
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e501b8": {
                        "canonicalId": "contracts/production/libraries/CryptographyHelpers.sol|CryptographyHelpers",
                        "declaringContract": "CryptographyHelpers",
                        "method": {
                            "contractName": "CryptographyHelpers",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "calculateHashSumOf",
                            "notpayable": true,
                            "originalFile": "contracts/production/libraries/CryptographyHelpers.sol",
                            "paramNames": [
                                "value_"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 202,
                                "size": 491
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e501b9": {
                        "canonicalId": "contracts/production/libraries/RandomNumberHelpers.sol|RandomNumberHelpers",
                        "declaringContract": "RandomNumberHelpers",
                        "method": {
                            "contractName": "RandomNumberHelpers",
                            "fullArgs": [],
                            "isLibrary": true,
                            "name": "generateRandomNumberSeed",
                            "notpayable": true,
                            "originalFile": "contracts/production/libraries/RandomNumberHelpers.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1735,
                                "size": 214
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e501ba": {
                        "canonicalId": "contracts/production/libraries/RandomNumberHelpers.sol|RandomNumberHelpers",
                        "declaringContract": "RandomNumberHelpers",
                        "method": {
                            "contractName": "RandomNumberHelpers",
                            "fullArgs": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "astId": 11878,
                                        "canonicalId": "contracts/production/libraries/RandomNumberHelpers.sol|RandomNumberHelpers.RandomNumberSeedWrapper",
                                        "containingContract": "RandomNumberHelpers",
                                        "structMembers": [
                                            {
                                                "name": "value",
                                                "type": {
                                                    "primitiveName": "uint256",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "RandomNumberSeedWrapper",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "generateRandomNumber",
                            "notpayable": true,
                            "originalFile": "contracts/production/libraries/RandomNumberHelpers.sol",
                            "paramNames": [
                                "seedWrapper_"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2139,
                                "size": 201
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e501bb": {
                        "canonicalId": "contracts/production/libraries/RandomNumberHelpers.sol|RandomNumberHelpers",
                        "declaringContract": "RandomNumberHelpers",
                        "method": {
                            "contractName": "RandomNumberHelpers",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "generateRandomNumber",
                            "notpayable": true,
                            "originalFile": "contracts/production/libraries/RandomNumberHelpers.sol",
                            "paramNames": [
                                "seed_"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2453,
                                "size": 137
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    }
                },
                "is_static_address": false,
                "lang": "Solidity",
                "localAssignments": {
                    "1": {
                        "lhs": "$",
                        "sourceLoc": {
                            "begin": "2506",
                            "len": "47",
                            "source": "0"
                        }
                    },
                    "10": {
                        "lhs": "$",
                        "sourceLoc": {
                            "begin": "6357",
                            "len": "59",
                            "source": "1"
                        }
                    },
                    "100": {
                        "lhs": "success,result",
                        "sourceLoc": {
                            "begin": "16252",
                            "len": "56",
                            "source": "48"
                        }
                    },
                    "101": {
                        "lhs": "mLen",
                        "sourceLoc": {
                            "begin": "16743",
                            "len": "23",
                            "source": "48"
                        }
                    },
                    "102": {
                        "lhs": "result",
                        "sourceLoc": {
                            "begin": "23806",
                            "len": "18",
                            "source": "48"
                        }
                    },
                    "103": {
                        "lhs": "exp",
                        "sourceLoc": {
                            "begin": "23834",
                            "len": "11",
                            "source": "48"
                        }
                    },
                    "104": {
                        "lhs": "result",
                        "sourceLoc": {
                            "begin": "25388",
                            "len": "18",
                            "source": "48"
                        }
                    },
                    "105": {
                        "lhs": "result",
                        "sourceLoc": {
                            "begin": "26974",
                            "len": "18",
                            "source": "48"
                        }
                    },
                    "106": {
                        "lhs": "isGt",
                        "sourceLoc": {
                            "begin": "27002",
                            "len": "12",
                            "source": "48"
                        }
                    },
                    "107": {
                        "lhs": "result",
                        "sourceLoc": {
                            "begin": "16848",
                            "len": "60",
                            "source": "48"
                        }
                    },
                    "108": {
                        "lhs": "quotient",
                        "sourceLoc": {
                            "begin": "11032",
                            "len": "34",
                            "source": "48"
                        }
                    },
                    "109": {
                        "lhs": "(gcd, remainder)",
                        "sourceLoc": {
                            "begin": "11085",
                            "len": "395",
                            "source": "48"
                        }
                    },
                    "11": {
                        "lhs": "$",
                        "sourceLoc": {
                            "begin": "7826",
                            "len": "59",
                            "source": "1"
                        }
                    },
                    "110": {
                        "lhs": "(x, y)",
                        "sourceLoc": {
                            "begin": "11499",
                            "len": "382",
                            "source": "48"
                        }
                    },
                    "111": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "17771",
                            "len": "26",
                            "source": "49"
                        }
                    },
                    "112": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "18318",
                            "len": "26",
                            "source": "49"
                        }
                    },
                    "113": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "18865",
                            "len": "26",
                            "source": "49"
                        }
                    },
                    "114": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "19412",
                            "len": "26",
                            "source": "49"
                        }
                    },
                    "115": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "19959",
                            "len": "26",
                            "source": "49"
                        }
                    },
                    "116": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "20506",
                            "len": "26",
                            "source": "49"
                        }
                    },
                    "117": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "21053",
                            "len": "26",
                            "source": "49"
                        }
                    },
                    "118": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "21600",
                            "len": "26",
                            "source": "49"
                        }
                    },
                    "119": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "22147",
                            "len": "26",
                            "source": "49"
                        }
                    },
                    "12": {
                        "lhs": "$._initialized",
                        "sourceLoc": {
                            "begin": "4951",
                            "len": "18",
                            "source": "1"
                        }
                    },
                    "120": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "22694",
                            "len": "26",
                            "source": "49"
                        }
                    },
                    "121": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "23241",
                            "len": "26",
                            "source": "49"
                        }
                    },
                    "122": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "23788",
                            "len": "26",
                            "source": "49"
                        }
                    },
                    "123": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "24335",
                            "len": "26",
                            "source": "49"
                        }
                    },
                    "124": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "24882",
                            "len": "26",
                            "source": "49"
                        }
                    },
                    "125": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "25429",
                            "len": "26",
                            "source": "49"
                        }
                    },
                    "126": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "25976",
                            "len": "26",
                            "source": "49"
                        }
                    },
                    "127": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "26523",
                            "len": "26",
                            "source": "49"
                        }
                    },
                    "128": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "27070",
                            "len": "26",
                            "source": "49"
                        }
                    },
                    "129": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "27617",
                            "len": "26",
                            "source": "49"
                        }
                    },
                    "13": {
                        "lhs": "$._initialized",
                        "sourceLoc": {
                            "begin": "6541",
                            "len": "24",
                            "source": "1"
                        }
                    },
                    "130": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "28157",
                            "len": "25",
                            "source": "49"
                        }
                    },
                    "131": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "28695",
                            "len": "25",
                            "source": "49"
                        }
                    },
                    "132": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "29233",
                            "len": "25",
                            "source": "49"
                        }
                    },
                    "133": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "29771",
                            "len": "25",
                            "source": "49"
                        }
                    },
                    "134": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "30309",
                            "len": "25",
                            "source": "49"
                        }
                    },
                    "135": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "30847",
                            "len": "25",
                            "source": "49"
                        }
                    },
                    "136": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "31385",
                            "len": "25",
                            "source": "49"
                        }
                    },
                    "137": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "31923",
                            "len": "25",
                            "source": "49"
                        }
                    },
                    "138": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "32461",
                            "len": "25",
                            "source": "49"
                        }
                    },
                    "139": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "32999",
                            "len": "25",
                            "source": "49"
                        }
                    },
                    "14": {
                        "lhs": "$._initializing",
                        "sourceLoc": {
                            "begin": "6575",
                            "len": "22",
                            "source": "1"
                        }
                    },
                    "140": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "33537",
                            "len": "25",
                            "source": "49"
                        }
                    },
                    "141": {
                        "lhs": "downcasted",
                        "sourceLoc": {
                            "begin": "34068",
                            "len": "24",
                            "source": "49"
                        }
                    },
                    "142": {
                        "lhs": "x",
                        "sourceLoc": {
                            "begin": "1599",
                            "len": "35",
                            "source": "50"
                        }
                    },
                    "143": {
                        "lhs": "len",
                        "sourceLoc": {
                            "begin": "1750",
                            "len": "38",
                            "source": "51"
                        }
                    },
                    "144": {
                        "lhs": "pos",
                        "sourceLoc": {
                            "begin": "1798",
                            "len": "64",
                            "source": "51"
                        }
                    },
                    "145": {
                        "lhs": "len",
                        "sourceLoc": {
                            "begin": "2212",
                            "len": "38",
                            "source": "51"
                        }
                    },
                    "146": {
                        "lhs": "pos",
                        "sourceLoc": {
                            "begin": "2260",
                            "len": "64",
                            "source": "51"
                        }
                    },
                    "147": {
                        "lhs": "len",
                        "sourceLoc": {
                            "begin": "2820",
                            "len": "38",
                            "source": "51"
                        }
                    },
                    "148": {
                        "lhs": "low",
                        "sourceLoc": {
                            "begin": "2869",
                            "len": "15",
                            "source": "51"
                        }
                    },
                    "149": {
                        "lhs": "high",
                        "sourceLoc": {
                            "begin": "2894",
                            "len": "18",
                            "source": "51"
                        }
                    },
                    "15": {
                        "lhs": "$._initializing",
                        "sourceLoc": {
                            "begin": "6618",
                            "len": "23",
                            "source": "1"
                        }
                    },
                    "150": {
                        "lhs": "pos",
                        "sourceLoc": {
                            "begin": "3167",
                            "len": "67",
                            "source": "51"
                        }
                    },
                    "151": {
                        "lhs": "pos",
                        "sourceLoc": {
                            "begin": "3523",
                            "len": "38",
                            "source": "51"
                        }
                    },
                    "152": {
                        "lhs": "pos",
                        "sourceLoc": {
                            "begin": "3951",
                            "len": "38",
                            "source": "51"
                        }
                    },
                    "153": {
                        "lhs": "pos",
                        "sourceLoc": {
                            "begin": "4956",
                            "len": "25",
                            "source": "51"
                        }
                    },
                    "154": {
                        "lhs": "len",
                        "sourceLoc": {
                            "begin": "8618",
                            "len": "38",
                            "source": "51"
                        }
                    },
                    "155": {
                        "lhs": "pos",
                        "sourceLoc": {
                            "begin": "8666",
                            "len": "64",
                            "source": "51"
                        }
                    },
                    "156": {
                        "lhs": "len",
                        "sourceLoc": {
                            "begin": "9080",
                            "len": "38",
                            "source": "51"
                        }
                    },
                    "157": {
                        "lhs": "pos",
                        "sourceLoc": {
                            "begin": "9128",
                            "len": "64",
                            "source": "51"
                        }
                    },
                    "158": {
                        "lhs": "len",
                        "sourceLoc": {
                            "begin": "9688",
                            "len": "38",
                            "source": "51"
                        }
                    },
                    "159": {
                        "lhs": "low",
                        "sourceLoc": {
                            "begin": "9737",
                            "len": "15",
                            "source": "51"
                        }
                    },
                    "16": {
                        "lhs": "oldOwner",
                        "sourceLoc": {
                            "begin": "2985",
                            "len": "25",
                            "source": "5"
                        }
                    },
                    "160": {
                        "lhs": "high",
                        "sourceLoc": {
                            "begin": "9762",
                            "len": "18",
                            "source": "51"
                        }
                    },
                    "161": {
                        "lhs": "pos",
                        "sourceLoc": {
                            "begin": "10035",
                            "len": "67",
                            "source": "51"
                        }
                    },
                    "162": {
                        "lhs": "pos",
                        "sourceLoc": {
                            "begin": "10391",
                            "len": "38",
                            "source": "51"
                        }
                    },
                    "163": {
                        "lhs": "pos",
                        "sourceLoc": {
                            "begin": "10819",
                            "len": "38",
                            "source": "51"
                        }
                    },
                    "164": {
                        "lhs": "pos",
                        "sourceLoc": {
                            "begin": "11824",
                            "len": "25",
                            "source": "51"
                        }
                    },
                    "165": {
                        "lhs": "len",
                        "sourceLoc": {
                            "begin": "15486",
                            "len": "38",
                            "source": "51"
                        }
                    },
                    "166": {
                        "lhs": "pos",
                        "sourceLoc": {
                            "begin": "15534",
                            "len": "64",
                            "source": "51"
                        }
                    },
                    "167": {
                        "lhs": "len",
                        "sourceLoc": {
                            "begin": "15948",
                            "len": "38",
                            "source": "51"
                        }
                    },
                    "168": {
                        "lhs": "pos",
                        "sourceLoc": {
                            "begin": "15996",
                            "len": "64",
                            "source": "51"
                        }
                    },
                    "169": {
                        "lhs": "len",
                        "sourceLoc": {
                            "begin": "16556",
                            "len": "38",
                            "source": "51"
                        }
                    },
                    "17": {
                        "lhs": "currentTimepoint",
                        "sourceLoc": {
                            "begin": "3503",
                            "len": "33",
                            "source": "7"
                        }
                    },
                    "170": {
                        "lhs": "low",
                        "sourceLoc": {
                            "begin": "16605",
                            "len": "15",
                            "source": "51"
                        }
                    },
                    "171": {
                        "lhs": "high",
                        "sourceLoc": {
                            "begin": "16630",
                            "len": "18",
                            "source": "51"
                        }
                    },
                    "172": {
                        "lhs": "pos",
                        "sourceLoc": {
                            "begin": "16903",
                            "len": "67",
                            "source": "51"
                        }
                    },
                    "173": {
                        "lhs": "pos",
                        "sourceLoc": {
                            "begin": "17259",
                            "len": "38",
                            "source": "51"
                        }
                    },
                    "174": {
                        "lhs": "pos",
                        "sourceLoc": {
                            "begin": "17687",
                            "len": "38",
                            "source": "51"
                        }
                    },
                    "175": {
                        "lhs": "pos",
                        "sourceLoc": {
                            "begin": "18692",
                            "len": "25",
                            "source": "51"
                        }
                    },
                    "176": {
                        "lhs": "ckpt",
                        "sourceLoc": {
                            "begin": "4078",
                            "len": "70",
                            "source": "51"
                        }
                    },
                    "177": {
                        "lhs": "mid",
                        "sourceLoc": {
                            "begin": "6270",
                            "len": "37",
                            "source": "51"
                        }
                    },
                    "178": {
                        "lhs": "mid",
                        "sourceLoc": {
                            "begin": "7054",
                            "len": "37",
                            "source": "51"
                        }
                    },
                    "179": {
                        "lhs": "ckpt",
                        "sourceLoc": {
                            "begin": "10946",
                            "len": "70",
                            "source": "51"
                        }
                    },
                    "18": {
                        "lhs": "account",
                        "sourceLoc": {
                            "begin": "5844",
                            "len": "30",
                            "source": "7"
                        }
                    },
                    "180": {
                        "lhs": "mid",
                        "sourceLoc": {
                            "begin": "13138",
                            "len": "37",
                            "source": "51"
                        }
                    },
                    "181": {
                        "lhs": "mid",
                        "sourceLoc": {
                            "begin": "13922",
                            "len": "37",
                            "source": "51"
                        }
                    },
                    "182": {
                        "lhs": "ckpt",
                        "sourceLoc": {
                            "begin": "17814",
                            "len": "70",
                            "source": "51"
                        }
                    },
                    "183": {
                        "lhs": "mid",
                        "sourceLoc": {
                            "begin": "20006",
                            "len": "37",
                            "source": "51"
                        }
                    },
                    "184": {
                        "lhs": "mid",
                        "sourceLoc": {
                            "begin": "20790",
                            "len": "37",
                            "source": "51"
                        }
                    },
                    "185": {
                        "lhs": "low",
                        "sourceLoc": {
                            "begin": "3119",
                            "len": "13",
                            "source": "51"
                        }
                    },
                    "186": {
                        "lhs": "low",
                        "sourceLoc": {
                            "begin": "6429",
                            "len": "13",
                            "source": "51"
                        }
                    },
                    "187": {
                        "lhs": "high",
                        "sourceLoc": {
                            "begin": "7216",
                            "len": "10",
                            "source": "51"
                        }
                    },
                    "188": {
                        "lhs": "low",
                        "sourceLoc": {
                            "begin": "9987",
                            "len": "13",
                            "source": "51"
                        }
                    },
                    "189": {
                        "lhs": "low",
                        "sourceLoc": {
                            "begin": "13297",
                            "len": "13",
                            "source": "51"
                        }
                    },
                    "19": {
                        "lhs": "signer",
                        "sourceLoc": {
                            "begin": "6281",
                            "len": "185",
                            "source": "7"
                        }
                    },
                    "190": {
                        "lhs": "high",
                        "sourceLoc": {
                            "begin": "14084",
                            "len": "10",
                            "source": "51"
                        }
                    },
                    "191": {
                        "lhs": "low",
                        "sourceLoc": {
                            "begin": "16855",
                            "len": "13",
                            "source": "51"
                        }
                    },
                    "192": {
                        "lhs": "low",
                        "sourceLoc": {
                            "begin": "20165",
                            "len": "13",
                            "source": "51"
                        }
                    },
                    "193": {
                        "lhs": "high",
                        "sourceLoc": {
                            "begin": "20952",
                            "len": "10",
                            "source": "51"
                        }
                    },
                    "194": {
                        "lhs": "delay,_,_",
                        "sourceLoc": {
                            "begin": "3675",
                            "len": "35",
                            "source": "52"
                        }
                    },
                    "195": {
                        "lhs": "value",
                        "sourceLoc": {
                            "begin": "4199",
                            "len": "25",
                            "source": "52"
                        }
                    },
                    "196": {
                        "lhs": "setback",
                        "sourceLoc": {
                            "begin": "4234",
                            "len": "86",
                            "source": "52"
                        }
                    },
                    "197": {
                        "lhs": "raw",
                        "sourceLoc": {
                            "begin": "4666",
                            "len": "32",
                            "source": "52"
                        }
                    },
                    "198": {
                        "lhs": "(valueBefore, valueAfter, effect)",
                        "sourceLoc": {
                            "begin": "3026",
                            "len": "49",
                            "source": "52"
                        }
                    },
                    "199": {
                        "lhs": "effect",
                        "sourceLoc": {
                            "begin": "4330",
                            "len": "30",
                            "source": "52"
                        }
                    },
                    "2": {
                        "lhs": "$",
                        "sourceLoc": {
                            "begin": "3847",
                            "len": "47",
                            "source": "0"
                        }
                    },
                    "20": {
                        "lhs": "oldDelegate",
                        "sourceLoc": {
                            "begin": "6812",
                            "len": "40",
                            "source": "7"
                        }
                    },
                    "200": {
                        "lhs": "valueAfter",
                        "sourceLoc": {
                            "begin": "4709",
                            "len": "24",
                            "source": "52"
                        }
                    },
                    "201": {
                        "lhs": "valueBefore",
                        "sourceLoc": {
                            "begin": "4743",
                            "len": "31",
                            "source": "52"
                        }
                    },
                    "202": {
                        "lhs": "effect",
                        "sourceLoc": {
                            "begin": "4784",
                            "len": "26",
                            "source": "52"
                        }
                    },
                    "203": {
                        "lhs": "bidderAddressesReference_",
                        "sourceLoc": {
                            "begin": "472",
                            "len": "78",
                            "source": "54"
                        }
                    },
                    "204": {
                        "lhs": "totalNumBids_",
                        "sourceLoc": {
                            "begin": "554",
                            "len": "58",
                            "source": "54"
                        }
                    },
                    "205": {
                        "lhs": "bidderAddress_",
                        "sourceLoc": {
                            "begin": "803",
                            "len": "68",
                            "source": "54"
                        }
                    },
                    "206": {
                        "lhs": "bidderInfoReference_",
                        "sourceLoc": {
                            "begin": "1093",
                            "len": "80",
                            "source": "54"
                        }
                    },
                    "207": {
                        "lhs": "lastBidTimeStampCopy_",
                        "sourceLoc": {
                            "begin": "1571",
                            "len": "89",
                            "source": "54"
                        }
                    },
                    "208": {
                        "lhs": "lastBidDuration_",
                        "sourceLoc": {
                            "begin": "1664",
                            "len": "66",
                            "source": "54"
                        }
                    },
                    "209": {
                        "lhs": "chronoStartTimeStamp_",
                        "sourceLoc": {
                            "begin": "2959",
                            "len": "95",
                            "source": "54"
                        }
                    },
                    "21": {
                        "lhs": "beaconImplementation",
                        "sourceLoc": {
                            "begin": "4850",
                            "len": "66",
                            "source": "17"
                        }
                    },
                    "210": {
                        "lhs": "chronoDuration_",
                        "sourceLoc": {
                            "begin": "3058",
                            "len": "69",
                            "source": "54"
                        }
                    },
                    "211": {
                        "lhs": "ethBidPrice_",
                        "sourceLoc": {
                            "begin": "3380",
                            "len": "52",
                            "source": "55"
                        }
                    },
                    "212": {
                        "lhs": "paidEthPrice_",
                        "sourceLoc": {
                            "begin": "3436",
                            "len": "126",
                            "source": "55"
                        }
                    },
                    "213": {
                        "lhs": "overpaidEthPrice_",
                        "sourceLoc": {
                            "begin": "3597",
                            "len": "68",
                            "source": "55"
                        }
                    },
                    "214": {
                        "lhs": "paidPrice_",
                        "sourceLoc": {
                            "begin": "13637",
                            "len": "50",
                            "source": "55"
                        }
                    },
                    "215": {
                        "lhs": "newCstDutchAuctionBeginningBidPrice_",
                        "sourceLoc": {
                            "begin": "15538",
                            "len": "188",
                            "source": "55"
                        }
                    },
                    "216": {
                        "lhs": "bidderAddressesReference_",
                        "sourceLoc": {
                            "begin": "20764",
                            "len": "77",
                            "source": "55"
                        }
                    },
                    "217": {
                        "lhs": "numBids_",
                        "sourceLoc": {
                            "begin": "20845",
                            "len": "53",
                            "source": "55"
                        }
                    },
                    "218": {
                        "lhs": "bidderAddressesReference_.items[numBids_]",
                        "sourceLoc": {
                            "begin": "20902",
                            "len": "56",
                            "source": "55"
                        }
                    },
                    "219": {
                        "lhs": "bidderAddressesReference_.numItems",
                        "sourceLoc": {
                            "begin": "20977",
                            "len": "45",
                            "source": "55"
                        }
                    },
                    "22": {
                        "lhs": "owner",
                        "sourceLoc": {
                            "begin": "3400",
                            "len": "28",
                            "source": "19"
                        }
                    },
                    "220": {
                        "lhs": "nextEthBidPrice_",
                        "sourceLoc": {
                            "begin": "10278",
                            "len": "34",
                            "source": "55"
                        }
                    },
                    "221": {
                        "lhs": "ethDutchAuctionElapsedDuration_",
                        "sourceLoc": {
                            "begin": "8972",
                            "len": "102",
                            "source": "55"
                        }
                    },
                    "222": {
                        "lhs": "ethDutchAuctionEndingBidPrice_",
                        "sourceLoc": {
                            "begin": "9553",
                            "len": "100",
                            "source": "55"
                        }
                    },
                    "223": {
                        "lhs": "ethDutchAuctionDuration_",
                        "sourceLoc": {
                            "begin": "9785",
                            "len": "64",
                            "source": "55"
                        }
                    },
                    "224": {
                        "lhs": "nextEthBidPrice_",
                        "sourceLoc": {
                            "begin": "10190",
                            "len": "49",
                            "source": "55"
                        }
                    },
                    "225": {
                        "lhs": "roundActivationTimeCopy_",
                        "sourceLoc": {
                            "begin": "481",
                            "len": "54",
                            "source": "56"
                        }
                    },
                    "226": {
                        "lhs": "roundActivationTimeCopy_",
                        "sourceLoc": {
                            "begin": "858",
                            "len": "54",
                            "source": "56"
                        }
                    },
                    "227": {
                        "lhs": "nftId_",
                        "sourceLoc": {
                            "begin": "3213",
                            "len": "70",
                            "source": "59"
                        }
                    },
                    "228": {
                        "lhs": "firstNftId_",
                        "sourceLoc": {
                            "begin": "3499",
                            "len": "19",
                            "source": "59"
                        }
                    },
                    "229": {
                        "lhs": "nftId_",
                        "sourceLoc": {
                            "begin": "4013",
                            "len": "30",
                            "source": "59"
                        }
                    },
                    "23": {
                        "lhs": "owner",
                        "sourceLoc": {
                            "begin": "4087",
                            "len": "28",
                            "source": "19"
                        }
                    },
                    "230": {
                        "lhs": "nftSeed_",
                        "sourceLoc": {
                            "begin": "4253",
                            "len": "78",
                            "source": "59"
                        }
                    },
                    "231": {
                        "lhs": "from_",
                        "sourceLoc": {
                            "begin": "5726",
                            "len": "28",
                            "source": "60"
                        }
                    },
                    "232": {
                        "lhs": "from_",
                        "sourceLoc": {
                            "begin": "6012",
                            "len": "28",
                            "source": "60"
                        }
                    },
                    "233": {
                        "lhs": "specReference_",
                        "sourceLoc": {
                            "begin": "4630",
                            "len": "49",
                            "source": "60"
                        }
                    },
                    "234": {
                        "lhs": "specReference_",
                        "sourceLoc": {
                            "begin": "4933",
                            "len": "49",
                            "source": "60"
                        }
                    },
                    "235": {
                        "lhs": "to_",
                        "sourceLoc": {
                            "begin": "5826",
                            "len": "26",
                            "source": "60"
                        }
                    },
                    "236": {
                        "lhs": "specReference_",
                        "sourceLoc": {
                            "begin": "6114",
                            "len": "49",
                            "source": "60"
                        }
                    },
                    "237": {
                        "lhs": "to_",
                        "sourceLoc": {
                            "begin": "6168",
                            "len": "36",
                            "source": "60"
                        }
                    },
                    "238": {
                        "lhs": "value_",
                        "sourceLoc": {
                            "begin": "6209",
                            "len": "37",
                            "source": "60"
                        }
                    },
                    "239": {
                        "lhs": "specReference_",
                        "sourceLoc": {
                            "begin": "5325",
                            "len": "55",
                            "source": "60"
                        }
                    },
                    "24": {
                        "lhs": "spender",
                        "sourceLoc": {
                            "begin": "4879",
                            "len": "30",
                            "source": "19"
                        }
                    },
                    "240": {
                        "lhs": "value_",
                        "sourceLoc": {
                            "begin": "5386",
                            "len": "36",
                            "source": "60"
                        }
                    },
                    "241": {
                        "lhs": "newEthDonationWithInfoRecordIndex_",
                        "sourceLoc": {
                            "begin": "673",
                            "len": "78",
                            "source": "61"
                        }
                    },
                    "242": {
                        "lhs": "newEthDonationWithInfoRecordReference_",
                        "sourceLoc": {
                            "begin": "755",
                            "len": "108",
                            "source": "61"
                        }
                    },
                    "243": {
                        "lhs": "newEthDonationWithInfoRecordReference_.roundNum",
                        "sourceLoc": {
                            "begin": "867",
                            "len": "58",
                            "source": "61"
                        }
                    },
                    "244": {
                        "lhs": "newEthDonationWithInfoRecordReference_.donorAddress",
                        "sourceLoc": {
                            "begin": "929",
                            "len": "66",
                            "source": "61"
                        }
                    },
                    "245": {
                        "lhs": "newEthDonationWithInfoRecordReference_.amount",
                        "sourceLoc": {
                            "begin": "999",
                            "len": "57",
                            "source": "61"
                        }
                    },
                    "246": {
                        "lhs": "newEthDonationWithInfoRecordReference_.data",
                        "sourceLoc": {
                            "begin": "1060",
                            "len": "51",
                            "source": "61"
                        }
                    },
                    "247": {
                        "lhs": "mainEthPrizeAmount_",
                        "sourceLoc": {
                            "begin": "5960",
                            "len": "27",
                            "source": "62"
                        }
                    },
                    "248": {
                        "lhs": "durationUntilOperationIsPermitted_",
                        "sourceLoc": {
                            "begin": "4992",
                            "len": "113",
                            "source": "62"
                        }
                    },
                    "249": {
                        "lhs": "luckyStakerAddress_",
                        "sourceLoc": {
                            "begin": "9289",
                            "len": "70",
                            "source": "62"
                        }
                    },
                    "25": {
                        "lhs": "currentAllowance",
                        "sourceLoc": {
                            "begin": "10514",
                            "len": "52",
                            "source": "19"
                        }
                    },
                    "250": {
                        "lhs": "cosmicSignatureTokenMintSpecs_",
                        "sourceLoc": {
                            "begin": "10472",
                            "len": "72",
                            "source": "62"
                        }
                    },
                    "251": {
                        "lhs": "randomNumber_",
                        "sourceLoc": {
                            "begin": "11625",
                            "len": "90",
                            "source": "62"
                        }
                    },
                    "252": {
                        "lhs": "raffleWinnerAddress_",
                        "sourceLoc": {
                            "begin": "11724",
                            "len": "114",
                            "source": "62"
                        }
                    },
                    "253": {
                        "lhs": "luckyStakerAddress_",
                        "sourceLoc": {
                            "begin": "17026",
                            "len": "89",
                            "source": "62"
                        }
                    },
                    "254": {
                        "lhs": "cosmicSignatureNftOwnerAddresses_[cosmicSignatureNftOwnerRandomWalkNftStakerAddressIndex_ + luckyStakerIndex_]",
                        "sourceLoc": {
                            "begin": "9690",
                            "len": "132",
                            "source": "62"
                        }
                    },
                    "255": {
                        "lhs": "cosmicSignatureNftOwnerAddresses_[cosmicSignatureNftIndex_]",
                        "sourceLoc": {
                            "begin": "11953",
                            "len": "82",
                            "source": "62"
                        }
                    },
                    "256": {
                        "lhs": "raffleWinnerAddress_",
                        "sourceLoc": {
                            "begin": "13468",
                            "len": "90",
                            "source": "62"
                        }
                    },
                    "257": {
                        "lhs": "ethDepositReference_",
                        "sourceLoc": {
                            "begin": "20608",
                            "len": "85",
                            "source": "62"
                        }
                    },
                    "258": {
                        "lhs": "randomNumber_",
                        "sourceLoc": {
                            "begin": "20703",
                            "len": "90",
                            "source": "62"
                        }
                    },
                    "259": {
                        "lhs": "raffleWinnerAddress_",
                        "sourceLoc": {
                            "begin": "20803",
                            "len": "114",
                            "source": "62"
                        }
                    },
                    "26": {
                        "lhs": "fromBalance",
                        "sourceLoc": {
                            "begin": "6285",
                            "len": "37",
                            "source": "19"
                        }
                    },
                    "260": {
                        "lhs": "ethDepositReference_.prizeWinnerAddress",
                        "sourceLoc": {
                            "begin": "20998",
                            "len": "62",
                            "source": "62"
                        }
                    },
                    "261": {
                        "lhs": "ethDepositReference_.amount",
                        "sourceLoc": {
                            "begin": "21070",
                            "len": "60",
                            "source": "62"
                        }
                    },
                    "262": {
                        "lhs": "ethBalanceInfoReference_",
                        "sourceLoc": {
                            "begin": "5790",
                            "len": "96",
                            "source": "66"
                        }
                    },
                    "263": {
                        "lhs": "ethBalanceInfoReference_",
                        "sourceLoc": {
                            "begin": "6571",
                            "len": "89",
                            "source": "66"
                        }
                    },
                    "264": {
                        "lhs": "ethBalanceAmountCopy_",
                        "sourceLoc": {
                            "begin": "6695",
                            "len": "63",
                            "source": "66"
                        }
                    },
                    "265": {
                        "lhs": "isSuccess_,_",
                        "sourceLoc": {
                            "begin": "6954",
                            "len": "73",
                            "source": "66"
                        }
                    },
                    "266": {
                        "lhs": "ethBalanceInfoReference_",
                        "sourceLoc": {
                            "begin": "7309",
                            "len": "96",
                            "source": "66"
                        }
                    },
                    "267": {
                        "lhs": "roundTimeoutTimeToWithdrawPrizes_",
                        "sourceLoc": {
                            "begin": "7409",
                            "len": "112",
                            "source": "66"
                        }
                    },
                    "268": {
                        "lhs": "ethBalanceAmountCopy_",
                        "sourceLoc": {
                            "begin": "7795",
                            "len": "63",
                            "source": "66"
                        }
                    },
                    "269": {
                        "lhs": "isSuccess_,_",
                        "sourceLoc": {
                            "begin": "8061",
                            "len": "73",
                            "source": "66"
                        }
                    },
                    "27": {
                        "lhs": "structHash",
                        "sourceLoc": {
                            "begin": "1989",
                            "len": "110",
                            "source": "22"
                        }
                    },
                    "270": {
                        "lhs": "newDonatedTokenIndex_",
                        "sourceLoc": {
                            "begin": "8951",
                            "len": "79",
                            "source": "66"
                        }
                    },
                    "271": {
                        "lhs": "newDonatedTokenReference_",
                        "sourceLoc": {
                            "begin": "9034",
                            "len": "86",
                            "source": "66"
                        }
                    },
                    "272": {
                        "lhs": "donatedTokenIndex_",
                        "sourceLoc": {
                            "begin": "11139",
                            "len": "76",
                            "source": "66"
                        }
                    },
                    "273": {
                        "lhs": "donatedTokenReference_",
                        "sourceLoc": {
                            "begin": "11220",
                            "len": "80",
                            "source": "66"
                        }
                    },
                    "274": {
                        "lhs": "donatedTokenCopy_",
                        "sourceLoc": {
                            "begin": "11440",
                            "len": "62",
                            "source": "66"
                        }
                    },
                    "275": {
                        "lhs": "donatedTokenIndex_",
                        "sourceLoc": {
                            "begin": "12471",
                            "len": "76",
                            "source": "66"
                        }
                    },
                    "276": {
                        "lhs": "numDonatedNftsCopy_",
                        "sourceLoc": {
                            "begin": "13277",
                            "len": "44",
                            "source": "66"
                        }
                    },
                    "277": {
                        "lhs": "newDonatedNftReference_",
                        "sourceLoc": {
                            "begin": "13325",
                            "len": "77",
                            "source": "66"
                        }
                    },
                    "278": {
                        "lhs": "donatedNftReference_",
                        "sourceLoc": {
                            "begin": "14359",
                            "len": "61",
                            "source": "66"
                        }
                    },
                    "279": {
                        "lhs": "donatedNftCopy_",
                        "sourceLoc": {
                            "begin": "14424",
                            "len": "56",
                            "source": "66"
                        }
                    },
                    "28": {
                        "lhs": "hash",
                        "sourceLoc": {
                            "begin": "2110",
                            "len": "43",
                            "source": "22"
                        }
                    },
                    "280": {
                        "lhs": "ethBalanceInfoReference_.roundNum",
                        "sourceLoc": {
                            "begin": "6245",
                            "len": "45",
                            "source": "66"
                        }
                    },
                    "281": {
                        "lhs": "ethBalanceInfoReference_.amount",
                        "sourceLoc": {
                            "begin": "6358",
                            "len": "42",
                            "source": "66"
                        }
                    },
                    "282": {
                        "lhs": "newDonatedTokenReference_.amount",
                        "sourceLoc": {
                            "begin": "9273",
                            "len": "43",
                            "source": "66"
                        }
                    },
                    "283": {
                        "lhs": "newDonatedNftReference_.roundNum",
                        "sourceLoc": {
                            "begin": "13406",
                            "len": "44",
                            "source": "66"
                        }
                    },
                    "284": {
                        "lhs": "newDonatedNftReference_.nftAddress",
                        "sourceLoc": {
                            "begin": "13454",
                            "len": "48",
                            "source": "66"
                        }
                    },
                    "285": {
                        "lhs": "newDonatedNftReference_.nftId",
                        "sourceLoc": {
                            "begin": "13506",
                            "len": "38",
                            "source": "66"
                        }
                    },
                    "286": {
                        "lhs": "ethDepositReference_",
                        "sourceLoc": {
                            "begin": "3703",
                            "len": "73",
                            "source": "66"
                        }
                    },
                    "287": {
                        "lhs": "donatedTokenToClaimReference_",
                        "sourceLoc": {
                            "begin": "12076",
                            "len": "109",
                            "source": "66"
                        }
                    },
                    "288": {
                        "lhs": "newActionCounter_",
                        "sourceLoc": {
                            "begin": "2641",
                            "len": "45",
                            "source": "71"
                        }
                    },
                    "289": {
                        "lhs": "newStakeActionId_",
                        "sourceLoc": {
                            "begin": "2727",
                            "len": "45",
                            "source": "71"
                        }
                    },
                    "29": {
                        "lhs": "signer",
                        "sourceLoc": {
                            "begin": "2164",
                            "len": "45",
                            "source": "22"
                        }
                    },
                    "290": {
                        "lhs": "newStakeActionReference_",
                        "sourceLoc": {
                            "begin": "2776",
                            "len": "78",
                            "source": "71"
                        }
                    },
                    "291": {
                        "lhs": "newNumStakedNfts_",
                        "sourceLoc": {
                            "begin": "3109",
                            "len": "41",
                            "source": "71"
                        }
                    },
                    "292": {
                        "lhs": "newStakeActionIndex_",
                        "sourceLoc": {
                            "begin": "3154",
                            "len": "48",
                            "source": "71"
                        }
                    },
                    "293": {
                        "lhs": "stakeActionReference_",
                        "sourceLoc": {
                            "begin": "4400",
                            "len": "72",
                            "source": "71"
                        }
                    },
                    "294": {
                        "lhs": "stakeActionCopy_",
                        "sourceLoc": {
                            "begin": "4476",
                            "len": "59",
                            "source": "71"
                        }
                    },
                    "295": {
                        "lhs": "newNumStakedNfts_",
                        "sourceLoc": {
                            "begin": "5262",
                            "len": "45",
                            "source": "71"
                        }
                    },
                    "296": {
                        "lhs": "lastStakeActionId_",
                        "sourceLoc": {
                            "begin": "5509",
                            "len": "62",
                            "source": "71"
                        }
                    },
                    "297": {
                        "lhs": "newActionCounter_",
                        "sourceLoc": {
                            "begin": "5908",
                            "len": "45",
                            "source": "71"
                        }
                    },
                    "298": {
                        "lhs": "luckyStakerAddresses_",
                        "sourceLoc": {
                            "begin": "7255",
                            "len": "38",
                            "source": "71"
                        }
                    },
                    "299": {
                        "lhs": "numStakedNftsCopy_",
                        "sourceLoc": {
                            "begin": "7297",
                            "len": "42",
                            "source": "71"
                        }
                    },
                    "3": {
                        "lhs": "oldOwner",
                        "sourceLoc": {
                            "begin": "3904",
                            "len": "27",
                            "source": "0"
                        }
                    },
                    "30": {
                        "lhs": "oldAllowance",
                        "sourceLoc": {
                            "begin": "2558",
                            "len": "62",
                            "source": "26"
                        }
                    },
                    "300": {
                        "lhs": "newStakeActionReference_.nftId",
                        "sourceLoc": {
                            "begin": "2924",
                            "len": "39",
                            "source": "71"
                        }
                    },
                    "301": {
                        "lhs": "newStakeActionReference_.nftOwnerAddress",
                        "sourceLoc": {
                            "begin": "3052",
                            "len": "53",
                            "source": "71"
                        }
                    },
                    "302": {
                        "lhs": "newStakeActionReference_.index",
                        "sourceLoc": {
                            "begin": "3272",
                            "len": "53",
                            "source": "71"
                        }
                    },
                    "303": {
                        "lhs": "randomNumber_",
                        "sourceLoc": {
                            "begin": "7564",
                            "len": "83",
                            "source": "71"
                        }
                    },
                    "304": {
                        "lhs": "luckyStakeActionIndex_",
                        "sourceLoc": {
                            "begin": "7653",
                            "len": "67",
                            "source": "71"
                        }
                    },
                    "305": {
                        "lhs": "luckyStakeActionId_",
                        "sourceLoc": {
                            "begin": "7726",
                            "len": "68",
                            "source": "71"
                        }
                    },
                    "306": {
                        "lhs": "luckyStakeActionReference_",
                        "sourceLoc": {
                            "begin": "7800",
                            "len": "82",
                            "source": "71"
                        }
                    },
                    "307": {
                        "lhs": "luckyStakerAddress_",
                        "sourceLoc": {
                            "begin": "7979",
                            "len": "72",
                            "source": "71"
                        }
                    },
                    "308": {
                        "lhs": "luckyStakerAddresses_[luckyStakerIndex_]",
                        "sourceLoc": {
                            "begin": "8149",
                            "len": "62",
                            "source": "71"
                        }
                    },
                    "31": {
                        "lhs": "approvalCall",
                        "sourceLoc": {
                            "begin": "4487",
                            "len": "75",
                            "source": "26"
                        }
                    },
                    "32": {
                        "lhs": "returnSize",
                        "sourceLoc": {
                            "begin": "7766",
                            "len": "18",
                            "source": "26"
                        }
                    },
                    "33": {
                        "lhs": "returnValue",
                        "sourceLoc": {
                            "begin": "7794",
                            "len": "19",
                            "source": "26"
                        }
                    },
                    "34": {
                        "lhs": "success",
                        "sourceLoc": {
                            "begin": "9007",
                            "len": "12",
                            "source": "26"
                        }
                    },
                    "35": {
                        "lhs": "returnSize",
                        "sourceLoc": {
                            "begin": "9029",
                            "len": "18",
                            "source": "26"
                        }
                    },
                    "36": {
                        "lhs": "returnValue",
                        "sourceLoc": {
                            "begin": "9057",
                            "len": "19",
                            "source": "26"
                        }
                    },
                    "37": {
                        "lhs": "baseURI",
                        "sourceLoc": {
                            "begin": "2798",
                            "len": "34",
                            "source": "27"
                        }
                    },
                    "38": {
                        "lhs": "previousOwner",
                        "sourceLoc": {
                            "begin": "4537",
                            "len": "58",
                            "source": "27"
                        }
                    },
                    "39": {
                        "lhs": "from",
                        "sourceLoc": {
                            "begin": "8966",
                            "len": "32",
                            "source": "27"
                        }
                    },
                    "4": {
                        "lhs": "$._owner",
                        "sourceLoc": {
                            "begin": "3941",
                            "len": "19",
                            "source": "0"
                        }
                    },
                    "40": {
                        "lhs": "previousOwner",
                        "sourceLoc": {
                            "begin": "10137",
                            "len": "56",
                            "source": "27"
                        }
                    },
                    "41": {
                        "lhs": "previousOwner",
                        "sourceLoc": {
                            "begin": "11561",
                            "len": "64",
                            "source": "27"
                        }
                    },
                    "42": {
                        "lhs": "previousOwner",
                        "sourceLoc": {
                            "begin": "12238",
                            "len": "56",
                            "source": "27"
                        }
                    },
                    "43": {
                        "lhs": "owner",
                        "sourceLoc": {
                            "begin": "16294",
                            "len": "33",
                            "source": "27"
                        }
                    },
                    "44": {
                        "lhs": "previousOwner",
                        "sourceLoc": {
                            "begin": "2632",
                            "len": "56",
                            "source": "30"
                        }
                    },
                    "45": {
                        "lhs": "length",
                        "sourceLoc": {
                            "begin": "3521",
                            "len": "34",
                            "source": "30"
                        }
                    },
                    "46": {
                        "lhs": "lastTokenIndex",
                        "sourceLoc": {
                            "begin": "4886",
                            "len": "40",
                            "source": "30"
                        }
                    },
                    "47": {
                        "lhs": "tokenIndex",
                        "sourceLoc": {
                            "begin": "4936",
                            "len": "47",
                            "source": "30"
                        }
                    },
                    "48": {
                        "lhs": "_ownedTokensByOwner",
                        "sourceLoc": {
                            "begin": "4994",
                            "len": "82",
                            "source": "30"
                        }
                    },
                    "49": {
                        "lhs": "lastTokenIndex",
                        "sourceLoc": {
                            "begin": "6216",
                            "len": "46",
                            "source": "30"
                        }
                    },
                    "5": {
                        "lhs": "$",
                        "sourceLoc": {
                            "begin": "4158",
                            "len": "59",
                            "source": "1"
                        }
                    },
                    "50": {
                        "lhs": "tokenIndex",
                        "sourceLoc": {
                            "begin": "6272",
                            "len": "45",
                            "source": "30"
                        }
                    },
                    "51": {
                        "lhs": "lastTokenId",
                        "sourceLoc": {
                            "begin": "6639",
                            "len": "48",
                            "source": "30"
                        }
                    },
                    "52": {
                        "lhs": "success,returndata",
                        "sourceLoc": {
                            "begin": "1506",
                            "len": "75",
                            "source": "34"
                        }
                    },
                    "53": {
                        "lhs": "success,returndata",
                        "sourceLoc": {
                            "begin": "3230",
                            "len": "73",
                            "source": "34"
                        }
                    },
                    "54": {
                        "lhs": "success,returndata",
                        "sourceLoc": {
                            "begin": "3631",
                            "len": "65",
                            "source": "34"
                        }
                    },
                    "55": {
                        "lhs": "success,returndata",
                        "sourceLoc": {
                            "begin": "4023",
                            "len": "67",
                            "source": "34"
                        }
                    },
                    "56": {
                        "lhs": "current",
                        "sourceLoc": {
                            "begin": "1348",
                            "len": "34",
                            "source": "37"
                        }
                    },
                    "57": {
                        "lhs": "bstr",
                        "sourceLoc": {
                            "begin": "1796",
                            "len": "30",
                            "source": "39"
                        }
                    },
                    "58": {
                        "lhs": "len",
                        "sourceLoc": {
                            "begin": "2162",
                            "len": "30",
                            "source": "39"
                        }
                    },
                    "59": {
                        "lhs": "str",
                        "sourceLoc": {
                            "begin": "2280",
                            "len": "34",
                            "source": "39"
                        }
                    },
                    "6": {
                        "lhs": "isTopLevelCall",
                        "sourceLoc": {
                            "begin": "4279",
                            "len": "38",
                            "source": "1"
                        }
                    },
                    "60": {
                        "lhs": "result",
                        "sourceLoc": {
                            "begin": "2608",
                            "len": "57",
                            "source": "39"
                        }
                    },
                    "61": {
                        "lhs": "localValue",
                        "sourceLoc": {
                            "begin": "2389",
                            "len": "26",
                            "source": "41"
                        }
                    },
                    "62": {
                        "lhs": "buffer",
                        "sourceLoc": {
                            "begin": "2425",
                            "len": "47",
                            "source": "41"
                        }
                    },
                    "63": {
                        "lhs": "buffer",
                        "sourceLoc": {
                            "begin": "3388",
                            "len": "46",
                            "source": "41"
                        }
                    },
                    "64": {
                        "lhs": "hashValue",
                        "sourceLoc": {
                            "begin": "3519",
                            "len": "17",
                            "source": "41"
                        }
                    },
                    "65": {
                        "lhs": "success,value",
                        "sourceLoc": {
                            "begin": "5048",
                            "len": "63",
                            "source": "41"
                        }
                    },
                    "66": {
                        "lhs": "buffer",
                        "sourceLoc": {
                            "begin": "6531",
                            "len": "34",
                            "source": "41"
                        }
                    },
                    "67": {
                        "lhs": "result",
                        "sourceLoc": {
                            "begin": "6576",
                            "len": "18",
                            "source": "41"
                        }
                    },
                    "68": {
                        "lhs": "success,value",
                        "sourceLoc": {
                            "begin": "7643",
                            "len": "61",
                            "source": "41"
                        }
                    },
                    "69": {
                        "lhs": "buffer",
                        "sourceLoc": {
                            "begin": "9309",
                            "len": "34",
                            "source": "41"
                        }
                    },
                    "7": {
                        "lhs": "initialized",
                        "sourceLoc": {
                            "begin": "4327",
                            "len": "35",
                            "source": "1"
                        }
                    },
                    "70": {
                        "lhs": "sign",
                        "sourceLoc": {
                            "begin": "9400",
                            "len": "86",
                            "source": "41"
                        }
                    },
                    "71": {
                        "lhs": "positiveSign",
                        "sourceLoc": {
                            "begin": "9567",
                            "len": "39",
                            "source": "41"
                        }
                    },
                    "72": {
                        "lhs": "negativeSign",
                        "sourceLoc": {
                            "begin": "9616",
                            "len": "39",
                            "source": "41"
                        }
                    },
                    "73": {
                        "lhs": "offset",
                        "sourceLoc": {
                            "begin": "9665",
                            "len": "56",
                            "source": "41"
                        }
                    },
                    "74": {
                        "lhs": "absSuccess,absValue",
                        "sourceLoc": {
                            "begin": "9732",
                            "len": "78",
                            "source": "41"
                        }
                    },
                    "75": {
                        "lhs": "success,value",
                        "sourceLoc": {
                            "begin": "10947",
                            "len": "66",
                            "source": "41"
                        }
                    },
                    "76": {
                        "lhs": "buffer",
                        "sourceLoc": {
                            "begin": "12457",
                            "len": "34",
                            "source": "41"
                        }
                    },
                    "77": {
                        "lhs": "hasPrefix",
                        "sourceLoc": {
                            "begin": "12539",
                            "len": "99",
                            "source": "41"
                        }
                    },
                    "78": {
                        "lhs": "offset",
                        "sourceLoc": {
                            "begin": "12719",
                            "len": "39",
                            "source": "41"
                        }
                    },
                    "79": {
                        "lhs": "result",
                        "sourceLoc": {
                            "begin": "12769",
                            "len": "18",
                            "source": "41"
                        }
                    },
                    "8": {
                        "lhs": "initialSetup",
                        "sourceLoc": {
                            "begin": "4706",
                            "len": "54",
                            "source": "1"
                        }
                    },
                    "80": {
                        "lhs": "success,value",
                        "sourceLoc": {
                            "begin": "14068",
                            "len": "66",
                            "source": "41"
                        }
                    },
                    "81": {
                        "lhs": "hasPrefix",
                        "sourceLoc": {
                            "begin": "15056",
                            "len": "105",
                            "source": "41"
                        }
                    },
                    "82": {
                        "lhs": "expectedLength",
                        "sourceLoc": {
                            "begin": "15242",
                            "len": "52",
                            "source": "41"
                        }
                    },
                    "83": {
                        "lhs": "value",
                        "sourceLoc": {
                            "begin": "15775",
                            "len": "24",
                            "source": "41"
                        }
                    },
                    "84": {
                        "lhs": "buffer[0]",
                        "sourceLoc": {
                            "begin": "2482",
                            "len": "15",
                            "source": "41"
                        }
                    },
                    "85": {
                        "lhs": "buffer[1]",
                        "sourceLoc": {
                            "begin": "2507",
                            "len": "15",
                            "source": "41"
                        }
                    },
                    "86": {
                        "lhs": "chr",
                        "sourceLoc": {
                            "begin": "6656",
                            "len": "67",
                            "source": "41"
                        }
                    },
                    "87": {
                        "lhs": "chr",
                        "sourceLoc": {
                            "begin": "12858",
                            "len": "67",
                            "source": "41"
                        }
                    },
                    "88": {
                        "lhs": "buffer[i]",
                        "sourceLoc": {
                            "begin": "2591",
                            "len": "40",
                            "source": "41"
                        }
                    },
                    "89": {
                        "lhs": "localValue",
                        "sourceLoc": {
                            "begin": "2645",
                            "len": "16",
                            "source": "41"
                        }
                    },
                    "9": {
                        "lhs": "construction",
                        "sourceLoc": {
                            "begin": "4770",
                            "len": "70",
                            "source": "1"
                        }
                    },
                    "90": {
                        "lhs": "hashValue",
                        "sourceLoc": {
                            "begin": "3957",
                            "len": "15",
                            "source": "41"
                        }
                    },
                    "91": {
                        "lhs": "result",
                        "sourceLoc": {
                            "begin": "6781",
                            "len": "12",
                            "source": "41"
                        }
                    },
                    "92": {
                        "lhs": "result",
                        "sourceLoc": {
                            "begin": "6807",
                            "len": "13",
                            "source": "41"
                        }
                    },
                    "93": {
                        "lhs": "result",
                        "sourceLoc": {
                            "begin": "12984",
                            "len": "12",
                            "source": "41"
                        }
                    },
                    "94": {
                        "lhs": "value",
                        "sourceLoc": {
                            "begin": "1511",
                            "len": "11",
                            "source": "41"
                        }
                    },
                    "95": {
                        "lhs": "recovered,error,errorArg",
                        "sourceLoc": {
                            "begin": "3811",
                            "len": "87",
                            "source": "43"
                        }
                    },
                    "96": {
                        "lhs": "recovered,error,errorArg",
                        "sourceLoc": {
                            "begin": "4913",
                            "len": "83",
                            "source": "43"
                        }
                    },
                    "97": {
                        "lhs": "signer",
                        "sourceLoc": {
                            "begin": "6524",
                            "len": "41",
                            "source": "43"
                        }
                    },
                    "98": {
                        "lhs": "recovered,error,errorArg",
                        "sourceLoc": {
                            "begin": "6991",
                            "len": "85",
                            "source": "43"
                        }
                    },
                    "99": {
                        "lhs": "success,result",
                        "sourceLoc": {
                            "begin": "13534",
                            "len": "51",
                            "source": "48"
                        }
                    }
                },
                "methods": [
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "constructor",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGame.sol",
                        "paramNames": [],
                        "returns": [],
                        "sighash": "0",
                        "sourceBytes": {
                            "begin": 2113,
                            "size": 121
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "nextRoundFirstCstDutchAuctionBeginningBidPrice",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "c7e7a601",
                        "sourceBytes": {
                            "begin": 9609,
                            "size": 61
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "nft",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "CosmicSignatureNft",
                                    "type": "Contract"
                                }
                            }
                        ],
                        "sighash": "47ccca02",
                        "sourceBytes": {
                            "begin": 14274,
                            "size": 29
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getMainPrizeTimeIncrement",
                        "notpayable": true,
                        "originalFile": "contracts/production/MainPrizeBase.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "4f734612",
                        "sourceBytes": {
                            "begin": 1084,
                            "size": 374
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "ethBidPriceIncreaseDivisor",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "a9742016",
                        "sourceBytes": {
                            "begin": 8442,
                            "size": 41
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setInitialDurationUntilMainPrizeDivisor",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "77fa1027",
                        "sourceBytes": {
                            "begin": 6354,
                            "size": 236
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setCstDutchAuctionBeginningBidPriceMinLimit",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "88ce802c",
                        "sourceBytes": {
                            "begin": 2664,
                            "size": 248
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "proxiableUUID",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bytes32",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "52d1902d",
                        "sourceBytes": {
                            "begin": 3708,
                            "size": 134
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setCharityEthDonationAmountPercentage",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "2d829a2d",
                        "sourceBytes": {
                            "begin": 10601,
                            "size": 668
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "numRaffleCosmicSignatureNftsForBidders",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "4c2a4a33",
                        "sourceBytes": {
                            "begin": 11802,
                            "size": 53
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "roundActivationTime",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "6e970834",
                        "sourceBytes": {
                            "begin": 6372,
                            "size": 34
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "mainPrizeTimeIncrementIncreaseDivisor",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "56732241",
                        "sourceBytes": {
                            "begin": 13255,
                            "size": 52
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "int256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getNextCstBidPrice",
                        "notpayable": true,
                        "originalFile": "contracts/production/Bidding.sol",
                        "paramNames": [
                            "currentTimeOffset_"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "71162641",
                        "sourceBytes": {
                            "begin": 16424,
                            "size": 827
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "IERC721",
                                    "type": "Contract"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "bidWithCstAndDonateNft",
                        "notpayable": true,
                        "originalFile": "contracts/production/Bidding.sol",
                        "paramNames": [
                            "priceMaxLimit_",
                            "message_",
                            "nftAddress_",
                            "nftId_"
                        ],
                        "returns": [],
                        "sighash": "3d5c1c49",
                        "sourceBytes": {
                            "begin": 12632,
                            "size": 291
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "usedRandomWalkNfts",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "ebb9bc5c",
                        "sourceBytes": {
                            "begin": 10094,
                            "size": 70
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "numRaffleCosmicSignatureNftsForRandomWalkNftStakers",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "e2f9185f",
                        "sourceBytes": {
                            "begin": 12011,
                            "size": 66
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "int256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "bidWithEth",
                        "notpayable": false,
                        "originalFile": "contracts/production/Bidding.sol",
                        "paramNames": [
                            "randomWalkNftId_",
                            "message_"
                        ],
                        "returns": [],
                        "sighash": "b63c4262",
                        "sourceBytes": {
                            "begin": 2570,
                            "size": 182
                        },
                        "stateMutability": "payable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "token",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "CosmicSignatureToken",
                                    "type": "Contract"
                                }
                            }
                        ],
                        "sighash": "fc0c546a",
                        "sourceBytes": {
                            "begin": 13935,
                            "size": 33
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setCharityAddress",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "0c9be46d",
                        "sourceBytes": {
                            "begin": 10385,
                            "size": 213
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "ethDonationWithInfoRecords",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "sighash": "b5d1f06f",
                        "sourceBytes": {
                            "begin": 1640,
                            "size": 61
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "cstDutchAuctionBeginningBidPriceMinLimit",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "bb4b3e6f",
                        "sourceBytes": {
                            "begin": 9778,
                            "size": 55
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "marketingWallet",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "75f0a874",
                        "sourceBytes": {
                            "begin": 14871,
                            "size": 30
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "cosmicSignatureNftStakingTotalEthRewardAmountPercentage",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "f7bea078",
                        "sourceBytes": {
                            "begin": 12217,
                            "size": 70
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "cstDutchAuctionBeginningTimeStamp",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "27700481",
                        "sourceBytes": {
                            "begin": 8733,
                            "size": 48
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getChronoWarriorEthPrizeAmount",
                        "notpayable": true,
                        "originalFile": "contracts/production/SecondaryPrizes.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "2665c882",
                        "sourceBytes": {
                            "begin": 406,
                            "size": 238
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getEthDutchAuctionDurations",
                        "notpayable": true,
                        "originalFile": "contracts/production/Bidding.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "int256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "fbaf5084",
                        "sourceBytes": {
                            "begin": 11398,
                            "size": 392
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "chronoWarriorAddress",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "6b7cbe85",
                        "sourceBytes": {
                            "begin": 3850,
                            "size": 35
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "PackedBytes"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "upgradeToAndCall",
                        "notpayable": false,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
                        "paramNames": [
                            "newImplementation",
                            "data"
                        ],
                        "returns": [],
                        "sighash": "4f1ef286",
                        "sourceBytes": {
                            "begin": 4161,
                            "size": 214
                        },
                        "stateMutability": "payable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "stakingWalletRandomWalkNft",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "StakingWalletRandomWalkNft",
                                    "type": "Contract"
                                }
                            }
                        ],
                        "sighash": "2d809e88",
                        "sourceBytes": {
                            "begin": 14505,
                            "size": 60
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "lastCstBidderAddress",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "ad4b0e8a",
                        "sourceBytes": {
                            "begin": 2257,
                            "size": 35
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "nextEthBidPrice",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "efeb248a",
                        "sourceBytes": {
                            "begin": 8336,
                            "size": 30
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "int256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "IERC721",
                                    "type": "Contract"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "bidWithEthAndDonateNft",
                        "notpayable": false,
                        "originalFile": "contracts/production/Bidding.sol",
                        "paramNames": [
                            "randomWalkNftId_",
                            "message_",
                            "nftAddress_",
                            "nftId_"
                        ],
                        "returns": [],
                        "sighash": "fdc5108b",
                        "sourceBytes": {
                            "begin": 2155,
                            "size": 302
                        },
                        "stateMutability": "payable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "bidderAddresses",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "2fb3c48f",
                        "sourceBytes": {
                            "begin": 2567,
                            "size": 67
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "mainEthPrizeAmountPercentage",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "f444b298",
                        "sourceBytes": {
                            "begin": 13747,
                            "size": 43
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setEthBidPriceIncreaseDivisor",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "f49efe9d",
                        "sourceBytes": {
                            "begin": 2010,
                            "size": 206
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setChronoWarriorEthPrizeAmountPercentage",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "1f1b4aa4",
                        "sourceBytes": {
                            "begin": 3527,
                            "size": 674
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "renounceOwnership",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
                        "paramNames": [],
                        "returns": [],
                        "sighash": "715018a6",
                        "sourceBytes": {
                            "begin": 3155,
                            "size": 101
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "ethDutchAuctionEndingBidPriceDivisor",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "ebaa1ea8",
                        "sourceBytes": {
                            "begin": 7987,
                            "size": 51
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setMarketingWalletCstContributionAmount",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "d9ab9eaa",
                        "sourceBytes": {
                            "begin": 10146,
                            "size": 236
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "claimMainPrize",
                        "notpayable": true,
                        "originalFile": "contracts/production/MainPrize.sol",
                        "paramNames": [],
                        "returns": [],
                        "sighash": "448c6eb1",
                        "sourceBytes": {
                            "begin": 4373,
                            "size": 1338
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "roundNum",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "119b22b3",
                        "sourceBytes": {
                            "begin": 4166,
                            "size": 23
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "ethDutchAuctionBeginningBidPrice",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "c87baab5",
                        "sourceBytes": {
                            "begin": 6961,
                            "size": 47
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setCosmicSignatureNftStakingTotalEthRewardAmountPercentage",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "4feb78b7",
                        "sourceBytes": {
                            "begin": 5641,
                            "size": 710
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setMainEthPrizeAmountPercentage",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "6b59acb8",
                        "sourceBytes": {
                            "begin": 7298,
                            "size": 879
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setCstRewardAmountForBidding",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "7a32ccba",
                        "sourceBytes": {
                            "begin": 3118,
                            "size": 203
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "enduranceChampionAddress",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "9e50acc9",
                        "sourceBytes": {
                            "begin": 3276,
                            "size": 39
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getRaffleTotalEthPrizeAmountForBidders",
                        "notpayable": true,
                        "originalFile": "contracts/production/SecondaryPrizes.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "a35286d1",
                        "sourceBytes": {
                            "begin": 716,
                            "size": 254
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "charityEthDonationAmountPercentage",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "be720ad5",
                        "sourceBytes": {
                            "begin": 16277,
                            "size": 49
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setNumRaffleEthPrizesForBidders",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "2f894cd7",
                        "sourceBytes": {
                            "begin": 4897,
                            "size": 212
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setEthBidRefundAmountInGasMinLimit",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "0587aedc",
                        "sourceBytes": {
                            "begin": 2219,
                            "size": 221
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "IERC20",
                                    "type": "Contract"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "bidWithCstAndDonateToken",
                        "notpayable": true,
                        "originalFile": "contracts/production/Bidding.sol",
                        "paramNames": [
                            "priceMaxLimit_",
                            "message_",
                            "tokenAddress_",
                            "amount_"
                        ],
                        "returns": [],
                        "sighash": "408b78e1",
                        "sourceBytes": {
                            "begin": 12239,
                            "size": 300
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "int256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "IERC20",
                                    "type": "Contract"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "bidWithEthAndDonateToken",
                        "notpayable": false,
                        "originalFile": "contracts/production/Bidding.sol",
                        "paramNames": [
                            "randomWalkNftId_",
                            "message_",
                            "tokenAddress_",
                            "amount_"
                        ],
                        "returns": [],
                        "sighash": "076e26e2",
                        "sourceBytes": {
                            "begin": 1719,
                            "size": 311
                        },
                        "stateMutability": "payable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setCstDutchAuctionDurationDivisor",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "23eb90e8",
                        "sourceBytes": {
                            "begin": 2443,
                            "size": 218
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "numRaffleEthPrizesForBidders",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "f11400f0",
                        "sourceBytes": {
                            "begin": 11626,
                            "size": 43
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "ethDutchAuctionDurationDivisor",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "d1f8fcf2",
                        "sourceBytes": {
                            "begin": 6482,
                            "size": 45
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "randomWalkNft",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "RandomWalkNFT",
                                    "type": "Contract"
                                }
                            }
                        ],
                        "sighash": "755b4ef7",
                        "sourceBytes": {
                            "begin": 14099,
                            "size": 34
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "bidWithCst",
                        "notpayable": true,
                        "originalFile": "contracts/production/Bidding.sol",
                        "paramNames": [
                            "priceMaxLimit_",
                            "message_"
                        ],
                        "returns": [],
                        "sighash": "683f5efa",
                        "sourceBytes": {
                            "begin": 13004,
                            "size": 171
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "calldata",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "donateEthWithInfo",
                        "notpayable": false,
                        "originalFile": "contracts/production/EthDonations.sol",
                        "paramNames": [
                            "data_"
                        ],
                        "returns": [],
                        "sighash": "23b31cfc",
                        "sourceBytes": {
                            "begin": 570,
                            "size": 643
                        },
                        "stateMutability": "payable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getCosmicSignatureNftStakingTotalEthRewardAmount",
                        "notpayable": true,
                        "originalFile": "contracts/production/SecondaryPrizes.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "5f0112fe",
                        "sourceBytes": {
                            "begin": 1052,
                            "size": 274
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "prevEnduranceChampionDuration",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "eaace302",
                        "sourceBytes": {
                            "begin": 3585,
                            "size": 44
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "donateEth",
                        "notpayable": false,
                        "originalFile": "contracts/production/EthDonations.sol",
                        "paramNames": [],
                        "returns": [],
                        "sighash": "aadd1b03",
                        "sourceBytes": {
                            "begin": 439,
                            "size": 128
                        },
                        "stateMutability": "payable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "enduranceChampionDuration",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "5863a705",
                        "sourceBytes": {
                            "begin": 3541,
                            "size": 40
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setEthDutchAuctionEndingBidPriceDivisor",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "ddd6df07",
                        "sourceBytes": {
                            "begin": 1771,
                            "size": 236
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getEthPlusRandomWalkNftBidPrice",
                        "notpayable": true,
                        "originalFile": "contracts/production/Bidding.sol",
                        "paramNames": [
                            "ethBidPrice_"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "27995f07",
                        "sourceBytes": {
                            "begin": 10470,
                            "size": 867
                        },
                        "stateMutability": "pure",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "mainPrizeTimeIncrementInMicroSeconds",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "eb13430e",
                        "sourceBytes": {
                            "begin": 13096,
                            "size": 51
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getTotalNumBids",
                        "notpayable": true,
                        "originalFile": "contracts/production/BidStatistics.sol",
                        "paramNames": [
                            "roundNum_"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "fd77310f",
                        "sourceBytes": {
                            "begin": 383,
                            "size": 257
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "lastBidderAddress",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "e5b3cd14",
                        "sourceBytes": {
                            "begin": 2099,
                            "size": 32
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "initialDurationUntilMainPrizeDivisor",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "44a4b917",
                        "sourceBytes": {
                            "begin": 12402,
                            "size": 51
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "cstDutchAuctionBeginningBidPrice",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "1b410319",
                        "sourceBytes": {
                            "begin": 9449,
                            "size": 47
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setEthDutchAuctionDurationDivisor",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "f34d411c",
                        "sourceBytes": {
                            "begin": 1550,
                            "size": 218
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setNumRaffleCosmicSignatureNftsForRandomWalkNftStakers",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "135f3d28",
                        "sourceBytes": {
                            "begin": 5357,
                            "size": 281
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "raffleTotalEthPrizeAmountForBiddersPercentage",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "477adf2a",
                        "sourceBytes": {
                            "begin": 11455,
                            "size": 60
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "ICosmicSignatureNft",
                                    "type": "Contract"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setCosmicSignatureNft",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "44acc12a",
                        "sourceBytes": {
                            "begin": 8720,
                            "size": 267
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getDurationUntilMainPrize",
                        "notpayable": true,
                        "originalFile": "contracts/production/MainPrizeBase.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "int256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "36750d2c",
                        "sourceBytes": {
                            "begin": 768,
                            "size": 313
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "timeoutDurationToClaimMainPrize",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "3b9d292e",
                        "sourceBytes": {
                            "begin": 13559,
                            "size": 46
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "biddersInfo",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "17887731",
                        "sourceBytes": {
                            "begin": 2675,
                            "size": 92
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getDurationElapsedSinceRoundActivation",
                        "notpayable": true,
                        "originalFile": "contracts/production/BiddingBase.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "int256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "040d4d31",
                        "sourceBytes": {
                            "begin": 2157,
                            "size": 318
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "IStakingWalletRandomWalkNft",
                                    "type": "Contract"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setStakingWalletRandomWalkNft",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "b4f1b134",
                        "sourceBytes": {
                            "begin": 9245,
                            "size": 322
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setMarketingWallet",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "5d098b38",
                        "sourceBytes": {
                            "begin": 9920,
                            "size": 223
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setMainPrizeTimeIncrementInMicroSeconds",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "a4be0d40",
                        "sourceBytes": {
                            "begin": 6593,
                            "size": 236
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getBidderTotalSpentAmounts",
                        "notpayable": true,
                        "originalFile": "contracts/production/BidStatistics.sol",
                        "paramNames": [
                            "roundNum_",
                            "bidderAddress_"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "fd9b3747",
                        "sourceBytes": {
                            "begin": 960,
                            "size": 312
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "tryGetCurrentChampions",
                        "notpayable": true,
                        "originalFile": "contracts/production/BidStatistics.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "cb720d4d",
                        "sourceBytes": {
                            "begin": 4154,
                            "size": 2623
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "ICosmicSignatureToken",
                                    "type": "Contract"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setCosmicSignatureToken",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "9646d758",
                        "sourceBytes": {
                            "begin": 8180,
                            "size": 277
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "marketingWalletCstContributionAmount",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "4164b95b",
                        "sourceBytes": {
                            "begin": 15471,
                            "size": 51
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getDurationUntilRoundActivation",
                        "notpayable": true,
                        "originalFile": "contracts/production/BiddingBase.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "int256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "ef22d15b",
                        "sourceBytes": {
                            "begin": 1862,
                            "size": 292
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "stakingWalletCosmicSignatureNft",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "StakingWalletCosmicSignatureNft",
                                    "type": "Contract"
                                }
                            }
                        ],
                        "sighash": "a922ab5d",
                        "sourceBytes": {
                            "begin": 14609,
                            "size": 70
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "owner",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "8da5cb5b",
                        "sourceBytes": {
                            "begin": 2441,
                            "size": 144
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getCstDutchAuctionDurations",
                        "notpayable": true,
                        "originalFile": "contracts/production/Bidding.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "int256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "b700db5f",
                        "sourceBytes": {
                            "begin": 17312,
                            "size": 388
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setBidMessageLengthMaxLimit",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "543f416f",
                        "sourceBytes": {
                            "begin": 2915,
                            "size": 200
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setTimeoutDurationToClaimMainPrize",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "f0bdab7c",
                        "sourceBytes": {
                            "begin": 7074,
                            "size": 221
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setNumRaffleCosmicSignatureNftsForBidders",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "1e9cbb7e",
                        "sourceBytes": {
                            "begin": 5112,
                            "size": 242
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "prizesWallet",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "PrizesWallet",
                                    "type": "Contract"
                                }
                            }
                        ],
                        "sighash": "2afa2580",
                        "sourceBytes": {
                            "begin": 14389,
                            "size": 32
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "cstRewardAmountForBidding",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "612c9f84",
                        "sourceBytes": {
                            "begin": 10798,
                            "size": 40
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "transferOwnership",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
                        "paramNames": [
                            "newOwner"
                        ],
                        "returns": [],
                        "sighash": "f2fde38b",
                        "sourceBytes": {
                            "begin": 3405,
                            "size": 215
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "IRandomWalkNFT",
                                    "type": "Contract"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setRandomWalkNft",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "9edeaf8e",
                        "sourceBytes": {
                            "begin": 8460,
                            "size": 257
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "ethBidRefundAmountInGasMinLimit",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "95184d8f",
                        "sourceBytes": {
                            "begin": 8596,
                            "size": 46
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setMainPrizeTimeIncrementIncreaseDivisor",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "cfb4e599",
                        "sourceBytes": {
                            "begin": 6832,
                            "size": 239
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setRaffleTotalEthPrizeAmountForBiddersPercentage",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "fdfb9ba4",
                        "sourceBytes": {
                            "begin": 4204,
                            "size": 690
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "delayDurationBeforeRoundActivation",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "b9cf9ba5",
                        "sourceBytes": {
                            "begin": 4906,
                            "size": 49
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "numEthDonationWithInfoRecords",
                        "notpayable": true,
                        "originalFile": "contracts/production/EthDonations.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "0b5f95ae",
                        "sourceBytes": {
                            "begin": 1216,
                            "size": 130
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "enduranceChampionStartTimeStamp",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "250fadb6",
                        "sourceBytes": {
                            "begin": 3451,
                            "size": 46
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "cstPrizeAmountMultiplier",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "2fe97db6",
                        "sourceBytes": {
                            "begin": 11072,
                            "size": 39
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getInitialDurationUntilMainPrize",
                        "notpayable": true,
                        "originalFile": "contracts/production/MainPrizeBase.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "2b8dcbba",
                        "sourceBytes": {
                            "begin": 441,
                            "size": 324
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setRoundActivationTime",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "2b91c7bb",
                        "sourceBytes": {
                            "begin": 1373,
                            "size": 174
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "bidMessageLengthMaxLimit",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "6c0613c0",
                        "sourceBytes": {
                            "begin": 10619,
                            "size": 39
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "charityAddress",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "afcf2fc4",
                        "sourceBytes": {
                            "begin": 16122,
                            "size": 29
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setCstPrizeAmountMultiplier",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "9c37b7ca",
                        "sourceBytes": {
                            "begin": 3324,
                            "size": 200
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "UPGRADE_INTERFACE_VERSION",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "sighash": "ad3cb1cc",
                        "sourceBytes": {
                            "begin": 1819,
                            "size": 58
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "cstDutchAuctionDurationDivisor",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "084223cd",
                        "sourceBytes": {
                            "begin": 8944,
                            "size": 45
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "IPrizesWallet",
                                    "type": "Contract"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setPrizesWallet",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "6c17e3cc",
                        "sourceBytes": {
                            "begin": 8990,
                            "size": 252
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "chronoWarriorEthPrizeAmountPercentage",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "54ada1d6",
                        "sourceBytes": {
                            "begin": 11240,
                            "size": 52
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getMainEthPrizeAmount",
                        "notpayable": true,
                        "originalFile": "contracts/production/MainPrize.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "5b0a45d9",
                        "sourceBytes": {
                            "begin": 26554,
                            "size": 220
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "IStakingWalletCosmicSignatureNft",
                                    "type": "Contract"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setStakingWalletCosmicSignatureNft",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "5a1e5bde",
                        "sourceBytes": {
                            "begin": 9570,
                            "size": 347
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "mainPrizeTime",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "18305de2",
                        "sourceBytes": {
                            "begin": 12723,
                            "size": 28
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "int256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getNextEthBidPrice",
                        "notpayable": true,
                        "originalFile": "contracts/production/Bidding.sol",
                        "paramNames": [
                            "currentTimeOffset_"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "265aafe2",
                        "sourceBytes": {
                            "begin": 8468,
                            "size": 1937
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "upgradeTo",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGame.sol",
                        "paramNames": [
                            "newImplementationAddress_"
                        ],
                        "returns": [],
                        "sighash": "3659cfe6",
                        "sourceBytes": {
                            "begin": 7127,
                            "size": 350
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "chronoWarriorDuration",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGameStorage.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "1824d5e7",
                        "sourceBytes": {
                            "begin": 4017,
                            "size": 36
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "initialize",
                        "notpayable": true,
                        "originalFile": "contracts/production/CosmicSignatureGame.sol",
                        "paramNames": [
                            "ownerAddress_"
                        ],
                        "returns": [],
                        "sighash": "c4d66de8",
                        "sourceBytes": {
                            "begin": 2597,
                            "size": 193
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getCharityEthDonationAmount",
                        "notpayable": true,
                        "originalFile": "contracts/production/MainPrize.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "0eb16be6",
                        "sourceBytes": {
                            "begin": 26835,
                            "size": 232
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setDelayDurationBeforeRoundActivation",
                        "notpayable": true,
                        "originalFile": "contracts/production/SystemManagement.sol",
                        "paramNames": [
                            "newValue_"
                        ],
                        "returns": [],
                        "sighash": "09794bee",
                        "sourceBytes": {
                            "begin": 1136,
                            "size": 234
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CosmicSignatureGame",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getBidderAddressAt",
                        "notpayable": true,
                        "originalFile": "contracts/production/BidStatistics.sol",
                        "paramNames": [
                            "roundNum_",
                            "bidIndex_"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "000ac9f1",
                        "sourceBytes": {
                            "begin": 692,
                            "size": 208
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    }
                ],
                "name": "CosmicSignatureGame",
                "original_file": "contracts/production/CosmicSignatureGame.sol",
                "solidityTypes": [
                    {
                        "astId": 12058,
                        "canonicalId": "contracts/production/interfaces/IPrizesWallet.sol|IPrizesWallet.EthDeposit",
                        "containingContract": "IPrizesWallet",
                        "structMembers": [
                            {
                                "name": "prizeWinnerAddress",
                                "type": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "amount",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "EthDeposit",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 12064,
                        "canonicalId": "contracts/production/interfaces/IPrizesWallet.sol|IPrizesWallet.EthBalanceInfo",
                        "containingContract": "IPrizesWallet",
                        "structMembers": [
                            {
                                "name": "roundNum",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "amount",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "EthBalanceInfo",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 12069,
                        "canonicalId": "contracts/production/interfaces/IPrizesWallet.sol|IPrizesWallet.DonatedToken",
                        "containingContract": "IPrizesWallet",
                        "structMembers": [
                            {
                                "name": "amount",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "DonatedToken",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 12076,
                        "canonicalId": "contracts/production/interfaces/IPrizesWallet.sol|IPrizesWallet.DonatedTokenToClaim",
                        "containingContract": "IPrizesWallet",
                        "structMembers": [
                            {
                                "name": "roundNum",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "tokenAddress",
                                "type": {
                                    "contractName": "IERC20",
                                    "type": "Contract"
                                }
                            }
                        ],
                        "structName": "DonatedTokenToClaim",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 12085,
                        "canonicalId": "contracts/production/interfaces/IPrizesWallet.sol|IPrizesWallet.DonatedNft",
                        "containingContract": "IPrizesWallet",
                        "structMembers": [
                            {
                                "name": "roundNum",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "nftAddress",
                                "type": {
                                    "contractName": "IERC721",
                                    "type": "Contract"
                                }
                            },
                            {
                                "name": "nftId",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "DonatedNft",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 8428,
                        "canonicalId": "contracts/production/interfaces/ICosmicSignatureToken.sol|ICosmicSignatureToken.MintSpec",
                        "containingContract": "ICosmicSignatureToken",
                        "structMembers": [
                            {
                                "name": "account",
                                "type": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "value",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "MintSpec",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 8435,
                        "canonicalId": "contracts/production/interfaces/ICosmicSignatureToken.sol|ICosmicSignatureToken.MintOrBurnSpec",
                        "containingContract": "ICosmicSignatureToken",
                        "structMembers": [
                            {
                                "name": "account",
                                "type": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "value",
                                "type": {
                                    "primitiveName": "int256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "MintOrBurnSpec",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 10897,
                        "canonicalId": "contracts/production/StakingWalletCosmicSignatureNft.sol|StakingWalletCosmicSignatureNft.StakeAction",
                        "containingContract": "StakingWalletCosmicSignatureNft",
                        "structMembers": [
                            {
                                "name": "nftId",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "nftOwnerAddress",
                                "type": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "initialRewardAmountPerStakedNft",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "StakeAction",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 23656,
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/types/Time.sol|Time.Delay",
                        "containingContract": "Time",
                        "type": "UserDefinedValueType",
                        "valueTypeAliasedName": {
                            "primitiveName": "uint112",
                            "type": "Primitive"
                        },
                        "valueTypeName": "Delay"
                    },
                    {
                        "astId": 21351,
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Trace224",
                        "containingContract": "Checkpoints",
                        "structMembers": [
                            {
                                "name": "_checkpoints",
                                "type": {
                                    "dynamicArrayBaseType": {
                                        "astId": 21356,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Checkpoint224",
                                        "containingContract": "Checkpoints",
                                        "structMembers": [
                                            {
                                                "name": "_key",
                                                "type": {
                                                    "primitiveName": "uint32",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "_value",
                                                "type": {
                                                    "primitiveName": "uint224",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "Checkpoint224",
                                        "type": "UserDefinedStruct"
                                    },
                                    "type": "Array"
                                }
                            }
                        ],
                        "structName": "Trace224",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 21356,
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Checkpoint224",
                        "containingContract": "Checkpoints",
                        "structMembers": [
                            {
                                "name": "_key",
                                "type": {
                                    "primitiveName": "uint32",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "_value",
                                "type": {
                                    "primitiveName": "uint224",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Checkpoint224",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 21904,
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Trace208",
                        "containingContract": "Checkpoints",
                        "structMembers": [
                            {
                                "name": "_checkpoints",
                                "type": {
                                    "dynamicArrayBaseType": {
                                        "astId": 21909,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Checkpoint208",
                                        "containingContract": "Checkpoints",
                                        "structMembers": [
                                            {
                                                "name": "_key",
                                                "type": {
                                                    "primitiveName": "uint48",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "_value",
                                                "type": {
                                                    "primitiveName": "uint208",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "Checkpoint208",
                                        "type": "UserDefinedStruct"
                                    },
                                    "type": "Array"
                                }
                            }
                        ],
                        "structName": "Trace208",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 21909,
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Checkpoint208",
                        "containingContract": "Checkpoints",
                        "structMembers": [
                            {
                                "name": "_key",
                                "type": {
                                    "primitiveName": "uint48",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "_value",
                                "type": {
                                    "primitiveName": "uint208",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Checkpoint208",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 22457,
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Trace160",
                        "containingContract": "Checkpoints",
                        "structMembers": [
                            {
                                "name": "_checkpoints",
                                "type": {
                                    "dynamicArrayBaseType": {
                                        "astId": 22462,
                                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Checkpoint160",
                                        "containingContract": "Checkpoints",
                                        "structMembers": [
                                            {
                                                "name": "_key",
                                                "type": {
                                                    "primitiveName": "uint96",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "_value",
                                                "type": {
                                                    "primitiveName": "uint160",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "Checkpoint160",
                                        "type": "UserDefinedStruct"
                                    },
                                    "type": "Array"
                                }
                            }
                        ],
                        "structName": "Trace160",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 22462,
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol|Checkpoints.Checkpoint160",
                        "containingContract": "Checkpoints",
                        "structMembers": [
                            {
                                "name": "_key",
                                "type": {
                                    "primitiveName": "uint96",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "_value",
                                "type": {
                                    "primitiveName": "uint160",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Checkpoint160",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 12426,
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol|OwnableUpgradeable.OwnableStorage",
                        "containingContract": "OwnableUpgradeable",
                        "structMembers": [
                            {
                                "name": "_owner",
                                "type": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "OwnableStorage",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 16663,
                        "canonicalId": "contracts/production/interfaces/ICosmicSignatureNft.sol|ICosmicSignatureNft.NftInfo",
                        "containingContract": "ICosmicSignatureNft",
                        "structMembers": [
                            {
                                "name": "name",
                                "type": {
                                    "type": "StringType"
                                }
                            },
                            {
                                "name": "seed",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "NftInfo",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 16671,
                        "canonicalId": "contracts/production/interfaces/ICosmicSignatureNft.sol|ICosmicSignatureNft.TransferFromSpec",
                        "containingContract": "ICosmicSignatureNft",
                        "structMembers": [
                            {
                                "name": "from",
                                "type": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "to",
                                "type": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "nftId",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "TransferFromSpec",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 6609,
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math.Rounding",
                        "containingContract": "Math",
                        "enumMembers": [
                            {
                                "name": "Floor"
                            },
                            {
                                "name": "Ceil"
                            },
                            {
                                "name": "Trunc"
                            },
                            {
                                "name": "Expand"
                            }
                        ],
                        "enumName": "Rounding",
                        "type": "UserDefinedEnum"
                    },
                    {
                        "astId": 23307,
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/ShortStrings.sol|ShortString",
                        "containingContract": null,
                        "type": "UserDefinedValueType",
                        "valueTypeAliasedName": {
                            "primitiveName": "bytes32",
                            "type": "Primitive"
                        },
                        "valueTypeName": "ShortString"
                    },
                    {
                        "astId": 12330,
                        "canonicalId": "contracts/production/libraries/RandomNumberHelpers.sol|RandomNumberHelpers.RandomNumberSeedWrapper",
                        "containingContract": "RandomNumberHelpers",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "RandomNumberSeedWrapper",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 11874,
                        "canonicalId": "contracts/production/interfaces/ICosmicSignatureGameStorage.sol|ICosmicSignatureGameStorage.EthDonationWithInfoRecord",
                        "containingContract": "ICosmicSignatureGameStorage",
                        "structMembers": [
                            {
                                "name": "roundNum",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "donorAddress",
                                "type": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "amount",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "data",
                                "type": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "structName": "EthDonationWithInfoRecord",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 11882,
                        "canonicalId": "contracts/production/interfaces/ICosmicSignatureGameStorage.sol|ICosmicSignatureGameStorage.BidderAddresses",
                        "containingContract": "ICosmicSignatureGameStorage",
                        "structMembers": [
                            {
                                "name": "numItems",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "items",
                                "type": {
                                    "mappingKeyType": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    },
                                    "mappingValueType": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    },
                                    "type": "Mapping"
                                }
                            }
                        ],
                        "structName": "BidderAddresses",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 11892,
                        "canonicalId": "contracts/production/interfaces/ICosmicSignatureGameStorage.sol|ICosmicSignatureGameStorage.BidderInfo",
                        "containingContract": "ICosmicSignatureGameStorage",
                        "structMembers": [
                            {
                                "name": "totalSpentEthAmount",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "totalSpentCstAmount",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "lastBidTimeStamp",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "BidderInfo",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 5369,
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol|Initializable.InitializableStorage",
                        "containingContract": "Initializable",
                        "structMembers": [
                            {
                                "name": "_initialized",
                                "type": {
                                    "primitiveName": "uint64",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "_initializing",
                                "type": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "InitializableStorage",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 943,
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol|StorageSlot.AddressSlot",
                        "containingContract": "StorageSlot",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "AddressSlot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 946,
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol|StorageSlot.BooleanSlot",
                        "containingContract": "StorageSlot",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "BooleanSlot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 949,
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol|StorageSlot.Bytes32Slot",
                        "containingContract": "StorageSlot",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "primitiveName": "bytes32",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Bytes32Slot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 952,
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol|StorageSlot.Uint256Slot",
                        "containingContract": "StorageSlot",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Uint256Slot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 955,
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol|StorageSlot.Int256Slot",
                        "containingContract": "StorageSlot",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "primitiveName": "int256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Int256Slot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 958,
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol|StorageSlot.StringSlot",
                        "containingContract": "StorageSlot",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "structName": "StringSlot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 961,
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol|StorageSlot.BytesSlot",
                        "containingContract": "StorageSlot",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "type": "PackedBytes"
                                }
                            }
                        ],
                        "structName": "BytesSlot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 5663,
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol|TransientSlot.AddressSlot",
                        "containingContract": "TransientSlot",
                        "type": "UserDefinedValueType",
                        "valueTypeAliasedName": {
                            "primitiveName": "bytes32",
                            "type": "Primitive"
                        },
                        "valueTypeName": "AddressSlot"
                    },
                    {
                        "astId": 5681,
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol|TransientSlot.BooleanSlot",
                        "containingContract": "TransientSlot",
                        "type": "UserDefinedValueType",
                        "valueTypeAliasedName": {
                            "primitiveName": "bytes32",
                            "type": "Primitive"
                        },
                        "valueTypeName": "BooleanSlot"
                    },
                    {
                        "astId": 5699,
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol|TransientSlot.Bytes32Slot",
                        "containingContract": "TransientSlot",
                        "type": "UserDefinedValueType",
                        "valueTypeAliasedName": {
                            "primitiveName": "bytes32",
                            "type": "Primitive"
                        },
                        "valueTypeName": "Bytes32Slot"
                    },
                    {
                        "astId": 5717,
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol|TransientSlot.Uint256Slot",
                        "containingContract": "TransientSlot",
                        "type": "UserDefinedValueType",
                        "valueTypeAliasedName": {
                            "primitiveName": "bytes32",
                            "type": "Primitive"
                        },
                        "valueTypeName": "Uint256Slot"
                    },
                    {
                        "astId": 5735,
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol|TransientSlot.Int256Slot",
                        "containingContract": "TransientSlot",
                        "type": "UserDefinedValueType",
                        "valueTypeAliasedName": {
                            "primitiveName": "bytes32",
                            "type": "Primitive"
                        },
                        "valueTypeName": "Int256Slot"
                    },
                    {
                        "astId": 20190,
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol|ECDSA.RecoverError",
                        "containingContract": "ECDSA",
                        "enumMembers": [
                            {
                                "name": "NoError"
                            },
                            {
                                "name": "InvalidSignature"
                            },
                            {
                                "name": "InvalidSignatureLength"
                            },
                            {
                                "name": "InvalidSignatureS"
                            }
                        ],
                        "enumName": "RecoverError",
                        "type": "UserDefinedEnum"
                    },
                    {
                        "astId": 11433,
                        "canonicalId": "contracts/production/StakingWalletRandomWalkNft.sol|StakingWalletRandomWalkNft.StakeAction",
                        "containingContract": "StakingWalletRandomWalkNft",
                        "structMembers": [
                            {
                                "name": "nftId",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "nftOwnerAddress",
                                "type": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "index",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "StakeAction",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 3141,
                        "canonicalId": "contracts/production/MainPrize.sol|MainPrize._PackedVariables1",
                        "containingContract": "MainPrize",
                        "structMembers": [
                            {
                                "name": "cosmicSignatureNftOwnerLastCstBidderAddressIndex",
                                "type": {
                                    "primitiveName": "uint64",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "cosmicSignatureNftOwnerMainPrizeBeneficiaryAddressIndex",
                                "type": {
                                    "primitiveName": "uint64",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "cosmicSignatureNftOwnerEnduranceChampionAddressIndex",
                                "type": {
                                    "primitiveName": "uint64",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "cosmicSignatureNftOwnerBidderAddressIndex",
                                "type": {
                                    "primitiveName": "uint64",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "_PackedVariables1",
                        "type": "UserDefinedStruct"
                    }
                ],
                "sourceBytes": {
                    "begin": 1550,
                    "size": 6781
                },
                "srcmapi;:::-;1550:7628:57;;;;;908:323:54;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3589:592:56;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2219:221:72;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1719:311:55;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8944:45:58;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1136:234:72;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2133:130:61;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10385:213:72;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;29762:506:62;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4166:23:58;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5357:281:72;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2675:92:58;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;4017:36;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12723:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9449:47;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5112:242:72;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3527:674;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;570:1560:61;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2443:218:72;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3451:46:58;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9251:2928:55;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;406:512:68;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8733:48:58;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12244:1230:55;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14389:32:58;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;441:598:63;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1373:174:72;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;14505:60:58;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10601:668:72;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4897:212;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2567:67:58;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11072:39;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7491:350:57;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1042:587:63;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13559:46:58;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15043:291:55;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;14650:300;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;15471:51:58;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4373:1473:62;;;;;;;;;;;;;:::i;:::-;;12402:51:58;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8720:267:72;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11455:60:58;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14274:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11802:53;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4803:234:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1632:648:63;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5641:710:72;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4350:134:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2915:200:72;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11240:52:58;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13255;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3541:40;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9570:347:72;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;29207:494:62;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9920:223:72;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1600:548:68;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10798:40:58;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15415:171:55;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7298:879:72;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3850:35:58;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10619:39;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8990:252:72;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6372:34:58;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;19521:1196:55;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4959:117:0;;;;;;;;;;;;;:::i;:::-;;14099:34:58;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14871:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6354:236:72;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3118:203;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2664:248;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3595:520:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8596:46:58;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8180:277:72;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3324:200;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3276:39:58;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8460:257:72;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;990:528:68;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6593:236:72;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;14609:70:58;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8442:41;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;439:128:61;;;:::i;:::-;;1819:58:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2257:35:58;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;16122:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9245:322:72;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1640:61:58;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;2570:182:55;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;20778:388;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;4906:49:58;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9778:55;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;16277:49;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2597:193:57;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9609:61:58;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6961:47;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5708:2623:54;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;6832:239:72;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6482:45:58;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10146:236:72;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1771;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;12011:66:58;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2099:32;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3585:44;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13096:51;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7987;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10094:70;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3294:292:56;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8336:30:58;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7074:221:72;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11626:43:58;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5532:239:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1550:218:72;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;13747:43:58;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2010:206:72;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;12217:70:58;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13535:392:55;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;13935:33:58;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;383:473:54;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1291:414;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2155:302:55;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4204:690:72;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3177:5608:55;3270:8;8937:13;8869:66;8862:89;9027:1;8959:66;8952:77;9105:1;9037:66;9030:77;9183:8;9115:66;9108:84;1335:21:4::1;:19;:21::i;:::-;3404:20:55::2;3427:29;3453:1;3427:18;:29::i;:::-;3404:52;;3556:12;3489:66;3482:87;3573:21;3627:1;3601:16;:28;3600:99;;3654:45;3686:12;3654:31;:45::i;:::-;3600:99;;;3636:12;3600:99;3573:126;;3799:13;3732:66;3725:88;3848:24;3902:13;3882:9;3875:41;;;;:::i;:::-;3848:68;;4016:17;3949:66;3942:92;4070:1;4042:17;:30:::0;4038:1897;::::2;;4188:1;4161:17;:29;4158:1777;;;4518:35;4590:13;4556:31;;:47;;;;:::i;:::-;4518:85;;4921:27;4900:17;4892:56;4888:712;;;4985:1;4958:29;;5010:9;4994:25;;4888:712;4462:1143;4158:1777;;;5905:13;5920:9;5780:150;;;;;;;;;;;;:::i;:::-;;;;;;;;4158:1777;4038:1897;5999:1;5973:16;:28;5969:982;;6187:1;6138:18;:45;6165:16;6138:45;;;;;;;;;;;;:50;6312:16;6125:215;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;6604:13;;;;;;;;;;;:21;;;6634:16;6604:48;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6588:64;;:12;:10;:12::i;:::-;:64;;;6762:13;;;;;;;;;;;6790:16;6814:12;:10;:12::i;:::-;6345:492;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;6890:1;6842:18;:45;6869:16;6842:45;;;;;;;;;;;:49;;;;5969:982;7044:13;6985:11;:21;6997:8;;6985:21;;;;;;;;;;;:35;7007:12;:10;:12::i;:::-;6985:35;;;;;;;;;;;;;;;:55;;;:72;;;;;;;:::i;:::-;;;;;;;;7094:1;7065:31;;:17;;;;;;;;;;;:31;;::::0;7061:170:::2;;1787:1:93;7138:12:55;:88;;;;:::i;:::-;7103:32;:123;;;;7061:170;7584:1;7555:26;;7540:12;:41;;;;:::i;:::-;7525:12;:56;;;;:::i;:::-;:60;;;;:::i;:::-;7507:15;:78;;;;7622:5;;;;;;;;;;;:10;;;7633:12;:10;:12::i;:::-;7647:25;;7622:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7678:34;7703:8;7678:10;:34::i;:::-;7798:16;7748:12;:10;:12::i;:::-;7721:128;;7735:8;;7721:128;7772:13;7791:2;7819:8;7832:13;;7721:128;;;;;;;;;:::i;:::-;;;;;;;;8045:1;8018:17;:29;8014:751;;;8247:15;8268:12;:10;:12::i;:::-;:17;;8301;8268:56;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8246:78;;;8616:10;8609:152;;8714:12;:10;:12::i;:::-;8736:17;8642:113;;;;;;;;;;;;:::i;:::-;;;;;;;;8609:152;8049:716;8014:751;3315:5470;;;1377:20:4::1;:18;:20::i;:::-;3177:5608:55::0;;;:::o;908:323:54:-;1006:7;1019:22;1044:15;:26;1060:9;1044:26;;;;;;;;;;;:32;;:43;1077:9;1044:43;;;;;;;;;;;;;;;;;;;;;1019:68;;1187:14;1120:66;1113:89;1213:14;1206:21;;;908:323;;;;:::o;3589:592:56:-;3669:6;3780:13;3712:66;3705:89;3870:1;3802:66;3795:77;3948:1;3880:66;3873:77;4026:43;4105:19;;4079:15;4072:53;4026:99;;4137:36;4130:43;;;3589:592;:::o;2219:221:72:-;3488:13:0;:11;:13::i;:::-;395:23:56::1;:21;:23::i;:::-;2369:9:72::2;2335:31;:43;;;;2387:49;2426:9;2387:49;;;;;;:::i;:::-;;;;;;;;2219:221:::0;:::o;1719:311:55:-;1911:39;1923:16;1941:8;1911:11;:39::i;:::-;1954:12;;;;;;;;;;;:24;;;1979:8;;1989:12;:10;:12::i;:::-;2003:13;2018:7;1954:72;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1719:311;;;;:::o;8944:45:58:-;;;;:::o;1136:234:72:-;3488:13:0;:11;:13::i;:::-;1296:9:72::1;1259:34;:46;;;;1314:52;1356:9;1314:52;;;;;;:::i;:::-;;;;;;;;1136:234:::0;:::o;2133:130:61:-;2206:7;2226:26;:33;;;;2219:40;;2133:130;:::o;10385:213:72:-;3488:13:0;:11;:13::i;:::-;395:23:56::1;:21;:23::i;:::-;10512:9:72::2;327:38:53;358:6;327:30;:38::i;:::-;10544:9:72::3;10527:14;;:26;;;;;;;;;;;;;;;;;;10584:9;10562:32;;;;;;;;;;;;422:1:56::2;10385:213:72::0;:::o;29762:506:62:-;29831:7;29943:13;29875:66;29868:89;30033:1;29965:66;29958:77;30111:1;30043:66;30036:77;30257:3;30220:34;;30196:21;:58;:64;;;;;:::i;:::-;;;30189:71;;29762:506;:::o;4166:23:58:-;;;;:::o;5357:281:72:-;3488:13:0;:11;:13::i;:::-;395:23:56::1;:21;:23::i;:::-;5547:9:72::2;5493:51;:63;;;;5565:69;5624:9;5565:69;;;;;;:::i;:::-;;;;;;;;5357:281:::0;:::o;2675:92:58:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4017:36::-;;;;:::o;12723:28::-;;;;:::o;9449:47::-;;;;:::o;5112:242:72:-;3488:13:0;:11;:13::i;:::-;395:23:56::1;:21;:23::i;:::-;5276:9:72::2;5235:38;:50;;;;5294:56;5340:9;5294:56;;;;;;:::i;:::-;;;;;;;;5112:242:::0;:::o;3527:674::-;3488:13:0;:11;:13::i;:::-;395:23:56::1;:21;:23::i;:::-;4124:9:72::2;4084:37;:49;;;;4142:55;4187:9;4142:55;;;;;;:::i;:::-;;;;;;;;3527:674:::0;:::o;570:1560:61:-;673:42;718:26;:33;;;;673:78;;851:34;784:66;777:109;890:72;965:26;:33;;;;;;;;;;;;;;;;;;;;;;;;890:108;;1098:1;1031:66;1024:76;1154:8;;1104:38;:47;;:58;;;;1163:24;1190:38;:47;;;1163:74;;1337:16;1270:66;1263:91;1412:12;:10;:12::i;:::-;1358:38;:51;;;:66;;;;;;;;;;;;;;;;;;1425:24;1452:38;:51;;;;;;;;;;;;1425:78;;1603:16;1536:66;1529:91;1672:9;1624:38;:45;;:57;;;;1682:24;1709:38;:45;;;1682:72;;1854:16;1787:66;1780:91;1921:5;;1875:38;:43;;:51;;;;;;;:::i;:::-;;2026:1;1959:66;1952:76;2091:34;2066:12;:10;:12::i;:::-;2037:89;;2056:8;;2037:89;2080:9;2037:89;;;;;;:::i;:::-;;;;;;;;669:1461;;;;;570:1560;;:::o;2443:218:72:-;3488:13:0;:11;:13::i;:::-;395:23:56::1;:21;:23::i;:::-;2591:9:72::2;2558:30;:42;;;;2609:48;2647:9;2609:48;;;;;;:::i;:::-;;;;;;;;2443:218:::0;:::o;3451:46:58:-;;;;:::o;9251:2928:55:-;9336:7;9448:13;9380:66;9373:89;9538:1;9470:66;9463:77;9616:1;9548:66;9541:77;9694:18;9626:66;9619:94;9789:24;9851:1;9822:31;;:17;;;;;;;;;;;:31;;;9818:2274;;9880:32;;9861:51;;10017:1;9997:16;:21;9993:1925;;1654:12:93;10027:77:55;;9993:1925;;;10124:38;10208:18;10165:40;:38;:40::i;:::-;:61;10124:102;;10326:31;10259:66;10252:106;10411:1;10369:31;:44;10365:1547;;;10837:38;10936:1;10897:36;;10878:16;:55;;;;;:::i;:::-;;;:59;10837:100;;11037:30;10970:66;10963:105;11200:32;11235:29;:27;:29::i;:::-;11200:64;;11364:24;11297:66;11290:99;11444:24;11409:31;11401:67;11397:508;;;11479:42;11543:30;11524:16;:49;11479:94;;11682:24;11647:31;11602:34;:77;:104;;;;;:::i;:::-;;;11582:124;;;;11470:245;11397:508;;;11749:30;11730:49;;11879:16;11812:66;11805:91;11397:508;10453:1459;;10365:1547;10117:1801;9993:1925;9818:2274;;;11954:15;;11935:34;;12069:16;12002:66;11995:91;9818:2274;12155:16;12148:23;;;9251:2928;;;:::o;406:512:68:-;478:7;590:13;522:66;515:89;680:1;612:66;605:77;758:1;690:66;683:77;907:3;867:37;;843:21;:61;:67;;;;;:::i;:::-;;;836:74;;406:512;:::o;8733:48:58:-;;;;:::o;12244:1230:55:-;12337:7;12449:13;12381:66;12374:89;12539:1;12471:66;12464:77;12617:1;12549:66;12542:77;12695:12;12627:66;12620:88;12817:37;2481:1:93;12938::55;2481::93;12878:61:55;12862:12;:78;12861:144;;;;;:::i;:::-;;;12817:188;;13437:29;13430:36;;;12244:1230;;;:::o;14389:32:58:-;;;;;;;;;;;;;:::o;441:598:63:-;515:7;627:13;559:66;552:89;717:1;649:66;642:77;795:1;727:66;720:77;873:38;953:36;;914;;:75;;;;;:::i;:::-;;;873:116;;1001:30;994:37;;;441:598;:::o;1373:174:72:-;3488:13:0;:11;:13::i;:::-;2003:30:56::1;:28;:30::i;:::-;1509:34:72::2;1533:9;1509:23;:34::i;:::-;1373:174:::0;:::o;14505:60:58:-;;;;;;;;;;;;;:::o;10601:668:72:-;3488:13:0;:11;:13::i;:::-;395:23:56::1;:21;:23::i;:::-;11195:9:72::2;11158:34;:46;;;;11213:52;11255:9;11213:52;;;;;;:::i;:::-;;;;;;;;10601:668:::0;:::o;4897:212::-;3488:13:0;:11;:13::i;:::-;395:23:56::1;:21;:23::i;:::-;5041:9:72::2;5010:28;:40;;;;5059:46;5095:9;5059:46;;;;;;:::i;:::-;;;;;;;;4897:212:::0;:::o;2567:67:58:-;;;;;;;;;;;;;;;;;;;;;;:::o;11072:39::-;;;;:::o;7491:350:57:-;7642:44;7660:25;7642:17;:44::i;:::-;7759:25;7690:60;811:66:17;7717:32:57;;7690:26;:60::i;:::-;:66;;;:94;;;;;;;;;;;;;;;;;;7811:25;7793:44;;;;;;;;;;;;7491:350;:::o;1042:587:63:-;1109:6;1220:13;1152:66;1145:89;1310:1;1242:66;1235:77;1388:1;1320:66;1313:77;1506:30;1570:15;1546:13;;1539:47;1506:80;;1598:23;1591:30;;;1042:587;:::o;13559:46:58:-;;;;:::o;15043:291:55:-;15222:37;15234:14;15250:8;15222:11;:37::i;:::-;15263:12;;;;;;;;;;;:22;;;15286:8;;15296:12;:10;:12::i;:::-;15310:11;15323:6;15263:67;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15043:291;;;;:::o;14650:300::-;14833:37;14845:14;14861:8;14833:11;:37::i;:::-;14874:12;;;;;;;;;;;:24;;;14899:8;;14909:12;:10;:12::i;:::-;14923:13;14938:7;14874:72;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14650:300;;;;:::o;15471:51:58:-;;;;:::o;4373:1473:62:-;1335:21:4;:19;:21::i;:::-;4491:17:62::1;;;;;;;;;;;4475:33;;:12;:10;:12::i;:::-;:33;;::::0;4471:1097:::1;;4644:13;;4625:15;:32;;4737:13;;4752:15;4612:161;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;4471:1097;;;4864:1;4835:31;;:17;;;;;;;;;;;:31;;::::0;4822:164:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;4992:41;5073:31;;5036:27;:25;:27::i;:::-;:69;;;;:::i;:::-;4992:113;;5205:34;5138:66;5131:109;5303:1;5258:34;:47;;5466:17;;;;;;;;;;;5490:12;:10;:12::i;:::-;5517:34;5245:318;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;4784:784;4471:1097;5704:26;:24;:26::i;:::-;5734:45;5763:15;5734:28;:45::i;:::-;5783:19;:17;:19::i;:::-;5806;:17;:19::i;:::-;1377:20:4::0;:18;:20::i;:::-;4373:1473:62:o;12402:51:58:-;;;;:::o;8720:267:72:-;3488:13:0;:11;:13::i;:::-;395:23:56::1;:21;:23::i;:::-;8871:9:72::2;327:38:53;358:6;327:30;:38::i;:::-;8920:9:72::3;8887:3;;:44;;;;;;;;;;;;;;;;;;8973:9;8940:43;;;;;;;;;;;;422:1:56::2;8720:267:72::0;:::o;11455:60:58:-;;;;:::o;14274:29::-;;;;;;;;;;;;;:::o;11802:53::-;;;;:::o;4803:234:2:-;4913:4;5184:13;5116:66;5109:89;5274:1;5206:66;5199:77;5352:1;5284:66;5277:77;5430:4;5362:66;5355:80;2655:13:::1;:11;:13::i;:::-;4938:36:::2;4956:17;4938;:36::i;:::-;4984:46;5006:17;5025:4;4984:21;:46::i;:::-;4803:234:::0;;;:::o;1632:648:63:-;1699:7;1811:13;1743:66;1736:89;1901:1;1833:66;1826:77;1979:1;1911:66;1904:77;2057:31;12072:3:93;;12196:19;2091:36:63;;:87;;;;;:::i;:::-;;;2057:121;;2249:23;2242:30;;;1632:648;:::o;5641:710:72:-;3488:13:0;:11;:13::i;:::-;395:23:56::1;:21;:23::i;:::-;6256:9:72::2;6198:55;:67;;;;6274:73;6337:9;6274:73;;;;;;:::i;:::-;;;;;;;;5641:710:::0;:::o;4350:134:2:-;4419:7;2926:20;:18;:20::i;:::-;811:66:17::1;4445:32:2;;4438:39;;4350:134:::0;:::o;2915:200:72:-;3488:13:0;:11;:13::i;:::-;395:23:56::1;:21;:23::i;:::-;3051:9:72::2;3024:24;:36;;;;3069:42;3101:9;3069:42;;;;;;:::i;:::-;;;;;;;;2915:200:::0;:::o;11240:52:58:-;;;;:::o;13255:::-;;;;:::o;3541:40::-;;;;:::o;9570:347:72:-;3488:13:0;:11;:13::i;:::-;395:23:56::1;:21;:23::i;:::-;9747:9:72::2;327:38:53;358:6;327:30;:38::i;:::-;9837:9:72::3;9763:31;;:85;;;;;;;;;;;;;;;;;;9903:9;9857:56;;;;;;;;;;;;422:1:56::2;9570:347:72::0;:::o;29207:494:62:-;29270:7;29382:13;29314:66;29307:89;29472:1;29404:66;29397:77;29550:1;29482:66;29475:77;29690:3;29659:28;;29635:21;:52;:58;;;;;:::i;:::-;;;29628:65;;29207:494;:::o;9920:223:72:-;3488:13:0;:11;:13::i;:::-;395:23:56::1;:21;:23::i;:::-;10048:9:72::2;327:38:53;358:6;327:30;:38::i;:::-;10081:9:72::3;10063:15;;:27;;;;;;;;;;;;;;;;;;10129:9;10099:40;;;;;;;;;;;;422:1:56::2;9920:223:72::0;:::o;1600:548:68:-;1690:7;1802:13;1734:66;1727:89;1892:1;1824:66;1817:77;1970:1;1902:66;1895:77;2137:3;2079:55;;2055:21;:79;:85;;;;;:::i;:::-;;;2048:92;;1600:548;:::o;10798:40:58:-;;;;:::o;15415:171:55:-;15545:37;15557:14;15573:8;15545:11;:37::i;:::-;15415:171;;:::o;7298:879:72:-;3488:13:0;:11;:13::i;:::-;395:23:56::1;:21;:23::i;:::-;8109:9:72::2;8078:28;:40;;;;8127:46;8163:9;8127:46;;;;;;:::i;:::-;;;;;;;;7298:879:::0;:::o;3850:35:58:-;;;;;;;;;;;;;:::o;10619:39::-;;;;:::o;8990:252:72:-;3488:13:0;:11;:13::i;:::-;395:23:56::1;:21;:23::i;:::-;9129:9:72::2;327:38:53;358:6;327:30;:38::i;:::-;9181:9:72::3;9145:12;;:47;;;;;;;;;;;;;;;;;;9228:9;9201:37;;;;;;;;;;;;422:1:56::2;8990:252:72::0;:::o;6372:34:58:-;;;;:::o;19521:1196:55:-;19606:7;19718:13;19650:66;19643:89;19808:1;19740:66;19733:77;19886:1;19818:66;19811:77;19964:18;19896:66;19889:94;20060:32;20094:40;20138:47;:45;:47::i;:::-;20059:126;;;;20227:18;20190:55;;;;20298:1;20254:33;:46;20250:72;;20315:1;20308:8;;;;;;20250:72;20375:41;20456:1;20424:34;;:20;;;;;;;;;;;:34;;;20423:120;;20511:32;;20423:120;;;20462:46;;20423:120;20375:168;;20549:24;20657;20620:33;20576;:78;:105;;;;;:::i;:::-;;;20549:132;;20693:16;20686:23;;;;;;19521:1196;;;;:::o;4959:117:0:-;5206:13;5138:66;5131:89;5296:1;5228:66;5221:77;5374:1;5306:66;5299:77;3488:13:::1;:11;:13::i;:::-;5039:30:::2;5066:1;5039:18;:30::i;:::-;4959:117::o:0;14099:34:58:-;;;;;;;;;;;;;:::o;14871:30::-;;;;;;;;;;;;;:::o;6354:236:72:-;3488:13:0;:11;:13::i;:::-;395:23:56::1;:21;:23::i;:::-;6514:9:72::2;6475:36;:48;;;;6532:54;6576:9;6532:54;;;;;;:::i;:::-;;;;;;;;6354:236:::0;:::o;3118:203::-;3488:13:0;:11;:13::i;:::-;395:23:56::1;:21;:23::i;:::-;3256:9:72::2;3228:25;:37;;;;3274:43;3307:9;3274:43;;;;;;:::i;:::-;;;;;;;;3118:203:::0;:::o;2664:248::-;3488:13:0;:11;:13::i;:::-;395:23:56::1;:21;:23::i;:::-;2832:9:72::2;2789:40;:52;;;;2850:58;2898:9;2850:58;;;;;;:::i;:::-;;;;;;;;2664:248:::0;:::o;3595:520:0:-;3641:7;3753:13;3685:66;3678:89;3843:1;3775:66;3768:77;3921:1;3853:66;3846:77;3934:24;3961:20;:18;:20::i;:::-;3934:47;;4081:1;4014:66;4007:76;4100:1;:8;;;;;;;;;;;;4093:15;;;3595:520;:::o;8596:46:58:-;;;;:::o;8180:277:72:-;3488:13:0;:11;:13::i;:::-;395:23:56::1;:21;:23::i;:::-;8335:9:72::2;327:38:53;358:6;327:30;:38::i;:::-;8388:9:72::3;8351:5;;:48;;;;;;;;;;;;;;;;;;8443:9;8408:45;;;;;;;;;;;;422:1:56::2;8180:277:72::0;:::o;3324:200::-;3488:13:0;:11;:13::i;:::-;395:23:56::1;:21;:23::i;:::-;3460:9:72::2;3433:24;:36;;;;3478:42;3510:9;3478:42;;;;;;:::i;:::-;;;;;;;;3324:200:::0;:::o;3276:39:58:-;;;;;;;;;;;;;:::o;8460:257:72:-;3488:13:0;:11;:13::i;:::-;395:23:56::1;:21;:23::i;:::-;8601:9:72::2;327:38:53;358:6;327:30;:38::i;:::-;8655:9:72::3;8617:13;;:49;;;;;;;;;;;;;;;;;;8703:9;8675:38;;;;;;;;;;;;422:1:56::2;8460:257:72::0;:::o;990:528:68:-;1070:7;1182:13;1114:66;1107:89;1272:1;1204:66;1197:77;1350:1;1282:66;1275:77;1507:3;1459:45;;1435:21;:69;:75;;;;;:::i;:::-;;;1428:82;;990:528;:::o;6593:236:72:-;3488:13:0;:11;:13::i;:::-;395:23:56::1;:21;:23::i;:::-;6753:9:72::2;6714:36;:48;;;;6771:54;6815:9;6771:54;;;;;;:::i;:::-;;;;;;;;6593:236:::0;:::o;14609:70:58:-;;;;;;;;;;;;;:::o;8442:41::-;;;;:::o;439:128:61:-;539:12;:10;:12::i;:::-;518:45;;529:8;;518:45;553:9;518:45;;;;;;:::i;:::-;;;;;;;;439:128::o;1819:58:2:-;;;;;;;;;;;;;;;;;;;:::o;2257:35:58:-;;;;;;;;;;;;;:::o;16122:29::-;;;;;;;;;;;;;:::o;9245:322:72:-;3488:13:0;:11;:13::i;:::-;395:23:56::1;:21;:23::i;:::-;9412:9:72::2;327:38:53;358:6;327:30;:38::i;:::-;9492:9:72::3;9428:26;;:75;;;;;;;;;;;;;;;;;;9553:9;9512:51;;;;;;;;;;;;422:1:56::2;9245:322:72::0;:::o;1640:61:58:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2570:182:55:-;2709:39;2721:16;2739:8;2709:11;:39::i;:::-;2570:182;;:::o;20778:388::-;20849:7;20858:6;20941:32;20976:29;:27;:29::i;:::-;20941:64;;21010:38;21051:36;:34;:36::i;:::-;21010:77;;21100:24;21126:31;21092:66;;;;;;20778:388;;:::o;4906:49:58:-;;;;:::o;9778:55::-;;;;:::o;16277:49::-;;;;:::o;2597:193:57:-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4317:1;4250:66;4243:76;4381:19;4404:1;:15;;;;;;;;;;;;4403:16;4381:38;;4519:14;4452:66;4445:89;4544:18;4565:1;:14;;;;;;;;;;;;4544:35;;4679:11;4612:66;4605:86;5035:17;5070:1;5055:11;:16;;;:34;;;;;5075:14;5055:34;5035:54;;5189:12;5122:66;5115:87;5212:17;5247:1;5232:11;:16;;;:50;;;;;5281:1;5260:4;5252:25;;;:30;5232:50;5212:70;;5382:12;5315:66;5308:87;5411:12;5410:13;:30;;;;;5428:12;5427:13;5410:30;5406:91;;;5463:23;;;;;;;;;;;;;;5406:91;5523:1;5506;:14;;;:18;;;;;;;;;;;;;;;;;;5525:22;5550:1;:14;;;;;;;;;;;;5525:39;;5664:15;5597:66;5590:90;5694:14;5690:67;;;5742:4;5724:1;:15;;;:22;;;;;;;;;;;;;;;;;;5690:67;2760:26:57::1;2772:13;2760:11;:26::i;:::-;5781:14:1::0;5777:101;;;5829:5;5811:1;:15;;;:23;;;;;;;;;;;;;;;;;;5853:14;5865:1;5853:14;;;;;;:::i;:::-;;;;;;;;5777:101;4092:1792;;;;;;2597:193:57;:::o;9609:61:58:-;;;;:::o;6961:47::-;;;;:::o;5708:2623:54:-;5780:33;5818:34;5857:29;5891:30;5977:1;5948:31;;:17;;;;;;;;;;;:31;;;5944:2367;;6195:24;;;;;;;;;;;6167:52;;6224:40;6267:31;;6224:74;;6332:25;;6303:54;;6362:38;6403:29;;6362:70;;6461:20;;;;;;;;;;;6437:44;;6511:21;;6486:46;;6570:29;6602:11;:21;6614:8;;6602:21;;;;;;;;;;;:40;6624:17;;;;;;;;;;;6602:40;;;;;;;;;;;;;;;:57;;;6570:89;;6664:24;6709:21;6691:15;:39;;;;:::i;:::-;6664:66;;6809:1;6772:39;;:25;:39;;;6768:1072;;6863:17;;;;;;;;;;;6835:45;;6921:21;6886:56;;6977:16;6948:45;;6768:1072;;;7047:26;7028:16;:45;7024:816;;;7104:27;7158:26;7134:21;:50;;;;:::i;:::-;7104:80;;7191:29;7258:30;7223:32;:65;;;;:::i;:::-;7191:97;;7295:23;7343:21;7321:19;:43;;;;:::i;:::-;7295:69;;7408:22;7382:15;7375:56;7371:175;;;7465:25;7441:49;;7523:15;7498:40;;7371:175;7097:455;;;7625:26;7592:59;;7685:17;;;;;;;;;;;7657:45;;7743:21;7708:56;;7799:16;7770:45;;7024:816;6768:1072;7883:27;7913:15;7883:45;;7934:29;8001:30;7966:32;:65;;;;:::i;:::-;7934:97;;8037:23;8085:21;8063:19;:43;;;;:::i;:::-;8037:69;;8149:22;8123:15;8116:56;8112:172;;;8205:25;8181:49;;8262:15;8237:40;;8112:172;7877:412;;;5981:2330;;;;5944:2367;5708:2623;;;;:::o;6832:239:72:-;3488:13:0;:11;:13::i;:::-;395:23:56::1;:21;:23::i;:::-;6994:9:72::2;6954:37;:49;;;;7012:55;7057:9;7012:55;;;;;;:::i;:::-;;;;;;;;6832:239:::0;:::o;6482:45:58:-;;;;:::o;10146:236:72:-;3488:13:0;:11;:13::i;:::-;395:23:56::1;:21;:23::i;:::-;10306:9:72::2;10267:36;:48;;;;10324:54;10368:9;10324:54;;;;;;:::i;:::-;;;;;;;;10146:236:::0;:::o;1771:::-;3488:13:0;:11;:13::i;:::-;395:23:56::1;:21;:23::i;:::-;1931:9:72::2;1892:36;:48;;;;1949:54;1993:9;1949:54;;;;;;:::i;:::-;;;;;;;;1771:236:::0;:::o;12011:66:58:-;;;;:::o;2099:32::-;;;;;;;;;;;;;:::o;3585:44::-;;;;:::o;13096:51::-;;;;:::o;7987:::-;;;;:::o;10094:70::-;;;;;;;;;;;;;;;;;:::o;3294:292:56:-;3369:6;3452:36;3495:40;:38;:40::i;:::-;3493:42;;3452:85;;3549:29;3542:36;;;3294:292;:::o;8336:30:58:-;;;;:::o;7074:221:72:-;3488:13:0;:11;:13::i;:::-;395:23:56::1;:21;:23::i;:::-;7224:9:72::2;7190:31;:43;;;;7242:49;7281:9;7242:49;;;;;;:::i;:::-;;;;;;;;7074:221:::0;:::o;11626:43:58:-;;;;:::o;5532:239:0:-;5607:8;5917:13;5849:66;5842:89;6007:1;5939:66;5932:77;6085:1;6017:66;6010:77;6163:8;6095:66;6088:84;3488:13:::1;:11;:13::i;:::-;5660:1:::2;5640:22;;:8;:22;;::::0;5636:91:::2;;5713:1;5685:31;;;;;;;;;;;:::i;:::-;;;;;;;;5636:91;5736:28;5755:8;5736:18;:28::i;:::-;5532:239:::0;;:::o;1550:218:72:-;3488:13:0;:11;:13::i;:::-;395:23:56::1;:21;:23::i;:::-;1698:9:72::2;1665:30;:42;;;;1716:48;1754:9;1716:48;;;;;;:::i;:::-;;;;;;;;1550:218:::0;:::o;13747:43:58:-;;;;:::o;2010:206:72:-;3488:13:0;:11;:13::i;:::-;395:23:56::1;:21;:23::i;:::-;2150:9:72::2;2121:26;:38;;;;2168:44;2202:9;2168:44;;;;;;:::i;:::-;;;;;;;;2010:206:::0;:::o;12217:70:58:-;;;;:::o;13535:392:55:-;13606:7;13615:6;13698:32;13733:29;:27;:29::i;:::-;13698:64;;13767:38;13808:40;:38;:40::i;:::-;13767:81;;13861:24;13887:31;13853:66;;;;;;13535:392;;:::o;13935:33:58:-;;;;;;;;;;;;;:::o;383:473:54:-;459:7;472:49;524:15;:26;540:9;524:26;;;;;;;;;;;472:78;;650:1;583:66;576:76;656:21;680:25;:34;;;656:58;;814:13;747:66;740:88;839:13;832:20;;;;383:473;;;:::o;1291:414::-;1402:7;1411;1424:39;1466:11;:22;1478:9;1466:22;;;;;;;;;;;:38;1489:14;1466:38;;;;;;;;;;;;;;;1424:80;;1604:1;1537:66;1530:76;1618:20;:40;;;1660:20;:40;;;1610:91;;;;;1291:414;;;;;:::o;2155:302:55:-;2343:39;2355:16;2373:8;2343:11;:39::i;:::-;2386:12;;;;;;;;;;;:22;;;2409:8;;2419:12;:10;:12::i;:::-;2433:11;2446:6;2386:67;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2155:302;;;;:::o;4204:690:72:-;3488:13:0;:11;:13::i;:::-;395:23:56::1;:21;:23::i;:::-;4809:9:72::2;4761:45;:57;;;;4827:63;4880:9;4827:63;;;;;;:::i;:::-;;;;;;;;4204:690:::0;:::o;2225:620:4:-;2367:13;2299:66;2292:89;2457:1;2389:66;2382:77;2535:1;2467:66;2460:77;2626:25;:23;:25::i;:::-;2622:93;;;2674:30;;;;;;;;;;;;;;2622:93;2789:49;2833:4;2789:36;757:66;2789:24;;:34;:36::i;:::-;:43;;:49;;;;:::i;:::-;2225:620::o;1529:370:3:-;1582:7;1694:13;1626:66;1619:89;1784:1;1716:66;1709:77;1862:1;1794:66;1787:77;1882:10;1875:17;;1529:370;:::o;23597:2726:55:-;23814:13;23746:66;23739:89;23904:1;23836:66;23829:77;23982:1;23914:66;23907:77;24060:8;23992:66;23985:84;24112:24;;24092:8;24086:22;:50;;24211:8;24205:22;24074:158;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;24319:1;24290:31;;:17;;;;;;;;;;;:31;;;24286:1057;;24362:21;:19;:21::i;:::-;24690:1;24678:9;:13;24670:108;;;;;;;;;;;;:::i;:::-;;;;;;;;;24820:15;24784:33;:51;;;;24874:34;:32;:34::i;:::-;24856:15;:52;;;;:::i;:::-;24840:13;:68;;;;24940:8;;24918:48;24950:15;24918:48;;;;;;:::i;:::-;;;;;;;;24286:1057;;;25285:26;:24;:26::i;:::-;25316:22;:20;:22::i;:::-;24286:1057;25395:12;:10;:12::i;:::-;25375:17;;:32;;;;;;;;;;;;;;;;;;25411:49;25463:15;:25;25479:8;;25463:25;;;;;;;;;;;25411:77;;25588:1;25521:66;25514:76;25594:16;25613:25;:34;;;25594:53;;25747:8;25680:66;25673:83;25804:12;:10;:12::i;:::-;25760:25;:31;;:41;25792:8;25760:41;;;;;;;;;;;;:56;;;;;;;;;;;;;;;;;;25817:24;25844:25;:31;;:41;25876:8;25844:41;;;;;;;;;;;;;;;;;;;;;25817:68;;25985:16;25918:66;25911:91;26006:11;;;;:::i;:::-;;;26058:8;26021:25;:34;;:45;;;;26067:24;26094:25;:34;;;26067:61;;26228:16;26161:66;26154:91;26304:15;26249:11;:21;26261:8;;26249:21;;;;;;;;;;;:35;26271:12;:10;:12::i;:::-;26249:35;;;;;;;;;;;;;;;:52;;:70;;;;23711:2612;;;;23597:2726;:::o;2851:379:4:-;2992:13;2924:66;2917:89;3082:1;3014:66;3007:77;3160:1;3092:66;3085:77;3173:50;3217:5;3173:36;757:66;3173:24;;:34;:36::i;:::-;:43;;:50;;;;:::i;:::-;2851:379::o;4188:436:0:-;4336:13;4268:66;4261:89;4426:1;4358:66;4351:77;4504:1;4436:66;4429:77;4532:12;:10;:12::i;:::-;4521:23;;:7;:5;:7::i;:::-;:23;;;4517:101;;4594:12;:10;:12::i;:::-;4567:40;;;;;;;;;;;:::i;:::-;;;;;;;;4517:101;4188:436::o;430:708:56:-;580:13;512:66;505:89;670:1;602:66;595:77;748:1;680:66;673:77;755:32;790:19;;755:54;;909:24;842:66;835:99;964:24;946:15;:42;938:197;;1088:24;1114:15;1004:126;;;;;;;;;;;;:::i;:::-;;;;;;;;938:197;477:661;430:708::o;377:543:53:-;550:13;482:66;475:89;640:1;572:66;565:77;718:1;650:66;643:77;796:6;728:66;721:82;830:1;812:20;;:6;:20;;;808:109;;846:66;;;;;;;;;;:::i;:::-;;;;;;;;808:109;377:543;:::o;13988:567:55:-;14049:7;14161:13;14093:66;14086:89;14251:1;14183:66;14176:77;14329:1;14261:66;14254:77;14407:32;14481:30;;14442:36;;:69;;;;;:::i;:::-;;;14407:104;;14523:24;14516:31;;;13988:567;:::o;2272:510:56:-;2429:13;2361:66;2354:89;2519:1;2451:66;2444:77;2597:1;2529:66;2522:77;2641:1;2612:31;;:17;;;;;;;;;;;:31;;;2604:175;;2659:115;;;;;;;;;;:::i;:::-;;;;;;;;2604:175;2272:510::o;2785:506::-;2949:13;2881:66;2874:89;3039:1;2971:66;2964:77;3117:1;3049:66;3042:77;3195:9;3127:66;3120:85;3232:9;3210:19;:31;;;;3250:37;3277:9;3250:37;;;;;;:::i;:::-;;;;;;;;2785:506;:::o;8257:461:57:-;8359:25;8881:13;8813:66;8806:89;8971:1;8903:66;8896:77;9049:1;8981:66;8974:77;9127:25;9059:66;9052:101;3488:13:0::1;:11;:13::i;:::-;395:23:56::2;:21;:23::i;:::-;8446:25:57::3;327:38:53;358:6;327:30;:38::i;:::-;422:1:56;8257:461:57::0;;:::o;1899:518:40:-;1960:21;2086:13;2018:66;2011:89;2176:1;2108:66;2101:77;2254:1;2186:66;2179:77;2332:4;2264:66;2257:80;2397:4;2387:14;;1899:518;;;:::o;15668:3387:55:-;15760:8;19207:13;19139:66;19132:89;19297:1;19229:66;19222:77;19375:1;19307:66;19300:77;19453:8;19385:66;19378:84;1335:21:4::1;:19;:21::i;:::-;16072:18:55::2;16093:29;16119:1;16093:18;:29::i;:::-;16072:50;;16222:10;16155:66;16148:85;16296:14;16282:10;:28;;16437:10;16449:14;16270:198;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;17430:63;17539:1;17496:45;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;17430:111;;17577:12;:10;:12::i;:::-;17546:17;17564:1;17546:20;;;;;;;;:::i;:::-;;;;;;;;:28;;:43;;;;;;;;;::::0;::::2;17634:10;17625:20;;;:::i;:::-;17594:17;17612:1;17594:20;;;;;;;;:::i;:::-;;;;;;;;:26;;:53;;;::::0;::::2;17683:12;:10;:12::i;:::-;17652:17;17670:1;17652:20;;;;;;;;:::i;:::-;;;;;;;;:28;;:43;;;;;;;;;::::0;::::2;17736:25;;17700:17;17718:1;17700:20;;;;;;;;:::i;:::-;;;;;;;;:26;;:62;;;::::0;::::2;17767:5;;;;;;;;;;;:21;;;17789:17;17767:40;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17425:387;17875:10;17816:11;:21;17828:8;;17816:21;;;;;;;;;;;:35;17838:12;:10;:12::i;:::-;17816:35;;;;;;;;;;;;;;;:55;;;:69;;;;;;;:::i;:::-;;;;;;;;17925:15;17889:33;:51;;;;18084:44;18134:138;5029:1:93;18143:10:55;:86;;;;:::i;:::-;18231:40;;18134:8;:138::i;:::-;18084:188;;18372:36;18305:66;18298:111;18448:36;18413:32;:71;;;;18525:1;18493:34;;:20;;;;;;;;;;;:34;;::::0;18489:388:::2;;18836:36;18787:46;:85;;;;18489:388;18903:12;:10;:12::i;:::-;18880:20;;:35;;;;;;;;;;;;;;;;;;18919:37;18947:8;18919:10;:37::i;:::-;19023:2;18985:12;:10;:12::i;:::-;18965:86;;18975:8;;18965:86;18999:2;19010:10;19027:8;19037:13;;18965:86;;;;;;;;;:::i;:::-;;;;;;;;15805:3250;;1377:20:4::1;:18;:20::i;:::-;15668:3387:55::0;;;:::o;1842:1615:54:-;1990:13;1922:66;1915:89;2080:1;2012:66;2005:77;2158:1;2090:66;2083:77;2278:29;2310:11;:21;2322:8;;2310:21;;;;;;;;;;;:40;2332:17;;;;;;;;;;;2310:40;;;;;;;;;;;;;;;:57;;;2278:89;;2467:21;2400:66;2393:96;2493:24;2538:21;2520:15;:39;;;;:::i;:::-;2493:66;;2659:16;2592:66;2585:91;2720:1;2684:38;;:24;;;;;;;;;;;:38;;;2680:704;;2756:17;;;;;;;;;;;2729:24;;:44;;;;;;;;;;;;;;;;;;2812:21;2778:31;:55;;;;2866:16;2838:25;:44;;;;2680:704;;;2982:25;;2963:16;:44;2959:425;;;3020:27;3074:25;;3050:21;:49;;;;:::i;:::-;3020:79;;3105:49;3134:19;3105:28;:49::i;:::-;3014:146;3196:25;;3164:29;:57;;;;3253:17;;;;;;;;;;;3226:24;;:44;;;;;;;;;;;;;;;;;;3309:21;3275:31;:55;;;;3363:16;3335:25;:44;;;;2959:425;2680:704;1887:1570;;1842:1615::o;3575:1414::-;3754:13;3686:66;3679:89;3844:1;3776:66;3769:77;3922:1;3854:66;3847:77;4000:19;3932:66;3925:95;4275:29;4341;;4307:31;;:63;;;;:::i;:::-;4275:95;;4470:21;4403:66;4396:96;4496:23;4544:21;4522:19;:43;;;;:::i;:::-;4496:69;;4665:15;4598:66;4591:90;4722:21;;4696:15;4689:55;4685:162;;;4774:24;;;;;;;;;;;4751:20;;:47;;;;;;;;;;;;;;;;;;4827:15;4803:21;:39;;;;4685:162;3651:1338;;3575:1414;:::o;6005:21423:62:-;6145:13;6077:66;6070:89;6235:1;6167:66;6160:77;6313:1;6245:66;6238:77;6369:27;6496:19;6429:66;6422:94;6691:75;;:::i;:::-;6772:49;6824:15;:25;6840:8;;6824:25;;;;;;;;;;;6772:77;;7112:70;7643:50;7928:63;7994:1;7928:67;;8003:42;;:::i;:::-;8164:46;:44;:46::i;:::-;8131:24;:30;;:79;;;;;8396:25;8457:66;8424:24;:30;;;:99;8396:127;;8572:38;8620:26;;;;;;;;;;;:62;;;8692:51;;8745:17;8620:143;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8572:191;;8772:32;8865:21;:28;8807:55;:86;;;;:::i;:::-;8772:121;;8977:24;8901:17;:66;;:101;;;;;;;;;;;9046:1;9014:34;;:20;;;;;;;;;;;:34;;;9010:85;;9059:27;;;;:::i;:::-;;;9010:85;9185:24;9102:17;:73;;:108;;;;;;;;;;;9218:27;;;;:::i;:::-;;;9333:24;9253:17;:70;;:105;;;;;;;;;;;9366:27;;;;:::i;:::-;;;9470:24;9401:17;:59;;:94;;;;;;;;;;;9503:31;9564:38;;9537:24;:65;;;;:::i;:::-;9503:99;;9660:23;9646:38;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9610:74;;9697:25;9725:21;:28;9697:56;;9692:1043;9775:1;9755:17;:21;9692:1043;;;9789:20;;;;:::i;:::-;;;9818:27;9848:21;9870:17;9848:40;;;;;;;;:::i;:::-;;;;;;;;9818:70;;9988:19;9921:66;9914:94;10452:19;10339:33;10431:17;10373:55;:75;;;;:::i;:::-;10339:110;;;;;;;;:::i;:::-;;;;;;;:132;;;;;;;;;;;10472:24;10499:33;10591:17;10533:55;:75;;;;:::i;:::-;10499:110;;;;;;;;:::i;:::-;;;;;;;;10472:137;;10709:16;10642:66;10635:91;10634:93;;9692:1043;;;;8298:2444;;;;10785:23;10848:24;;10811:25;:34;;;:61;;;;:::i;:::-;10785:87;;10992:1;10960:34;;:20;;;;;;;;;;;:34;;;10956:602;;11117:20;;;;;;;;;;;11004:33;11046:17;:66;;;11038:75;;11004:110;;;;;;;;:::i;:::-;;;;;;;:133;;;;;;;;;;;11215:1;11178:39;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;11145:72;;11269:20;;;;;;;;;;;11225:30;11256:1;11225:33;;;;;;;;:::i;:::-;;;;;;;;:41;;:64;;;;;;;;;;;11339:15;11297:30;11328:1;11297:33;;;;;;;;:::i;:::-;;;;;;;;:39;;:57;;;;;10956:602;;;11446:1;11409:39;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;11376:72;;11548:1;11481:66;11474:76;10956:602;11760:12;:10;:12::i;:::-;11640:33;11682:17;:73;;;11674:82;;11640:117;;;;;;;;:::i;:::-;;;;;;;:132;;;;;;;;;;;12044:24;;;;;;;;;;;11927:33;11969:17;:70;;;11961:79;;11927:114;;;;;;;;:::i;:::-;;;;;;;:141;;;;;;;;;;;12119:24;;;;;;;;;;;12075:30;12106:1;12075:33;;;;;;;;:::i;:::-;;;;;;;;:41;;:68;;;;;;;;;;;12192:15;12150:30;12181:1;12150:33;;;;;;;;:::i;:::-;;;;;;;;:39;;:57;;;;;12364:32;12399:33;:40;12364:75;;12619:975;12631:21;12655:66;12696:24;12655:40;:66::i;:::-;12631:90;;12821:13;12754:66;12747:88;12844:28;12875:25;:31;;:83;12923:25;:34;;;12907:13;:50;;;;:::i;:::-;12875:83;;;;;;;;;;;;;;;;;;;;;12844:114;;13058:20;12991:66;12984:95;13158:27;;;;:::i;:::-;;;13256:20;13194:33;13228:24;13194:59;;;;;;;;:::i;:::-;;;;;;;:82;;;;;;;;;;;13277:24;13304:33;13338:24;13304:59;;;;;;;;:::i;:::-;;;;;;;;13277:86;;13463:16;13396:66;13389:91;13388:93;;;13532:17;:59;;;13524:68;;13497:24;:95;12619:975;;12279:1322;13644:34;13747:25;13808:66;13775:24;:30;;;:99;13747:127;;13911:3;;;;;;;;;;;:12;;;13924:8;;13934:33;13969:17;13911:76;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13882:105;;13739:256;14084:32;14119:33;:40;14084:75;;14167:29;14228:24;14199:26;:53;;;;:::i;:::-;14167:85;;14587:20;14645:17;:59;;;14637:68;;14610:24;:95;;;;:::i;:::-;14587:118;;14804:555;14817:15;;;;:::i;:::-;;;14842:24;;;;:::i;:::-;;;14876:27;;;;:::i;:::-;;;14913:28;14944:33;14978:24;14944:59;;;;;;;;:::i;:::-;;;;;;;;14913:90;;15103:20;15036:66;15029:95;15301:21;15279:20;15210:113;;15248:8;;15210:113;15258:5;15265:12;15210:113;;;;;;;:::i;:::-;;;;;;;;14807:526;15356:1;15341:12;:16;14804:555;;14327:1040;15525:27;;;;:::i;:::-;;;16021:24;;;;:::i;:::-;;;16155:21;16095:30;16126:1;16095:33;;;;;;;;:::i;:::-;;;;;;;;:41;;;16058:119;;16085:8;;16058:119;16138:15;16058:119;;;;;;:::i;:::-;;;;;;;;16439:23;:21;:23::i;:::-;16417:45;;16471:27;;;;:::i;:::-;;;16761:24;;;;:::i;:::-;;;16860:21;16825:12;:10;:12::i;:::-;16798:84;;16815:8;;16798:84;16839:19;16798:84;;;;;;:::i;:::-;;;;;;;;17120:1;17080:30;:37;:41;17076:723;;;17202:27;;;;:::i;:::-;;;17552:24;;;;:::i;:::-;;;17683:21;17623:30;17654:1;17623:33;;;;;;;;:::i;:::-;;;;;;;;:41;;;17590:115;;17613:8;;17590:115;17666:15;17590:115;;;;;;:::i;:::-;;;;;;;;17076:723;;;;18477:539;18511:1;18484:24;:28;18477:539;;;18523:24;;;;:::i;:::-;;;18556:27;;;;:::i;:::-;;;18592;18622:33;18656:24;18622:59;;;;;;;;:::i;:::-;;;;;;;;18592:89;;18781:19;18714:66;18707:94;18985:21;18964:19;18884:123;;18922:8;;18884:123;18932:4;18938:24;18884:123;;;;;;;:::i;:::-;;;;;;;;18514:502;18477:539;;;14058:5175;;7223:12036;;;;;19369:15;;;;;;;;;;;19325:30;19356:1;19325:33;;;;;;;;:::i;:::-;;;;;;;;:41;;:59;;;;;;;;;;;19432:36;;19390:30;19421:1;19390:33;;;;;;;;:::i;:::-;;;;;;;;:39;;:78;;;;;19523:5;;;;;;;;;;;:14;;;19538:30;19523:46;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6887:12707;19690:33;19826:54;20017:24;20044:28;;20017:55;;20636:46;20735:1;20716:16;:20;;;;:::i;:::-;20685:52;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;20636:101;;20785:31;20819:1;20785:35;;21054:52;21109:12;21122:16;21109:30;;;;;;;;:::i;:::-;;;;;;;;21054:85;;21190:20;;;;;;;;;;;21148;:39;;:62;;;;;;;;;;;21297:36;21336:32;:30;:32::i;:::-;21297:71;;21408:28;21378:20;:27;;:58;;;;;21472:28;21445:55;;;;;:::i;:::-;;;21555:20;;;;;;;;;;;21514:92;;21545:8;;21514:92;21577:28;21514:92;;;;;;:::i;:::-;;;;;;;;20891:724;;21924:44;21971:40;:38;:40::i;:::-;21924:87;;22061:38;22141:16;22102:36;:55;;;;:::i;:::-;22061:96;;22227:16;22194:30;:49;;;;:::i;:::-;22167:76;;;;;:::i;:::-;;;22252:1429;22265:19;;;;:::i;:::-;;;22294:52;22349:12;22362:16;22349:30;;;;;;;;:::i;:::-;;;;;;;;22294:85;;22479:1;22412:66;22405:76;22491:21;22515:66;22556:24;22515:40;:66::i;:::-;22491:90;;22681:13;22614:66;22607:88;22705:28;22736:25;:31;;:83;22784:25;:34;;;22768:13;:50;;;;:::i;:::-;22736:83;;;;;;;;;;;;;;;;;;;;;22705:114;;22919:20;22852:66;22845:95;23063:20;23021;:39;;:62;;;;;;;;;;;23084:24;23111:20;:39;;;23084:66;;23250:16;23183:66;23176:91;23307:30;23277:20;:27;;:60;;;;;23338:24;23365:20;:27;;;23338:54;;23492:16;23425:66;23418:91;23588:20;23524:117;;23560:8;;23524:117;23570:16;23610:30;23524:117;;;;;;;:::i;:::-;;;;;;;;22255:1396;;;;;23678:1;23659:16;:20;22252:1429;;21685:2004;;23799:29;:27;:29::i;:::-;23771:57;;23885:50;:48;:50::i;:::-;23836:99;;24026:12;;;;;;;;;;;:46;;;24080:23;24105:8;;24115:12;:10;:12::i;:::-;24129;24026:116;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19924:4247;;;24256:31;;;;;;;;;;;:39;;;24303:46;24351:8;;24256:104;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24252:971;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1035:4:38;24473:10:62;:48;24470:485;;24911:35;24935:10;24911:23;:35::i;:::-;24470:485;24991:46;24962:75;;;;;:::i;:::-;;;24394:829;24252:971;;;;;;;;;;;;;;;19764:5485;26053:15;26074:14;;;;;;;;;;;:19;;26101:25;26074:57;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26052:79;;;26143:10;26139:272;;;26216:14;;;;;;;;;;;26168:90;;;26232:25;26168:90;;;;;;:::i;:::-;;;;;;;;26139:272;;;26361:14;;;;;;;;;;;26285:118;;;26377:25;26285:118;;;;;;:::i;:::-;;;;;;;;26139:272;25525:892;19631:6810;6551:19912;;27150:15;27171:12;:10;:12::i;:::-;:17;;27196:19;27171:49;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27149:71;;;27233:10;27226:178;;27364:12;:10;:12::i;:::-;27378:19;27259:139;;;;;;;;;;;;:::i;:::-;;;;;;;;27226:178;27111:297;6042:21386;6005:21423::o;27610:1542::-;27750:13;27682:66;27675:89;27840:1;27772:66;27765:77;27918:1;27850:66;27843:77;28040:1;28012:17;;:30;;;;;;;;;;;;;;;;;;28077:1;28046:20;;:33;;;;;;;;;;;;;;;;;;28118:1;28083:24;;:37;;;;;;;;;;;;;;;;;;28436:1;28404:29;:33;;;;28472:1;28441:20;;:33;;;;;;;;;;;;;;;;;;28517:2;28478:21;:43;;;;28528:8;;28525:11;;;;;:::i;:::-;;;;;;;;29029:37;;28990:36;;:76;;;;:::i;:::-;28950:36;;:116;;;;;;;:::i;:::-;;;;;;;;29071:77;29113:34;;29095:15;:52;;;;:::i;:::-;29071:23;:77::i;:::-;27610:1542::o;5670:586:2:-;5818:13;5750:66;5743:89;5908:1;5840:66;5833:77;5986:1;5918:66;5911:77;6033:6;6016:23;;6024:4;6016:23;;;:120;;;;6130:6;6094:42;;:32;:30;:32::i;:::-;:42;;;;6016:120;5999:251;;;6210:29;;;;;;;;;;;;;;5999:251;5670:586::o;7672:893::-;7860:13;7792:66;7785:89;7950:1;7882:66;7875:77;8028:1;7960:66;7953:77;8106:4;8038:66;8031:80;8144:17;8126:50;;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;8122:437;;8530:17;8488:60;;;;;;;;;;;:::i;:::-;;;;;;;;8122:437;811:66:17;8228:32:2;;8220:4;:40;8216:120;;8316:4;8287:34;;;;;;;;;;;:::i;:::-;;;;;;;;8216:120;8349:54;8379:17;8398:4;8349:29;:54::i;:::-;8179:235;7672:893;;:::o;6373:487::-;6528:13;6460:66;6453:89;6618:1;6550:66;6543:77;6696:1;6628:66;6621:77;6730:6;6713:23;;6721:4;6713:23;;;6709:145;;6814:29;;;;;;;;;;;;;;6709:145;6373:487::o;22525:786:55:-;22604:7;22613:6;22724:13;22656:66;22649:89;22814:1;22746:66;22739:77;22892:1;22824:66;22817:77;22970:32;23005:29;:27;:29::i;:::-;22970:64;;23039:38;23080:36;:34;:36::i;:::-;23039:77;;23121:40;23199:31;23171:24;23164:66;23121:109;;23243:24;23269:33;23235:68;;;;;;;22525:786;;:::o;6333:967:0:-;6499:13;6431:66;6424:89;6589:1;6521:66;6514:77;6667:1;6599:66;6592:77;6745:8;6677:66;6670:84;6765:24;6792:20;:18;:20::i;:::-;6765:47;;6912:1;6845:66;6838:76;6924:16;6943:1;:8;;;;;;;;;;;;6924:27;;7051:8;6984:66;6977:83;7081:8;7070:1;:8;;;:19;;;;;;;;;;;;;;;;;;7090:22;7115:1;:8;;;;;;;;;;;;7090:33;;7223:14;7156:66;7149:89;7284:8;7253:40;;7274:8;7253:40;;;;;;;;;;;;6396:904;;;6333:967;:::o;1192:433::-;1244:24;1373:13;1305:66;1298:89;1463:1;1395:66;1388:77;1541:1;1473:66;1466:77;1587:22;1577:32;;1192:433;:::o;21227:567:55:-;21288:7;21400:13;21332:66;21325:89;21490:1;21422:66;21415:77;21568:1;21500:66;21493:77;21646:32;21720:30;;21681:36;;:69;;;;;:::i;:::-;;;21646:104;;21762:24;21755:31;;;21227:567;:::o;21862:584::-;21930:6;22041:13;21973:66;21966:89;22131:1;22063:66;22056:77;22209:1;22141:66;22134:77;22287:38;22361:33;;22335:15;22328:67;22287:108;;22407:31;22400:38;;;21862:584;:::o;11214:444:1:-;11272:30;11407:13;11339:66;11332:89;11497:1;11429:66;11422:77;11575:1;11507:66;11500:77;11621:21;11611:31;;11214:444;:::o;2835:4613:57:-;2991:13;2923:66;2916:89;3081:1;3013:66;3006:77;3159:1;3091:66;3084:77;3237:13;3169:66;3162:89;3472:33;:31;:33::i;:::-;3509:29;3524:13;3509:14;:29::i;:::-;3542:24;:22;:24::i;:::-;3978:2;3939:21;:43;;;;784:13:93;4002:34:57;:108;;;;11898:15:93;4114:19:57;:76;;;;1442:1:93;10783:20;1421:1;:17;;;;:::i;:::-;10783:20;12072:3;;12196:19;;;;:::i;:::-;1377:39;;;;:::i;:::-;1376:63;;;;:::i;:::-;:67;;;;:::i;:::-;4194:30:57;:100;;;;1787:1:93;1964:2;:53;;;;:::i;:::-;4398:36:57;:114;;;;2277:3:93;4599:26:57;:92;;;;4432:20:93;4695:31:57;:105;;;;4769:1:93;4764;10783:20;4748:17;;;;:::i;:::-;4742:1;10783:20;4726:17;;;;:::i;:::-;12072:3;;12196:19;;;;:::i;:::-;4700:43;;;;:::i;:::-;4699:67;;;;:::i;:::-;:71;;;;:::i;:::-;4845:30:57;:100;;;;5246:9:93;5071:46:57;:129;;;;5246:9:93;5204:40:57;:123;;;;5405:3:93;5357:24:57;:88;;;;5573:9:93;5449:25:57;:90;;;;5744:8:93;5543:24:57;:87;;;;5897:1:93;5634:37:57;:115;;;;6061:1:93;5753:45:57;:133;;;;6189:1:93;5890:28:57;:97;;;;6338:1:93;5991:38:57;:118;;;;6515:1:93;6113:51:57;:146;;;;6700:2:93;6263:55:57;:154;;;;6948:1:93;10783:20;6927:1;10783:20;6911:17;;;;:::i;:::-;12072:3;;12196:19;;;;:::i;:::-;6885:43;;;;:::i;:::-;6884:61;;;;:::i;:::-;:65;;;;:::i;:::-;6421:36:57;:113;;;;12072:3:93;;12196:19;;;;:::i;:::-;7088:7;6598:109:57;;;;:::i;:::-;6559:36;:148;;;;7240:3:93;6711:37:57;:115;;;;7438:6:93;6830:31:57;:103;;;;7570:2:93;6937:28:57;:96;;;;9298:9:93;7198:36:57;:112;;;;9573:2:93;7336:34:57;:108;;;;2835:4613;:::o;3409:406:4:-;3467:4;3576:13;3508:66;3501:89;3666:1;3598:66;3591:77;3744:1;3676:66;3669:77;3764:44;:36;757:66;3764:24;;:34;:36::i;:::-;:42;:44::i;:::-;3757:51;;3409:406;:::o;2018:470:42:-;2074:11;2190:13;2122:66;2115:89;2280:1;2212:66;2205:77;2358:1;2290:66;2283:77;2436:4;2368:66;2361:80;2476:4;2452:29;;2018:470;;;:::o;6326:495::-;6484:13;6416:66;6409:89;6574:1;6506:66;6499:77;6652:1;6584:66;6577:77;6730:5;6662:66;6655:81;6799:5;6793:4;6786:19;6326:495;;:::o;1208:709:56:-;1356:13;1288:66;1281:89;1446:1;1378:66;1371:77;1524:1;1456:66;1449:77;1531:32;1566:19;;1531:54;;1685:24;1618:66;1611:99;1741:24;1722:15;:43;;1714:200;;1867:24;1893:15;1781:128;;;;;;;;;;;;:::i;:::-;;;;;;;;1714:200;1253:664;1208:709::o;2361:608:63:-;2505:13;2437:66;2430:89;2595:1;2527:66;2520:77;2673:1;2605:66;2598:77;2751:31;2785:40;2794:13;;2809:15;2785:8;:40::i;:::-;2751:74;;2830:31;2864:27;:25;:27::i;:::-;2830:61;;2938:23;2912;:49;2896:13;:65;;;;2707:259;;2361:608::o;5302:463:48:-;5360:7;5472:13;5404:66;5397:89;5562:1;5494:66;5487:77;5640:1;5572:66;5565:77;5718:1;5650:66;5643:77;5738:20;5750:1;5746;:5;5753:1;5756;5738:7;:20::i;:::-;5731:27;;5302:463;;;;:::o;1735:488:97:-;1794:7;1906:13;1838:66;1831:89;1996:1;1928:66;1921:77;2074:1;2006:66;1999:77;2206:13;2187:16;:32;2180:39;;1735:488;:::o;2413:564::-;2511:7;2623:13;2555:66;2548:89;2713:1;2645:66;2638:77;2791:1;2723:66;2716:77;2869:12;2801:66;2794:88;2902:12;:18;;2899:21;;;;;;;;;;2933:40;2954:12;:18;;;2933:20;:40::i;:::-;2926:47;;2413:564;;;:::o;1776:549:38:-;1922:13;1854:66;1847:89;2012:1;1944:66;1937:77;2090:1;2022:66;2015:77;2168:4;2100:66;2093:80;2236:10;2230:4;2223:24;2273:4;2267;2260:18;2304:4;2298;2291:18;1441:412:17;1493:7;1605:13;1537:66;1530:89;1695:1;1627:66;1620:77;1773:1;1705:66;1698:77;1793:47;811:66;1820:19;;1793:26;:47::i;:::-;:53;;;;;;;;;;;;1786:60;;1441:412;:::o;2906:699::-;3090:13;3022:66;3015:89;3180:1;3112:66;3105:77;3258:1;3190:66;3183:77;3336:4;3268:66;3261:80;3352:37;3371:17;3352:18;:37::i;:::-;3422:17;3404:36;;;;;;;;;;;;3469:1;3455:4;:11;:15;3451:148;;;3486:53;3515:17;3534:4;3486:28;:53::i;:::-;;3451:148;;;3570:18;:16;:18::i;:::-;3451:148;2906:699;;:::o;1410:91:4:-;1630:13;1562:66;1555:89;1720:1;1652:66;1645:77;1798:1;1730:66;1723:77;8210:20:1::1;:18;:20::i;:::-;1410:91:4:o:0;2121:153:0:-;2189:12;2422:13;2354:66;2347:89;2512:1;2444:66;2437:77;2590:1;2522:66;2515:77;2668:12;2600:66;2593:88;8210:20:1::1;:18;:20::i;:::-;2229:38:0::2;2254:12;2229:24;:38::i;:::-;2121:153:::0;;:::o;2970:82:2:-;3181:13;3113:66;3106:89;3271:1;3203:66;3196:77;3349:1;3281:66;3274:77;8210:20:1::1;:18;:20::i;:::-;2970:82:2:o:0;5729:508:42:-;5785:10;5900:13;5832:66;5825:89;5990:1;5922:66;5915:77;6068:1;6000:66;5993:77;6146:4;6078:66;6071:80;6216:4;6210:11;6201:20;;5729:508;;;:::o;4585:647:48:-;4663:7;4775:13;4707:66;4700:89;4865:1;4797:66;4790:77;4943:2;4875:66;4868:78;5022:1;4954:66;4947:77;5188:26;5204:9;5188:15;:26::i;:::-;5183:1;5179;:5;5178:36;5173:1;:42;5166:49;;4585:647;;;;;:::o;3090:493:97:-;3158:7;3270:13;3202:66;3195:89;3360:1;3292:66;3285:77;3438:1;3370:66;3363:77;3516:5;3448:66;3441:81;3534:45;3573:5;3534:38;:45::i;:::-;3527:52;;3090:493;;;:::o;1945:649:17:-;2111:13;2043:66;2036:89;2201:1;2133:66;2126:77;2279:1;2211:66;2204:77;2357:17;2289:66;2282:93;2423:1;2390:17;:29;;;:34;2386:119;;2476:17;2447:47;;;;;;;;;;;:::i;:::-;;;;;;;;2386:119;2570:17;2514:47;811:66;2541:19;;2514:26;:47::i;:::-;:53;;;:73;;;;;;;;;;;;;;;;;;1945:649;:::o;5646:710:34:-;5729:12;5846:13;5778:66;5771:89;5936:1;5868:66;5861:77;6014:1;5946:66;5939:77;6092:4;6024:66;6017:80;6109:12;6123:23;6150:6;:19;;6170:4;6150:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6108:67;;;;6275:1;6208:66;6201:76;6294:55;6321:6;6329:7;6338:10;6294:26;:55::i;:::-;6287:62;;;;5646:710;;;;:::o;9212:396:17:-;9351:13;9283:66;9276:89;9441:1;9373:66;9366:77;9519:1;9451:66;9444:77;9548:1;9536:9;:13;9532:70;;;9572:19;;;;;;;;;;;;;;9532:70;9212:396::o;8363:415:1:-;8518:13;8450:66;8443:89;8608:1;8540:66;8533:77;8686:1;8618:66;8611:77;8704:17;:15;:17::i;:::-;8699:73;;8744:17;;;;;;;;;;;;;;8699:73;8363:415::o;2694:261:0:-;2772:12;3103:13;3035:66;3028:89;3193:1;3125:66;3118:77;3271:1;3203:66;3196:77;3349:12;3281:66;3274:88;8210:20:1::1;:18;:20::i;:::-;2840:1:0::2;2816:26;;:12;:26;;::::0;2812:95:::2;;2893:1;2865:31;;;;;;;;;;;:::i;:::-;;;;;;;;2812:95;2916:32;2935:12;2916:18;:32::i;:::-;2694:261:::0;;:::o;61020:497:49:-;61067:9;61181:13;61113:66;61106:89;61271:1;61203:66;61196:77;61349:1;61281:66;61274:77;61427:1;61359:66;61352:77;61498:1;61491:9;61484:17;61479:22;;61020:497;;;:::o;202:848:96:-;269:7;381:13;313:66;306:89;471:1;403:66;396:77;549:1;481:66;474:77;627:6;559:66;552:82;1037:6;1020:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;1010:35;;;;;;1002:44;;995:51;;202:848;;;:::o;6624:944:34:-;6768:12;6885:13;6817:66;6810:89;6975:1;6907:66;6900:77;7053:2;6985:66;6978:78;7132:10;7064:66;7057:86;7159:7;7154:408;;7182:19;7190:10;7182:7;:19::i;:::-;7154:408;;;7427:1;7406:10;:17;:22;:49;;;;;7454:1;7432:6;:18;;;:23;7406:49;7402:119;;;7499:6;7482:24;;;;;;;;;;;:::i;:::-;;;;;;;;7402:119;7541:10;7534:17;;;;7154:408;6624:944;;;;;;:::o;10690:394:1:-;10740:4;10849:13;10781:66;10774:89;10939:1;10871:66;10864:77;11017:1;10949:66;10942:77;11037:26;:24;:26::i;:::-;:40;;;;;;;;;;;;11030:47;;10690:394;:::o;8469:848:34:-;8627:13;8559:66;8552:89;8717:1;8649:66;8642:77;8795:1;8727:66;8720:77;8873:10;8805:66;8798:86;8981:1;8961:10;:17;:21;8957:354;;;9158:10;9152:17;9214:15;9201:10;9197:2;9193:19;9186:44;8957:354;9281:19;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:98:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:474::-;758:6;766;815:2;803:9;794:7;790:23;786:32;783:119;;;821:79;;:::i;:::-;783:119;941:1;966:53;1011:7;1002:6;991:9;987:22;966:53;:::i;:::-;956:63;;912:117;1068:2;1094:53;1139:7;1130:6;1119:9;1115:22;1094:53;:::i;:::-;1084:63;;1039:118;690:474;;;;;:::o;1170:126::-;1207:7;1247:42;1240:5;1236:54;1225:65;;1170:126;;;:::o;1302:96::-;1339:7;1368:24;1386:5;1368:24;:::i;:::-;1357:35;;1302:96;;;:::o;1404:118::-;1491:24;1509:5;1491:24;:::i;:::-;1486:3;1479:37;1404:118;;:::o;1528:222::-;1621:4;1659:2;1648:9;1644:18;1636:26;;1672:71;1740:1;1729:9;1725:17;1716:6;1672:71;:::i;:::-;1528:222;;;;:::o;1756:76::-;1792:7;1821:5;1810:16;;1756:76;;;:::o;1838:115::-;1923:23;1940:5;1923:23;:::i;:::-;1918:3;1911:36;1838:115;;:::o;1959:218::-;2050:4;2088:2;2077:9;2073:18;2065:26;;2101:69;2167:1;2156:9;2152:17;2143:6;2101:69;:::i;:::-;1959:218;;;;:::o;2183:329::-;2242:6;2291:2;2279:9;2270:7;2266:23;2262:32;2259:119;;;2297:79;;:::i;:::-;2259:119;2417:1;2442:53;2487:7;2478:6;2467:9;2463:22;2442:53;:::i;:::-;2432:63;;2388:117;2183:329;;;;:::o;2518:120::-;2590:23;2607:5;2590:23;:::i;:::-;2583:5;2580:34;2570:62;;2628:1;2625;2618:12;2570:62;2518:120;:::o;2644:137::-;2689:5;2727:6;2714:20;2705:29;;2743:32;2769:5;2743:32;:::i;:::-;2644:137;;;;:::o;2787:117::-;2896:1;2893;2886:12;2910:117;3019:1;3016;3009:12;3033:102;3074:6;3125:2;3121:7;3116:2;3109:5;3105:14;3101:28;3091:38;;3033:102;;;:::o;3141:180::-;3189:77;3186:1;3179:88;3286:4;3283:1;3276:15;3310:4;3307:1;3300:15;3327:281;3410:27;3432:4;3410:27;:::i;:::-;3402:6;3398:40;3540:6;3528:10;3525:22;3504:18;3492:10;3489:34;3486:62;3483:88;;;3551:18;;:::i;:::-;3483:88;3591:10;3587:2;3580:22;3370:238;3327:281;;:::o;3614:129::-;3648:6;3675:20;;:::i;:::-;3665:30;;3704:33;3732:4;3724:6;3704:33;:::i;:::-;3614:129;;;:::o;3749:308::-;3811:4;3901:18;3893:6;3890:30;3887:56;;;3923:18;;:::i;:::-;3887:56;3961:29;3983:6;3961:29;:::i;:::-;3953:37;;4045:4;4039;4035:15;4027:23;;3749:308;;;:::o;4063:148::-;4161:6;4156:3;4151;4138:30;4202:1;4193:6;4188:3;4184:16;4177:27;4063:148;;;:::o;4217:425::-;4295:5;4320:66;4336:49;4378:6;4336:49;:::i;:::-;4320:66;:::i;:::-;4311:75;;4409:6;4402:5;4395:21;4447:4;4440:5;4436:16;4485:3;4476:6;4471:3;4467:16;4464:25;4461:112;;;4492:79;;:::i;:::-;4461:112;4582:54;4629:6;4624:3;4619;4582:54;:::i;:::-;4301:341;4217:425;;;;;:::o;4662:340::-;4718:5;4767:3;4760:4;4752:6;4748:17;4744:27;4734:122;;4775:79;;:::i;:::-;4734:122;4892:6;4879:20;4917:79;4992:3;4984:6;4977:4;4969:6;4965:17;4917:79;:::i;:::-;4908:88;;4724:278;4662:340;;;;:::o;5008:111::-;5060:7;5089:24;5107:5;5089:24;:::i;:::-;5078:35;;5008:111;;;:::o;5125:152::-;5213:39;5246:5;5213:39;:::i;:::-;5206:5;5203:50;5193:78;;5267:1;5264;5257:12;5193:78;5125:152;:::o;5283:169::-;5344:5;5382:6;5369:20;5360:29;;5398:48;5440:5;5398:48;:::i;:::-;5283:169;;;;:::o;5458:973::-;5568:6;5576;5584;5592;5641:3;5629:9;5620:7;5616:23;5612:33;5609:120;;;5648:79;;:::i;:::-;5609:120;5768:1;5793:52;5837:7;5828:6;5817:9;5813:22;5793:52;:::i;:::-;5783:62;;5739:116;5922:2;5911:9;5907:18;5894:32;5953:18;5945:6;5942:30;5939:117;;;5975:79;;:::i;:::-;5939:117;6080:63;6135:7;6126:6;6115:9;6111:22;6080:63;:::i;:::-;6070:73;;5865:288;6192:2;6218:68;6278:7;6269:6;6258:9;6254:22;6218:68;:::i;:::-;6208:78;;6163:133;6335:2;6361:53;6406:7;6397:6;6386:9;6382:22;6361:53;:::i;:::-;6351:63;;6306:118;5458:973;;;;;;;:::o;6437:118::-;6524:24;6542:5;6524:24;:::i;:::-;6519:3;6512:37;6437:118;;:::o;6561:222::-;6654:4;6692:2;6681:9;6677:18;6669:26;;6705:71;6773:1;6762:9;6758:17;6749:6;6705:71;:::i;:::-;6561:222;;;;:::o;6789:122::-;6862:24;6880:5;6862:24;:::i;:::-;6855:5;6852:35;6842:63;;6901:1;6898;6891:12;6842:63;6789:122;:::o;6917:139::-;6963:5;7001:6;6988:20;6979:29;;7017:33;7044:5;7017:33;:::i;:::-;6917:139;;;;:::o;7062:329::-;7121:6;7170:2;7158:9;7149:7;7145:23;7141:32;7138:119;;;7176:79;;:::i;:::-;7138:119;7296:1;7321:53;7366:7;7357:6;7346:9;7342:22;7321:53;:::i;:::-;7311:63;;7267:117;7062:329;;;;:::o;7397:474::-;7465:6;7473;7522:2;7510:9;7501:7;7497:23;7493:32;7490:119;;;7528:79;;:::i;:::-;7490:119;7648:1;7673:53;7718:7;7709:6;7698:9;7694:22;7673:53;:::i;:::-;7663:63;;7619:117;7775:2;7801:53;7846:7;7837:6;7826:9;7822:22;7801:53;:::i;:::-;7791:63;;7746:118;7397:474;;;;;:::o;7877:442::-;8026:4;8064:2;8053:9;8049:18;8041:26;;8077:71;8145:1;8134:9;8130:17;8121:6;8077:71;:::i;:::-;8158:72;8226:2;8215:9;8211:18;8202:6;8158:72;:::i;:::-;8240;8308:2;8297:9;8293:18;8284:6;8240:72;:::i;:::-;7877:442;;;;;;:::o;8325:117::-;8434:1;8431;8424:12;8448:117;8557:1;8554;8547:12;8585:553;8643:8;8653:6;8703:3;8696:4;8688:6;8684:17;8680:27;8670:122;;8711:79;;:::i;:::-;8670:122;8824:6;8811:20;8801:30;;8854:18;8846:6;8843:30;8840:117;;;8876:79;;:::i;:::-;8840:117;8990:4;8982:6;8978:17;8966:29;;9044:3;9036:4;9028:6;9024:17;9014:8;9010:32;9007:41;9004:128;;;9051:79;;:::i;:::-;9004:128;8585:553;;;;;:::o;9144:529::-;9215:6;9223;9272:2;9260:9;9251:7;9247:23;9243:32;9240:119;;;9278:79;;:::i;:::-;9240:119;9426:1;9415:9;9411:17;9398:31;9456:18;9448:6;9445:30;9442:117;;;9478:79;;:::i;:::-;9442:117;9591:65;9648:7;9639:6;9628:9;9624:22;9591:65;:::i;:::-;9573:83;;;;9369:297;9144:529;;;;;:::o;9679:327::-;9737:6;9786:2;9774:9;9765:7;9761:23;9757:32;9754:119;;;9792:79;;:::i;:::-;9754:119;9912:1;9937:52;9981:7;9972:6;9961:9;9957:22;9937:52;:::i;:::-;9927:62;;9883:116;9679:327;;;;:::o;10012:60::-;10040:3;10061:5;10054:12;;10012:60;;;:::o;10078:142::-;10128:9;10161:53;10179:34;10188:24;10206:5;10188:24;:::i;:::-;10179:34;:::i;:::-;10161:53;:::i;:::-;10148:66;;10078:142;;;:::o;10226:126::-;10276:9;10309:37;10340:5;10309:37;:::i;:::-;10296:50;;10226:126;;;:::o;10358:148::-;10430:9;10463:37;10494:5;10463:37;:::i;:::-;10450:50;;10358:148;;;:::o;10512:175::-;10621:59;10674:5;10621:59;:::i;:::-;10616:3;10609:72;10512:175;;:::o;10693:266::-;10808:4;10846:2;10835:9;10831:18;10823:26;;10859:93;10949:1;10938:9;10934:17;10925:6;10859:93;:::i;:::-;10693:266;;;;:::o;10965:162::-;11051:9;11084:37;11115:5;11084:37;:::i;:::-;11071:50;;10965:162;;;:::o;11133:203::-;11256:73;11323:5;11256:73;:::i;:::-;11251:3;11244:86;11133:203;;:::o;11342:294::-;11471:4;11509:2;11498:9;11494:18;11486:26;;11522:107;11626:1;11615:9;11611:17;11602:6;11522:107;:::i;:::-;11342:294;;;;:::o;11642:112::-;11695:7;11724:24;11742:5;11724:24;:::i;:::-;11713:35;;11642:112;;;:::o;11760:154::-;11849:40;11883:5;11849:40;:::i;:::-;11842:5;11839:51;11829:79;;11904:1;11901;11894:12;11829:79;11760:154;:::o;11920:171::-;11982:5;12020:6;12007:20;11998:29;;12036:49;12079:5;12036:49;:::i;:::-;11920:171;;;;:::o;12097:977::-;12209:6;12217;12225;12233;12282:3;12270:9;12261:7;12257:23;12253:33;12250:120;;;12289:79;;:::i;:::-;12250:120;12409:1;12434:53;12479:7;12470:6;12459:9;12455:22;12434:53;:::i;:::-;12424:63;;12380:117;12564:2;12553:9;12549:18;12536:32;12595:18;12587:6;12584:30;12581:117;;;12617:79;;:::i;:::-;12581:117;12722:63;12777:7;12768:6;12757:9;12753:22;12722:63;:::i;:::-;12712:73;;12507:288;12834:2;12860:69;12921:7;12912:6;12901:9;12897:22;12860:69;:::i;:::-;12850:79;;12805:134;12978:2;13004:53;13049:7;13040:6;13029:9;13025:22;13004:53;:::i;:::-;12994:63;;12949:118;12097:977;;;;;;;:::o;13080:975::-;13191:6;13199;13207;13215;13264:3;13252:9;13243:7;13239:23;13235:33;13232:120;;;13271:79;;:::i;:::-;13232:120;13391:1;13416:53;13461:7;13452:6;13441:9;13437:22;13416:53;:::i;:::-;13406:63;;13362:117;13546:2;13535:9;13531:18;13518:32;13577:18;13569:6;13566:30;13563:117;;;13599:79;;:::i;:::-;13563:117;13704:63;13759:7;13750:6;13739:9;13735:22;13704:63;:::i;:::-;13694:73;;13489:288;13816:2;13842:68;13902:7;13893:6;13882:9;13878:22;13842:68;:::i;:::-;13832:78;;13787:133;13959:2;13985:53;14030:7;14021:6;14010:9;14006:22;13985:53;:::i;:::-;13975:63;;13930:118;13080:975;;;;;;;:::o;14061:125::-;14127:7;14156:24;14174:5;14156:24;:::i;:::-;14145:35;;14061:125;;;:::o;14192:180::-;14294:53;14341:5;14294:53;:::i;:::-;14287:5;14284:64;14274:92;;14362:1;14359;14352:12;14274:92;14192:180;:::o;14378:197::-;14453:5;14491:6;14478:20;14469:29;;14507:62;14563:5;14507:62;:::i;:::-;14378:197;;;;:::o;14581:387::-;14669:6;14718:2;14706:9;14697:7;14693:23;14689:32;14686:119;;;14724:79;;:::i;:::-;14686:119;14844:1;14869:82;14943:7;14934:6;14923:9;14919:22;14869:82;:::i;:::-;14859:92;;14815:146;14581:387;;;;:::o;14974:153::-;15051:9;15084:37;15115:5;15084:37;:::i;:::-;15071:50;;14974:153;;;:::o;15133:185::-;15247:64;15305:5;15247:64;:::i;:::-;15242:3;15235:77;15133:185;;:::o;15324:276::-;15444:4;15482:2;15471:9;15467:18;15459:26;;15495:98;15590:1;15579:9;15575:17;15566:6;15495:98;:::i;:::-;15324:276;;;;:::o;15606:307::-;15667:4;15757:18;15749:6;15746:30;15743:56;;;15779:18;;:::i;:::-;15743:56;15817:29;15839:6;15817:29;:::i;:::-;15809:37;;15901:4;15895;15891:15;15883:23;;15606:307;;;:::o;15919:423::-;15996:5;16021:65;16037:48;16078:6;16037:48;:::i;:::-;16021:65;:::i;:::-;16012:74;;16109:6;16102:5;16095:21;16147:4;16140:5;16136:16;16185:3;16176:6;16171:3;16167:16;16164:25;16161:112;;;16192:79;;:::i;:::-;16161:112;16282:54;16329:6;16324:3;16319;16282:54;:::i;:::-;16002:340;15919:423;;;;;:::o;16361:338::-;16416:5;16465:3;16458:4;16450:6;16446:17;16442:27;16432:122;;16473:79;;:::i;:::-;16432:122;16590:6;16577:20;16615:78;16689:3;16681:6;16674:4;16666:6;16662:17;16615:78;:::i;:::-;16606:87;;16422:277;16361:338;;;;:::o;16705:652::-;16782:6;16790;16839:2;16827:9;16818:7;16814:23;16810:32;16807:119;;;16845:79;;:::i;:::-;16807:119;16965:1;16990:53;17035:7;17026:6;17015:9;17011:22;16990:53;:::i;:::-;16980:63;;16936:117;17120:2;17109:9;17105:18;17092:32;17151:18;17143:6;17140:30;17137:117;;;17173:79;;:::i;:::-;17137:117;17278:62;17332:7;17323:6;17312:9;17308:22;17278:62;:::i;:::-;17268:72;;17063:287;16705:652;;;;;:::o;17363:77::-;17400:7;17429:5;17418:16;;17363:77;;;:::o;17446:118::-;17533:24;17551:5;17533:24;:::i;:::-;17528:3;17521:37;17446:118;;:::o;17570:222::-;17663:4;17701:2;17690:9;17686:18;17678:26;;17714:71;17782:1;17771:9;17767:17;17758:6;17714:71;:::i;:::-;17570:222;;;;:::o;17798:138::-;17877:7;17906:24;17924:5;17906:24;:::i;:::-;17895:35;;17798:138;;;:::o;17942:206::-;18057:66;18117:5;18057:66;:::i;:::-;18050:5;18047:77;18037:105;;18138:1;18135;18128:12;18037:105;17942:206;:::o;18154:223::-;18242:5;18280:6;18267:20;18258:29;;18296:75;18365:5;18296:75;:::i;:::-;18154:223;;;;:::o;18383:413::-;18484:6;18533:2;18521:9;18512:7;18508:23;18504:32;18501:119;;;18539:79;;:::i;:::-;18501:119;18659:1;18684:95;18771:7;18762:6;18751:9;18747:22;18684:95;:::i;:::-;18674:105;;18630:159;18383:413;;;;:::o;18802:654::-;18880:6;18888;18937:2;18925:9;18916:7;18912:23;18908:32;18905:119;;;18943:79;;:::i;:::-;18905:119;19063:1;19088:53;19133:7;19124:6;19113:9;19109:22;19088:53;:::i;:::-;19078:63;;19034:117;19218:2;19207:9;19203:18;19190:32;19249:18;19241:6;19238:30;19235:117;;;19271:79;;:::i;:::-;19235:117;19376:63;19431:7;19422:6;19411:9;19407:22;19376:63;:::i;:::-;19366:73;;19161:288;18802:654;;;;;:::o;19462:119::-;19522:7;19551:24;19569:5;19551:24;:::i;:::-;19540:35;;19462:119;;;:::o;19587:168::-;19683:47;19724:5;19683:47;:::i;:::-;19676:5;19673:58;19663:86;;19745:1;19742;19735:12;19663:86;19587:168;:::o;19761:185::-;19830:5;19868:6;19855:20;19846:29;;19884:56;19934:5;19884:56;:::i;:::-;19761:185;;;;:::o;19952:375::-;20034:6;20083:2;20071:9;20062:7;20058:23;20054:32;20051:119;;;20089:79;;:::i;:::-;20051:119;20209:1;20234:76;20302:7;20293:6;20282:9;20278:22;20234:76;:::i;:::-;20224:86;;20180:140;19952:375;;;;:::o;20333:149::-;20406:9;20439:37;20470:5;20439:37;:::i;:::-;20426:50;;20333:149;;;:::o;20488:177::-;20598:60;20652:5;20598:60;:::i;:::-;20593:3;20586:73;20488:177;;:::o;20671:268::-;20787:4;20825:2;20814:9;20810:18;20802:26;;20838:94;20929:1;20918:9;20914:17;20905:6;20838:94;:::i;:::-;20671:268;;;;:::o;20945:126::-;21012:7;21041:24;21059:5;21041:24;:::i;:::-;21030:35;;20945:126;;;:::o;21077:182::-;21180:54;21228:5;21180:54;:::i;:::-;21173:5;21170:65;21160:93;;21249:1;21246;21239:12;21160:93;21077:182;:::o;21265:199::-;21341:5;21379:6;21366:20;21357:29;;21395:63;21452:5;21395:63;:::i;:::-;21265:199;;;;:::o;21470:389::-;21559:6;21608:2;21596:9;21587:7;21583:23;21579:32;21576:119;;;21614:79;;:::i;:::-;21576:119;21734:1;21759:83;21834:7;21825:6;21814:9;21810:22;21759:83;:::i;:::-;21749:93;;21705:147;21470:389;;;;:::o;21865:120::-;21926:7;21955:24;21973:5;21955:24;:::i;:::-;21944:35;;21865:120;;;:::o;21991:170::-;22088:48;22130:5;22088:48;:::i;:::-;22081:5;22078:59;22068:87;;22151:1;22148;22141:12;22068:87;21991:170;:::o;22167:187::-;22237:5;22275:6;22262:20;22253:29;;22291:57;22342:5;22291:57;:::i;:::-;22167:187;;;;:::o;22360:377::-;22443:6;22492:2;22480:9;22471:7;22467:23;22463:32;22460:119;;;22498:79;;:::i;:::-;22460:119;22618:1;22643:77;22712:7;22703:6;22692:9;22688:22;22643:77;:::i;:::-;22633:87;;22589:141;22360:377;;;;:::o;22743:167::-;22834:9;22867:37;22898:5;22867:37;:::i;:::-;22854:50;;22743:167;;;:::o;22916:213::-;23044:78;23116:5;23044:78;:::i;:::-;23039:3;23032:91;22916:213;;:::o;23135:304::-;23269:4;23307:2;23296:9;23292:18;23284:26;;23320:112;23429:1;23418:9;23414:17;23405:6;23320:112;:::i;:::-;23135:304;;;;:::o;23445:99::-;23497:6;23531:5;23525:12;23515:22;;23445:99;;;:::o;23550:169::-;23634:11;23668:6;23663:3;23656:19;23708:4;23703:3;23699:14;23684:29;;23550:169;;;;:::o;23725:139::-;23814:6;23809:3;23804;23798:23;23855:1;23846:6;23841:3;23837:16;23830:27;23725:139;;;:::o;23870:377::-;23958:3;23986:39;24019:5;23986:39;:::i;:::-;24041:71;24105:6;24100:3;24041:71;:::i;:::-;24034:78;;24121:65;24179:6;24174:3;24167:4;24160:5;24156:16;24121:65;:::i;:::-;24211:29;24233:6;24211:29;:::i;:::-;24206:3;24202:39;24195:46;;23962:285;23870:377;;;;:::o;24253:313::-;24366:4;24404:2;24393:9;24389:18;24381:26;;24453:9;24447:4;24443:20;24439:1;24428:9;24424:17;24417:47;24481:78;24554:4;24545:6;24481:78;:::i;:::-;24473:86;;24253:313;;;;:::o;24572:133::-;24646:7;24675:24;24693:5;24675:24;:::i;:::-;24664:35;;24572:133;;;:::o;24711:196::-;24821:61;24876:5;24821:61;:::i;:::-;24814:5;24811:72;24801:100;;24897:1;24894;24887:12;24801:100;24711:196;:::o;24913:213::-;24996:5;25034:6;25021:20;25012:29;;25050:70;25114:5;25050:70;:::i;:::-;24913:213;;;;:::o;25132:403::-;25228:6;25277:2;25265:9;25256:7;25252:23;25248:32;25245:119;;;25283:79;;:::i;:::-;25245:119;25403:1;25428:90;25510:7;25501:6;25490:9;25486:22;25428:90;:::i;:::-;25418:100;;25374:154;25132:403;;;;:::o;25541:644::-;25738:4;25776:3;25765:9;25761:19;25753:27;;25790:71;25858:1;25847:9;25843:17;25834:6;25790:71;:::i;:::-;25871:72;25939:2;25928:9;25924:18;25915:6;25871:72;:::i;:::-;25953;26021:2;26010:9;26006:18;25997:6;25953:72;:::i;:::-;26072:9;26066:4;26062:20;26057:2;26046:9;26042:18;26035:48;26100:78;26173:4;26164:6;26100:78;:::i;:::-;26092:86;;25541:644;;;;;;;:::o;26191:652::-;26268:6;26276;26325:2;26313:9;26304:7;26300:23;26296:32;26293:119;;;26331:79;;:::i;:::-;26293:119;26451:1;26476:52;26520:7;26511:6;26500:9;26496:22;26476:52;:::i;:::-;26466:62;;26422:116;26605:2;26594:9;26590:18;26577:32;26636:18;26628:6;26625:30;26622:117;;;26658:79;;:::i;:::-;26622:117;26763:63;26818:7;26809:6;26798:9;26794:22;26763:63;:::i;:::-;26753:73;;26548:288;26191:652;;;;;:::o;26849:328::-;26968:4;27006:2;26995:9;26991:18;26983:26;;27019:71;27087:1;27076:9;27072:17;27063:6;27019:71;:::i;:::-;27100:70;27166:2;27155:9;27151:18;27142:6;27100:70;:::i;:::-;26849:328;;;;;:::o;27183:553::-;27360:4;27398:3;27387:9;27383:19;27375:27;;27412:71;27480:1;27469:9;27465:17;27456:6;27412:71;:::i;:::-;27493:72;27561:2;27550:9;27546:18;27537:6;27493:72;:::i;:::-;27575;27643:2;27632:9;27628:18;27619:6;27575:72;:::i;:::-;27657;27725:2;27714:9;27710:18;27701:6;27657:72;:::i;:::-;27183:553;;;;;;;:::o;27742:155::-;27821:9;27854:37;27885:5;27854:37;:::i;:::-;27841:50;;27742:155;;;:::o;27903:189::-;28019:66;28079:5;28019:66;:::i;:::-;28014:3;28007:79;27903:189;;:::o;28098:280::-;28220:4;28258:2;28247:9;28243:18;28235:26;;28271:100;28368:1;28357:9;28353:17;28344:6;28271:100;:::i;:::-;28098:280;;;;:::o;28384:332::-;28505:4;28543:2;28532:9;28528:18;28520:26;;28556:71;28624:1;28613:9;28609:17;28600:6;28556:71;:::i;:::-;28637:72;28705:2;28694:9;28690:18;28681:6;28637:72;:::i;:::-;28384:332;;;;;:::o;28722:975::-;28833:6;28841;28849;28857;28906:3;28894:9;28885:7;28881:23;28877:33;28874:120;;;28913:79;;:::i;:::-;28874:120;29033:1;29058:52;29102:7;29093:6;29082:9;29078:22;29058:52;:::i;:::-;29048:62;;29004:116;29187:2;29176:9;29172:18;29159:32;29218:18;29210:6;29207:30;29204:117;;;29240:79;;:::i;:::-;29204:117;29345:63;29400:7;29391:6;29380:9;29376:22;29345:63;:::i;:::-;29335:73;;29130:288;29457:2;29483:69;29544:7;29535:6;29524:9;29520:22;29483:69;:::i;:::-;29473:79;;29428:134;29601:2;29627:53;29672:7;29663:6;29652:9;29648:22;29627:53;:::i;:::-;29617:63;;29572:118;28722:975;;;;;;;:::o;29703:180::-;29751:77;29748:1;29741:88;29848:4;29845:1;29838:15;29872:4;29869:1;29862:15;29889:372;29928:4;29948:19;29965:1;29948:19;:::i;:::-;29943:24;;29981:19;29998:1;29981:19;:::i;:::-;29976:24;;30024:1;30021;30017:9;30009:17;;30218:1;30212:4;30208:12;30204:1;30201;30197:9;30193:28;30176:1;30170:4;30166:12;30161:1;30158;30154:9;30147:17;30143:36;30127:104;30124:130;;;30234:18;;:::i;:::-;30124:130;29889:372;;;;:::o;30267:410::-;30307:7;30330:20;30348:1;30330:20;:::i;:::-;30325:25;;30364:20;30382:1;30364:20;:::i;:::-;30359:25;;30419:1;30416;30412:9;30441:30;30459:11;30441:30;:::i;:::-;30430:41;;30620:1;30611:7;30607:15;30604:1;30601:22;30581:1;30574:9;30554:83;30531:139;;30650:18;;:::i;:::-;30531:139;30315:362;30267:410;;;;:::o;30683:293::-;30823:34;30819:1;30811:6;30807:14;30800:58;30892:34;30887:2;30879:6;30875:15;30868:59;30961:7;30956:2;30948:6;30944:15;30937:32;30683:293;:::o;30982:366::-;31124:3;31145:67;31209:2;31204:3;31145:67;:::i;:::-;31138:74;;31221:93;31310:3;31221:93;:::i;:::-;31339:2;31334:3;31330:12;31323:19;;30982:366;;;:::o;31354:639::-;31576:4;31614:2;31603:9;31599:18;31591:26;;31663:9;31657:4;31653:20;31649:1;31638:9;31634:17;31627:47;31691:131;31817:4;31691:131;:::i;:::-;31683:139;;31832:72;31900:2;31889:9;31885:18;31876:6;31832:72;:::i;:::-;31914;31982:2;31971:9;31967:18;31958:6;31914:72;:::i;:::-;31354:639;;;;;:::o;31999:242::-;32139:34;32135:1;32127:6;32123:14;32116:58;32208:25;32203:2;32195:6;32191:15;32184:50;31999:242;:::o;32247:366::-;32389:3;32410:67;32474:2;32469:3;32410:67;:::i;:::-;32403:74;;32486:93;32575:3;32486:93;:::i;:::-;32604:2;32599:3;32595:12;32588:19;;32247:366;;;:::o;32619:529::-;32813:4;32851:2;32840:9;32836:18;32828:26;;32900:9;32894:4;32890:20;32886:1;32875:9;32871:17;32864:47;32928:131;33054:4;32928:131;:::i;:::-;32920:139;;33069:72;33137:2;33126:9;33122:18;33113:6;33069:72;:::i;:::-;32619:529;;;;:::o;33154:143::-;33211:5;33242:6;33236:13;33227:22;;33258:33;33285:5;33258:33;:::i;:::-;33154:143;;;;:::o;33303:351::-;33373:6;33422:2;33410:9;33401:7;33397:23;33393:32;33390:119;;;33428:79;;:::i;:::-;33390:119;33548:1;33573:64;33629:7;33620:6;33609:9;33605:22;33573:64;:::i;:::-;33563:74;;33519:128;33303:351;;;;:::o;33660:233::-;33800:34;33796:1;33788:6;33784:14;33777:58;33869:16;33864:2;33856:6;33852:15;33845:41;33660:233;:::o;33899:366::-;34041:3;34062:67;34126:2;34121:3;34062:67;:::i;:::-;34055:74;;34138:93;34227:3;34138:93;:::i;:::-;34256:2;34251:3;34247:12;34240:19;;33899:366;;;:::o;34271:796::-;34544:4;34582:3;34571:9;34567:19;34559:27;;34632:9;34626:4;34622:20;34618:1;34607:9;34603:17;34596:47;34660:131;34786:4;34660:131;:::i;:::-;34652:139;;34801:95;34892:2;34881:9;34877:18;34868:6;34801:95;:::i;:::-;34906:72;34974:2;34963:9;34959:18;34950:6;34906:72;:::i;:::-;34988;35056:2;35045:9;35041:18;35032:6;34988:72;:::i;:::-;34271:796;;;;;;:::o;35073:191::-;35113:3;35132:20;35150:1;35132:20;:::i;:::-;35127:25;;35166:20;35184:1;35166:20;:::i;:::-;35161:25;;35209:1;35206;35202:9;35195:16;;35230:3;35227:1;35224:10;35221:36;;;35237:18;;:::i;:::-;35221:36;35073:191;;;;:::o;35270:180::-;35318:77;35315:1;35308:88;35415:4;35412:1;35405:15;35439:4;35436:1;35429:15;35456:185;35496:1;35513:20;35531:1;35513:20;:::i;:::-;35508:25;;35547:20;35565:1;35547:20;:::i;:::-;35542:25;;35586:1;35576:35;;35591:18;;:::i;:::-;35576:35;35633:1;35630;35626:9;35621:14;;35456:185;;;;:::o;35647:332::-;35768:4;35806:2;35795:9;35791:18;35783:26;;35819:71;35887:1;35876:9;35872:17;35863:6;35819:71;:::i;:::-;35900:72;35968:2;35957:9;35953:18;35944:6;35900:72;:::i;:::-;35647:332;;;;;:::o;35985:91::-;36036:7;36065:5;36054:16;;35985:91;;;:::o;36082:168::-;36145:9;36178:66;36195:48;36204:38;36236:5;36204:38;:::i;:::-;36195:48;:::i;:::-;36178:66;:::i;:::-;36165:79;;36082:168;;;:::o;36256:157::-;36356:50;36400:5;36356:50;:::i;:::-;36351:3;36344:63;36256:157;;:::o;36419:666::-;36627:4;36665:3;36654:9;36650:19;36642:27;;36679:69;36745:1;36734:9;36730:17;36721:6;36679:69;:::i;:::-;36758:85;36839:2;36828:9;36824:18;36815:6;36758:85;:::i;:::-;36890:9;36884:4;36880:20;36875:2;36864:9;36860:18;36853:48;36918:78;36991:4;36982:6;36918:78;:::i;:::-;36910:86;;37006:72;37074:2;37063:9;37059:18;37050:6;37006:72;:::i;:::-;36419:666;;;;;;;:::o;37091:147::-;37192:11;37229:3;37214:18;;37091:147;;;;:::o;37244:114::-;;:::o;37364:398::-;37523:3;37544:83;37625:1;37620:3;37544:83;:::i;:::-;37537:90;;37636:93;37725:3;37636:93;:::i;:::-;37754:1;37749:3;37745:11;37738:18;;37364:398;;;:::o;37768:379::-;37952:3;37974:147;38117:3;37974:147;:::i;:::-;37967:154;;38138:3;38131:10;;37768:379;;;:::o;38153:177::-;38293:29;38289:1;38281:6;38277:14;38270:53;38153:177;:::o;38336:366::-;38478:3;38499:67;38563:2;38558:3;38499:67;:::i;:::-;38492:74;;38575:93;38664:3;38575:93;:::i;:::-;38693:2;38688:3;38684:12;38677:19;;38336:366;;;:::o;38708:639::-;38930:4;38968:2;38957:9;38953:18;38945:26;;39017:9;39011:4;39007:20;39003:1;38992:9;38988:17;38981:47;39045:131;39171:4;39045:131;:::i;:::-;39037:139;;39186:72;39254:2;39243:9;39239:18;39230:6;39186:72;:::i;:::-;39268;39336:2;39325:9;39321:18;39312:6;39268:72;:::i;:::-;38708:639;;;;;:::o;39353:141::-;39418:9;39451:37;39482:5;39451:37;:::i;:::-;39438:50;;39353:141;;;:::o;39500:161::-;39602:52;39648:5;39602:52;:::i;:::-;39597:3;39590:65;39500:161;;:::o;39667:583::-;39859:4;39897:3;39886:9;39882:19;39874:27;;39911:71;39979:1;39968:9;39964:17;39955:6;39911:71;:::i;:::-;39992:72;40060:2;40049:9;40045:18;40036:6;39992:72;:::i;:::-;40074:87;40157:2;40146:9;40142:18;40133:6;40074:87;:::i;:::-;40171:72;40239:2;40228:9;40224:18;40215:6;40171:72;:::i;:::-;39667:583;;;;;;;:::o;40256:97::-;40315:6;40343:3;40333:13;;40256:97;;;;:::o;40359:180::-;40407:77;40404:1;40397:88;40504:4;40501:1;40494:15;40528:4;40525:1;40518:15;40545:320;40589:6;40626:1;40620:4;40616:12;40606:22;;40673:1;40667:4;40663:12;40694:18;40684:81;;40750:4;40742:6;40738:17;40728:27;;40684:81;40812:2;40804:6;40801:14;40781:18;40778:38;40775:84;;40831:18;;:::i;:::-;40775:84;40596:269;40545:320;;;:::o;40871:141::-;40920:4;40943:3;40935:11;;40966:3;40963:1;40956:14;41000:4;40997:1;40987:18;40979:26;;40871:141;;;:::o;41018:93::-;41055:6;41102:2;41097;41090:5;41086:14;41082:23;41072:33;;41018:93;;;:::o;41117:107::-;41161:8;41211:5;41205:4;41201:16;41180:37;;41117:107;;;;:::o;41230:393::-;41299:6;41349:1;41337:10;41333:18;41372:97;41402:66;41391:9;41372:97;:::i;:::-;41490:39;41520:8;41509:9;41490:39;:::i;:::-;41478:51;;41562:4;41558:9;41551:5;41547:21;41538:30;;41611:4;41601:8;41597:19;41590:5;41587:30;41577:40;;41306:317;;41230:393;;;;;:::o;41629:142::-;41679:9;41712:53;41730:34;41739:24;41757:5;41739:24;:::i;:::-;41730:34;:::i;:::-;41712:53;:::i;:::-;41699:66;;41629:142;;;:::o;41777:75::-;41820:3;41841:5;41834:12;;41777:75;;;:::o;41858:269::-;41968:39;41999:7;41968:39;:::i;:::-;42029:91;42078:41;42102:16;42078:41;:::i;:::-;42070:6;42063:4;42057:11;42029:91;:::i;:::-;42023:4;42016:105;41934:193;41858:269;;;:::o;42133:73::-;42178:3;42199:1;42192:8;;42133:73;:::o;42212:189::-;42289:32;;:::i;:::-;42330:65;42388:6;42380;42374:4;42330:65;:::i;:::-;42265:136;42212:189;;:::o;42407:186::-;42467:120;42484:3;42477:5;42474:14;42467:120;;;42538:39;42575:1;42568:5;42538:39;:::i;:::-;42511:1;42504:5;42500:13;42491:22;;42467:120;;;42407:186;;:::o;42599:543::-;42700:2;42695:3;42692:11;42689:446;;;42734:38;42766:5;42734:38;:::i;:::-;42818:29;42836:10;42818:29;:::i;:::-;42808:8;42804:44;43001:2;42989:10;42986:18;42983:49;;;43022:8;43007:23;;42983:49;43045:80;43101:22;43119:3;43101:22;:::i;:::-;43091:8;43087:37;43074:11;43045:80;:::i;:::-;42704:431;;42689:446;42599:543;;;:::o;43148:117::-;43202:8;43252:5;43246:4;43242:16;43221:37;;43148:117;;;;:::o;43271:169::-;43315:6;43348:51;43396:1;43392:6;43384:5;43381:1;43377:13;43348:51;:::i;:::-;43344:56;43429:4;43423;43419:15;43409:25;;43322:118;43271:169;;;;:::o;43445:295::-;43521:4;43667:29;43692:3;43686:4;43667:29;:::i;:::-;43659:37;;43729:3;43726:1;43722:11;43716:4;43713:21;43705:29;;43445:295;;;;:::o;43745:1403::-;43869:44;43909:3;43904;43869:44;:::i;:::-;43978:18;43970:6;43967:30;43964:56;;;44000:18;;:::i;:::-;43964:56;44044:38;44076:4;44070:11;44044:38;:::i;:::-;44129:67;44189:6;44181;44175:4;44129:67;:::i;:::-;44223:1;44252:2;44244:6;44241:14;44269:1;44264:632;;;;44940:1;44957:6;44954:84;;;45013:9;45008:3;45004:19;44991:33;44982:42;;44954:84;45064:67;45124:6;45117:5;45064:67;:::i;:::-;45058:4;45051:81;44913:229;44234:908;;44264:632;44316:4;44312:9;44304:6;44300:22;44350:37;44382:4;44350:37;:::i;:::-;44409:1;44423:215;44437:7;44434:1;44431:14;44423:215;;;44523:9;44518:3;44514:19;44501:33;44493:6;44486:49;44574:1;44566:6;44562:14;44552:24;;44621:2;44610:9;44606:18;44593:31;;44460:4;44457:1;44453:12;44448:17;;44423:215;;;44666:6;44657:7;44654:19;44651:186;;;44731:9;44726:3;44722:19;44709:33;44774:48;44816:4;44808:6;44804:17;44793:9;44774:48;:::i;:::-;44766:6;44759:64;44674:163;44651:186;44883:1;44879;44871:6;44867:14;44863:22;44857:4;44850:36;44271:625;;;44234:908;;43844:1304;;;43745:1403;;;:::o;45154:142::-;45220:9;45253:37;45284:5;45253:37;:::i;:::-;45240:50;;45154:142;;;:::o;45302:163::-;45405:53;45452:5;45405:53;:::i;:::-;45400:3;45393:66;45302:163;;:::o;45471:585::-;45664:4;45702:3;45691:9;45687:19;45679:27;;45716:71;45784:1;45773:9;45769:17;45760:6;45716:71;:::i;:::-;45797:72;45865:2;45854:9;45850:18;45841:6;45797:72;:::i;:::-;45879:88;45963:2;45952:9;45948:18;45939:6;45879:88;:::i;:::-;45977:72;46045:2;46034:9;46030:18;46021:6;45977:72;:::i;:::-;45471:585;;;;;;;:::o;46062:178::-;46202:30;46198:1;46190:6;46186:14;46179:54;46062:178;:::o;46246:366::-;46388:3;46409:67;46473:2;46468:3;46409:67;:::i;:::-;46402:74;;46485:93;46574:3;46485:93;:::i;:::-;46603:2;46598:3;46594:12;46587:19;;46246:366;;;:::o;46618:639::-;46840:4;46878:2;46867:9;46863:18;46855:26;;46927:9;46921:4;46917:20;46913:1;46902:9;46898:17;46891:47;46955:131;47081:4;46955:131;:::i;:::-;46947:139;;47096:72;47164:2;47153:9;47149:18;47140:6;47096:72;:::i;:::-;47178;47246:2;47235:9;47231:18;47222:6;47178:72;:::i;:::-;46618:639;;;;;:::o;47263:244::-;47403:34;47399:1;47391:6;47387:14;47380:58;47472:27;47467:2;47459:6;47455:15;47448:52;47263:244;:::o;47513:366::-;47655:3;47676:67;47740:2;47735:3;47676:67;:::i;:::-;47669:74;;47752:93;47841:3;47752:93;:::i;:::-;47870:2;47865:3;47861:12;47854:19;;47513:366;;;:::o;47885:419::-;48051:4;48089:2;48078:9;48074:18;48066:26;;48138:9;48132:4;48128:20;48124:1;48113:9;48109:17;48102:47;48166:131;48292:4;48166:131;:::i;:::-;48158:139;;47885:419;;;:::o;48310:375::-;48349:3;48368:19;48385:1;48368:19;:::i;:::-;48363:24;;48401:19;48418:1;48401:19;:::i;:::-;48396:24;;48443:1;48440;48436:9;48429:16;;48641:1;48636:3;48632:11;48625:19;48621:1;48618;48614:9;48610:35;48593:1;48588:3;48584:11;48579:1;48576;48572:9;48565:17;48561:35;48545:110;48542:136;;;48658:18;;:::i;:::-;48542:136;48310:375;;;;:::o;48691:358::-;48831:34;48827:1;48819:6;48815:14;48808:58;48900:34;48895:2;48887:6;48883:15;48876:59;48969:34;48964:2;48956:6;48952:15;48945:59;49038:3;49033:2;49025:6;49021:15;49014:28;48691:358;:::o;49055:367::-;49197:3;49218:67;49282:2;49277:3;49218:67;:::i;:::-;49211:74;;49294:93;49383:3;49294:93;:::i;:::-;49412:3;49407;49403:13;49396:20;;49055:367;;;:::o;49428:750::-;49678:4;49716:3;49705:9;49701:19;49693:27;;49766:9;49760:4;49756:20;49752:1;49741:9;49737:17;49730:47;49794:131;49920:4;49794:131;:::i;:::-;49786:139;;49935:72;50003:2;49992:9;49988:18;49979:6;49935:72;:::i;:::-;50017;50085:2;50074:9;50070:18;50061:6;50017:72;:::i;:::-;50099;50167:2;50156:9;50152:18;50143:6;50099:72;:::i;:::-;49428:750;;;;;;:::o;50184:85::-;50229:7;50258:5;50247:16;;50184:85;;;:::o;50275:101::-;50311:7;50351:18;50344:5;50340:30;50329:41;;50275:101;;;:::o;50382:156::-;50439:9;50472:60;50489:42;50498:32;50524:5;50498:32;:::i;:::-;50489:42;:::i;:::-;50472:60;:::i;:::-;50459:73;;50382:156;;;:::o;50544:145::-;50638:44;50676:5;50638:44;:::i;:::-;50633:3;50626:57;50544:145;;:::o;50695:236::-;50795:4;50833:2;50822:9;50818:18;50810:26;;50846:78;50921:1;50910:9;50906:17;50897:6;50846:78;:::i;:::-;50695:236;;;;:::o;50937:194::-;50977:4;50997:20;51015:1;50997:20;:::i;:::-;50992:25;;51031:20;51049:1;51031:20;:::i;:::-;51026:25;;51075:1;51072;51068:9;51060:17;;51099:1;51093:4;51090:11;51087:37;;;51104:18;;:::i;:::-;51087:37;50937:194;;;;:::o;51137:170::-;51277:22;51273:1;51265:6;51261:14;51254:46;51137:170;:::o;51313:366::-;51455:3;51476:67;51540:2;51535:3;51476:67;:::i;:::-;51469:74;;51552:93;51641:3;51552:93;:::i;:::-;51670:2;51665:3;51661:12;51654:19;;51313:366;;;:::o;51685:529::-;51879:4;51917:2;51906:9;51902:18;51894:26;;51966:9;51960:4;51956:20;51952:1;51941:9;51937:17;51930:47;51994:131;52120:4;51994:131;:::i;:::-;51986:139;;52135:72;52203:2;52192:9;52188:18;52179:6;52135:72;:::i;:::-;51685:529;;;;:::o;52220:233::-;52360:34;52356:1;52348:6;52344:14;52337:58;52429:16;52424:2;52416:6;52412:15;52405:41;52220:233;:::o;52459:366::-;52601:3;52622:67;52686:2;52681:3;52622:67;:::i;:::-;52615:74;;52698:93;52787:3;52698:93;:::i;:::-;52816:2;52811:3;52807:12;52800:19;;52459:366;;;:::o;52831:419::-;52997:4;53035:2;53024:9;53020:18;53012:26;;53084:9;53078:4;53074:20;53070:1;53059:9;53055:17;53048:47;53112:131;53238:4;53112:131;:::i;:::-;53104:139;;52831:419;;;:::o;53256:233::-;53295:3;53318:24;53336:5;53318:24;:::i;:::-;53309:33;;53364:66;53357:5;53354:77;53351:103;;53434:18;;:::i;:::-;53351:103;53481:1;53474:5;53470:13;53463:20;;53256:233;;;:::o;53495:231::-;53635:34;53631:1;53623:6;53619:14;53612:58;53704:14;53699:2;53691:6;53687:15;53680:39;53495:231;:::o;53732:366::-;53874:3;53895:67;53959:2;53954:3;53895:67;:::i;:::-;53888:74;;53971:93;54060:3;53971:93;:::i;:::-;54089:2;54084:3;54080:12;54073:19;;53732:366;;;:::o;54104:639::-;54326:4;54364:2;54353:9;54349:18;54341:26;;54413:9;54407:4;54403:20;54399:1;54388:9;54384:17;54377:47;54441:131;54567:4;54441:131;:::i;:::-;54433:139;;54582:72;54650:2;54639:9;54635:18;54626:6;54582:72;:::i;:::-;54664;54732:2;54721:9;54717:18;54708:6;54664:72;:::i;:::-;54104:639;;;;;:::o;54749:179::-;54889:31;54885:1;54877:6;54873:14;54866:55;54749:179;:::o;54934:366::-;55076:3;55097:67;55161:2;55156:3;55097:67;:::i;:::-;55090:74;;55173:93;55262:3;55173:93;:::i;:::-;55291:2;55286:3;55282:12;55275:19;;54934:366;;;:::o;55306:419::-;55472:4;55510:2;55499:9;55495:18;55487:26;;55559:9;55553:4;55549:20;55545:1;55534:9;55530:17;55523:47;55587:131;55713:4;55587:131;:::i;:::-;55579:139;;55306:419;;;:::o;55731:246::-;55871:34;55867:1;55859:6;55855:14;55848:58;55940:29;55935:2;55927:6;55923:15;55916:54;55731:246;:::o;55983:366::-;56125:3;56146:67;56210:2;56205:3;56146:67;:::i;:::-;56139:74;;56222:93;56311:3;56222:93;:::i;:::-;56340:2;56335:3;56331:12;56324:19;;55983:366;;;:::o;56355:419::-;56521:4;56559:2;56548:9;56544:18;56536:26;;56608:9;56602:4;56598:20;56594:1;56583:9;56579:17;56572:47;56636:131;56762:4;56636:131;:::i;:::-;56628:139;;56355:419;;;:::o;56780:290::-;56920:34;56916:1;56908:6;56904:14;56897:58;56989:34;56984:2;56976:6;56972:15;56965:59;57058:4;57053:2;57045:6;57041:15;57034:29;56780:290;:::o;57076:366::-;57218:3;57239:67;57303:2;57298:3;57239:67;:::i;:::-;57232:74;;57315:93;57404:3;57315:93;:::i;:::-;57433:2;57428:3;57424:12;57417:19;;57076:366;;;:::o;57448:639::-;57670:4;57708:2;57697:9;57693:18;57685:26;;57757:9;57751:4;57747:20;57743:1;57732:9;57728:17;57721:47;57785:131;57911:4;57785:131;:::i;:::-;57777:139;;57926:72;57994:2;57983:9;57979:18;57970:6;57926:72;:::i;:::-;58008;58076:2;58065:9;58061:18;58052:6;58008:72;:::i;:::-;57448:639;;;;;:::o;58093:180::-;58141:77;58138:1;58131:88;58238:4;58235:1;58228:15;58262:4;58259:1;58252:15;58279:228;58314:3;58337:23;58354:5;58337:23;:::i;:::-;58328:32;;58382:66;58375:5;58372:77;58369:103;;58452:18;;:::i;:::-;58369:103;58495:5;58492:1;58488:13;58481:20;;58279:228;;;:::o;58513:146::-;58612:6;58646:5;58640:12;58630:22;;58513:146;;;:::o;58665:216::-;58796:11;58830:6;58825:3;58818:19;58870:4;58865:3;58861:14;58846:29;;58665:216;;;;:::o;58887:164::-;58986:4;59009:3;59001:11;;59039:4;59034:3;59030:14;59022:22;;58887:164;;;:::o;59057:108::-;59134:24;59152:5;59134:24;:::i;:::-;59129:3;59122:37;59057:108;;:::o;59171:105::-;59246:23;59263:5;59246:23;:::i;:::-;59241:3;59234:36;59171:105;;:::o;59380:513::-;59531:4;59526:3;59522:14;59621:4;59614:5;59610:16;59604:23;59640:63;59697:4;59692:3;59688:14;59674:12;59640:63;:::i;:::-;59546:167;59796:4;59789:5;59785:16;59779:23;59815:61;59870:4;59865:3;59861:14;59847:12;59815:61;:::i;:::-;59723:163;59500:393;59380:513;;:::o;59899:307::-;60032:10;60053:110;60159:3;60151:6;60053:110;:::i;:::-;60195:4;60190:3;60186:14;60172:28;;59899:307;;;;:::o;60212:145::-;60314:4;60346;60341:3;60337:14;60329:22;;60212:145;;;:::o;60465:988::-;60648:3;60677:86;60757:5;60677:86;:::i;:::-;60779:118;60890:6;60885:3;60779:118;:::i;:::-;60772:125;;60921:88;61003:5;60921:88;:::i;:::-;61032:7;61063:1;61048:380;61073:6;61070:1;61067:13;61048:380;;;61149:6;61143:13;61176:127;61299:3;61284:13;61176:127;:::i;:::-;61169:134;;61326:92;61411:6;61326:92;:::i;:::-;61316:102;;61108:320;61095:1;61092;61088:9;61083:14;;61048:380;;;61052:14;61444:3;61437:10;;60653:800;;;60465:988;;;;:::o;61459:501::-;61666:4;61704:2;61693:9;61689:18;61681:26;;61753:9;61747:4;61743:20;61739:1;61728:9;61724:17;61717:47;61781:172;61948:4;61939:6;61781:172;:::i;:::-;61773:180;;61459:501;;;;:::o;61966:666::-;62174:4;62212:3;62201:9;62197:19;62189:27;;62226:84;62307:1;62296:9;62292:17;62283:6;62226:84;:::i;:::-;62320:70;62386:2;62375:9;62371:18;62362:6;62320:70;:::i;:::-;62437:9;62431:4;62427:20;62422:2;62411:9;62407:18;62400:48;62465:78;62538:4;62529:6;62465:78;:::i;:::-;62457:86;;62553:72;62621:2;62610:9;62606:18;62597:6;62553:72;:::i;:::-;61966:666;;;;;;;:::o;62638:311::-;62715:4;62805:18;62797:6;62794:30;62791:56;;;62827:18;;:::i;:::-;62791:56;62877:4;62869:6;62865:17;62857:25;;62937:4;62931;62927:15;62919:23;;62638:311;;;:::o;62972:732::-;63079:5;63104:81;63120:64;63177:6;63120:64;:::i;:::-;63104:81;:::i;:::-;63095:90;;63205:5;63234:6;63227:5;63220:21;63268:4;63261:5;63257:16;63250:23;;63321:4;63313:6;63309:17;63301:6;63297:30;63350:3;63342:6;63339:15;63336:122;;;63369:79;;:::i;:::-;63336:122;63484:6;63467:231;63501:6;63496:3;63493:15;63467:231;;;63576:3;63605:48;63649:3;63637:10;63605:48;:::i;:::-;63600:3;63593:61;63683:4;63678:3;63674:14;63667:21;;63543:155;63527:4;63522:3;63518:14;63511:21;;63467:231;;;63471:21;63085:619;;62972:732;;;;;:::o;63727:385::-;63809:5;63858:3;63851:4;63843:6;63839:17;63835:27;63825:122;;63866:79;;:::i;:::-;63825:122;63976:6;63970:13;64001:105;64102:3;64094:6;64087:4;64079:6;64075:17;64001:105;:::i;:::-;63992:114;;63815:297;63727:385;;;;:::o;64118:554::-;64213:6;64262:2;64250:9;64241:7;64237:23;64233:32;64230:119;;;64268:79;;:::i;:::-;64230:119;64409:1;64398:9;64394:17;64388:24;64439:18;64431:6;64428:30;64425:117;;;64461:79;;:::i;:::-;64425:117;64566:89;64647:7;64638:6;64627:9;64623:22;64566:89;:::i;:::-;64556:99;;64359:306;64118:554;;;;:::o;64678:171::-;64717:3;64740:24;64758:5;64740:24;:::i;:::-;64731:33;;64786:4;64779:5;64776:15;64773:41;;64794:18;;:::i;:::-;64773:41;64841:1;64834:5;64830:13;64823:20;;64678:171;;;:::o;64855:176::-;64887:1;64904:20;64922:1;64904:20;:::i;:::-;64899:25;;64938:20;64956:1;64938:20;:::i;:::-;64933:25;;64977:1;64967:35;;64982:18;;:::i;:::-;64967:35;65023:1;65020;65016:9;65011:14;;64855:176;;;;:::o;65037:114::-;65104:6;65138:5;65132:12;65122:22;;65037:114;;;:::o;65157:184::-;65256:11;65290:6;65285:3;65278:19;65330:4;65325:3;65321:14;65306:29;;65157:184;;;;:::o;65347:132::-;65414:4;65437:3;65429:11;;65467:4;65462:3;65458:14;65450:22;;65347:132;;;:::o;65485:179::-;65554:10;65575:46;65617:3;65609:6;65575:46;:::i;:::-;65653:4;65648:3;65644:14;65630:28;;65485:179;;;;:::o;65670:113::-;65740:4;65772;65767:3;65763:14;65755:22;;65670:113;;;:::o;65819:732::-;65938:3;65967:54;66015:5;65967:54;:::i;:::-;66037:86;66116:6;66111:3;66037:86;:::i;:::-;66030:93;;66147:56;66197:5;66147:56;:::i;:::-;66226:7;66257:1;66242:284;66267:6;66264:1;66261:13;66242:284;;;66343:6;66337:13;66370:63;66429:3;66414:13;66370:63;:::i;:::-;66363:70;;66456:60;66509:6;66456:60;:::i;:::-;66446:70;;66302:224;66289:1;66286;66282:9;66277:14;;66242:284;;;66246:14;66542:3;66535:10;;65943:608;;;65819:732;;;;:::o;66557:593::-;66756:4;66794:2;66783:9;66779:18;66771:26;;66807:71;66875:1;66864:9;66860:17;66851:6;66807:71;:::i;:::-;66925:9;66919:4;66915:20;66910:2;66899:9;66895:18;66888:48;66953:108;67056:4;67047:6;66953:108;:::i;:::-;66945:116;;67071:72;67139:2;67128:9;67124:18;67115:6;67071:72;:::i;:::-;66557:593;;;;;;:::o;67156:143::-;67213:5;67244:6;67238:13;67229:22;;67260:33;67287:5;67260:33;:::i;:::-;67156:143;;;;:::o;67305:351::-;67375:6;67424:2;67412:9;67403:7;67399:23;67395:32;67392:119;;;67430:79;;:::i;:::-;67392:119;67550:1;67575:64;67631:7;67622:6;67611:9;67607:22;67575:64;:::i;:::-;67565:74;;67521:128;67305:351;;;;:::o;67662:90::-;67696:7;67739:5;67732:13;67725:21;67714:32;;67662:90;;;:::o;67758:109::-;67839:21;67854:5;67839:21;:::i;:::-;67834:3;67827:34;67758:109;;:::o;67873:320::-;67988:4;68026:2;68015:9;68011:18;68003:26;;68039:65;68101:1;68090:9;68086:17;68077:6;68039:65;:::i;:::-;68114:72;68182:2;68171:9;68167:18;68158:6;68114:72;:::i;:::-;67873:320;;;;;:::o;68199:140::-;68292:6;68326:5;68320:12;68310:22;;68199:140;;;:::o;68345:210::-;68470:11;68504:6;68499:3;68492:19;68544:4;68539:3;68535:14;68520:29;;68345:210;;;;:::o;68561:158::-;68654:4;68677:3;68669:11;;68707:4;68702:3;68698:14;68690:22;;68561:158;;;:::o;68725:108::-;68802:24;68820:5;68802:24;:::i;:::-;68797:3;68790:37;68725:108;;:::o;68925:503::-;69064:4;69059:3;69055:14;69154:4;69147:5;69143:16;69137:23;69173:63;69230:4;69225:3;69221:14;69207:12;69173:63;:::i;:::-;69079:167;69329:4;69322:5;69318:16;69312:23;69348:63;69405:4;69400:3;69396:14;69382:12;69348:63;:::i;:::-;69256:165;69033:395;68925:503;;:::o;69434:283::-;69555:10;69576:98;69670:3;69662:6;69576:98;:::i;:::-;69706:4;69701:3;69697:14;69683:28;;69434:283;;;;:::o;69723:139::-;69819:4;69851;69846:3;69842:14;69834:22;;69723:139;;;:::o;69958:940::-;70129:3;70158:80;70232:5;70158:80;:::i;:::-;70254:112;70359:6;70354:3;70254:112;:::i;:::-;70247:119;;70390:82;70466:5;70390:82;:::i;:::-;70495:7;70526:1;70511:362;70536:6;70533:1;70530:13;70511:362;;;70612:6;70606:13;70639:115;70750:3;70735:13;70639:115;:::i;:::-;70632:122;;70777:86;70856:6;70777:86;:::i;:::-;70767:96;;70571:302;70558:1;70555;70551:9;70546:14;;70511:362;;;70515:14;70889:3;70882:10;;70134:764;;;69958:940;;;;:::o;70904:477::-;71099:4;71137:2;71126:9;71122:18;71114:26;;71186:9;71180:4;71176:20;71172:1;71161:9;71157:17;71150:47;71214:160;71369:4;71360:6;71214:160;:::i;:::-;71206:168;;70904:477;;;;:::o;71387:143::-;71483:6;71517:5;71511:12;71501:22;;71387:143;;;:::o;71536:213::-;71664:11;71698:6;71693:3;71686:19;71738:4;71733:3;71729:14;71714:29;;71536:213;;;;:::o;71755:161::-;71851:4;71874:3;71866:11;;71904:4;71899:3;71895:14;71887:22;;71755:161;;;:::o;71996:521::-;72141:4;72136:3;72132:14;72242:4;72235:5;72231:16;72225:23;72261:63;72318:4;72313:3;72309:14;72295:12;72261:63;:::i;:::-;72156:178;72418:4;72411:5;72407:16;72401:23;72437:63;72494:4;72489:3;72485:14;72471:12;72437:63;:::i;:::-;72344:166;72110:407;71996:521;;:::o;72523:295::-;72650:10;72671:104;72771:3;72763:6;72671:104;:::i;:::-;72807:4;72802:3;72798:14;72784:28;;72523:295;;;;:::o;72824:142::-;72923:4;72955;72950:3;72946:14;72938:22;;72824:142;;;:::o;73050:964::-;73227:3;73256:83;73333:5;73256:83;:::i;:::-;73355:115;73463:6;73458:3;73355:115;:::i;:::-;73348:122;;73494:85;73573:5;73494:85;:::i;:::-;73602:7;73633:1;73618:371;73643:6;73640:1;73637:13;73618:371;;;73719:6;73713:13;73746:121;73863:3;73848:13;73746:121;:::i;:::-;73739:128;;73890:89;73972:6;73890:89;:::i;:::-;73880:99;;73678:311;73665:1;73662;73658:9;73653:14;;73618:371;;;73622:14;74005:3;73998:10;;73232:782;;;73050:964;;;;:::o;74020:709::-;74277:4;74315:2;74304:9;74300:18;74292:26;;74328:71;74396:1;74385:9;74381:17;74372:6;74328:71;:::i;:::-;74409:72;74477:2;74466:9;74462:18;74453:6;74409:72;:::i;:::-;74528:9;74522:4;74518:20;74513:2;74502:9;74498:18;74491:48;74556:166;74717:4;74708:6;74556:166;:::i;:::-;74548:174;;74020:709;;;;;;:::o;74735:106::-;74779:8;74828:5;74823:3;74819:15;74798:36;;74735:106;;;:::o;74847:183::-;74882:3;74920:1;74902:16;74899:23;74896:128;;;74958:1;74955;74952;74937:23;74980:34;75011:1;75005:8;74980:34;:::i;:::-;74973:41;;74896:128;74847:183;:::o;75036:200::-;75072:7;75081:4;75120;75102:16;75099:26;75096:134;;;75161:4;75158:1;75155;75140:26;75190:1;75179:12;;75218:1;75212:8;75204:16;;75096:134;75036:200;;:::o;75242:181::-;75382:33;75378:1;75370:6;75366:14;75359:57;75242:181;:::o;75429:366::-;75571:3;75592:67;75656:2;75651:3;75592:67;:::i;:::-;75585:74;;75668:93;75757:3;75668:93;:::i;:::-;75786:2;75781:3;75777:12;75770:19;;75429:366;;;:::o;75801:529::-;75995:4;76033:2;76022:9;76018:18;76010:26;;76082:9;76076:4;76072:20;76068:1;76057:9;76053:17;76046:47;76110:131;76236:4;76110:131;:::i;:::-;76102:139;;76251:72;76319:2;76308:9;76304:18;76295:6;76251:72;:::i;:::-;75801:529;;;;:::o;76336:247::-;76476:34;76472:1;76464:6;76460:14;76453:58;76545:30;76540:2;76532:6;76528:15;76521:55;76336:247;:::o;76589:366::-;76731:3;76752:67;76816:2;76811:3;76752:67;:::i;:::-;76745:74;;76828:93;76917:3;76828:93;:::i;:::-;76946:2;76941:3;76937:12;76930:19;;76589:366;;;:::o;76961:639::-;77183:4;77221:2;77210:9;77206:18;77198:26;;77270:9;77264:4;77260:20;77256:1;77245:9;77241:17;77234:47;77298:131;77424:4;77298:131;:::i;:::-;77290:139;;77439:72;77507:2;77496:9;77492:18;77483:6;77439:72;:::i;:::-;77521;77589:2;77578:9;77574:18;77565:6;77521:72;:::i;:::-;76961:639;;;;;:::o;77606:122::-;77679:24;77697:5;77679:24;:::i;:::-;77672:5;77669:35;77659:63;;77718:1;77715;77708:12;77659:63;77606:122;:::o;77734:143::-;77791:5;77822:6;77816:13;77807:22;;77838:33;77865:5;77838:33;:::i;:::-;77734:143;;;;:::o;77883:351::-;77953:6;78002:2;77990:9;77981:7;77977:23;77973:32;77970:119;;;78008:79;;:::i;:::-;77970:119;78128:1;78153:64;78209:7;78200:6;78189:9;78185:22;78153:64;:::i;:::-;78143:74;;78099:128;77883:351;;;;:::o;78240:231::-;78380:34;78376:1;78368:6;78364:14;78357:58;78449:14;78444:2;78436:6;78432:15;78425:39;78240:231;:::o;78477:366::-;78619:3;78640:67;78704:2;78699:3;78640:67;:::i;:::-;78633:74;;78716:93;78805:3;78716:93;:::i;:::-;78834:2;78829:3;78825:12;78818:19;;78477:366;;;:::o;78849:639::-;79071:4;79109:2;79098:9;79094:18;79086:26;;79158:9;79152:4;79148:20;79144:1;79133:9;79129:17;79122:47;79186:131;79312:4;79186:131;:::i;:::-;79178:139;;79327:72;79395:2;79384:9;79380:18;79371:6;79327:72;:::i;:::-;79409;79477:2;79466:9;79462:18;79453:6;79409:72;:::i;:::-;78849:639;;;;;:::o;79494:98::-;79545:6;79579:5;79573:12;79563:22;;79494:98;;;:::o;79598:386::-;79702:3;79730:38;79762:5;79730:38;:::i;:::-;79784:88;79865:6;79860:3;79784:88;:::i;:::-;79777:95;;79881:65;79939:6;79934:3;79927:4;79920:5;79916:16;79881:65;:::i;:::-;79971:6;79966:3;79962:16;79955:23;;79706:278;79598:386;;;;:::o;79990:271::-;80120:3;80142:93;80231:3;80222:6;80142:93;:::i;:::-;80135:100;;80252:3;80245:10;;79990:271;;;;:::o;80267:79::-;80306:7;80335:5;80324:16;;80267:79;;;:::o;80352:157::-;80457:45;80477:24;80495:5;80477:24;:::i;:::-;80457:45;:::i;:::-;80452:3;80445:58;80352:157;;:::o;80515:256::-;80627:3;80642:75;80713:3;80704:6;80642:75;:::i;:::-;80742:2;80737:3;80733:12;80726:19;;80762:3;80755:10;;80515:256;;;;:::o",
                "storageLayout": {
                    "storage": [
                        {
                            "astId": 4220,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "8192",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "staticArrayBaseType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "32",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                },
                                "staticArraySize": "256",
                                "type": "StaticArray"
                            },
                            "label": "__gap_persistent",
                            "offset": 0,
                            "slot": "0",
                            "type": "t_array(t_uint256)256_storage"
                        },
                        {
                            "astId": 2799,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "dynamicArrayBaseType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "128",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "astId": 11874,
                                    "canonicalId": "contracts/production/interfaces/ICosmicSignatureGameStorage.sol|ICosmicSignatureGameStorage.EthDonationWithInfoRecord",
                                    "containingContract": "ICosmicSignatureGameStorage",
                                    "structMembers": [
                                        {
                                            "name": "roundNum",
                                            "type": {
                                                "annotations": [
                                                    {
                                                        "numberOfBytes": "32",
                                                        "offset": 0,
                                                        "slot": "0",
                                                        "type": "StorageAnnotation"
                                                    }
                                                ],
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "donorAddress",
                                            "type": {
                                                "annotations": [
                                                    {
                                                        "numberOfBytes": "20",
                                                        "offset": 0,
                                                        "slot": "1",
                                                        "type": "StorageAnnotation"
                                                    }
                                                ],
                                                "primitiveName": "address",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "amount",
                                            "type": {
                                                "annotations": [
                                                    {
                                                        "numberOfBytes": "32",
                                                        "offset": 0,
                                                        "slot": "2",
                                                        "type": "StorageAnnotation"
                                                    }
                                                ],
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "data",
                                            "type": {
                                                "annotations": [
                                                    {
                                                        "numberOfBytes": "32",
                                                        "offset": 0,
                                                        "slot": "3",
                                                        "type": "StorageAnnotation"
                                                    }
                                                ],
                                                "type": "StringType"
                                            }
                                        }
                                    ],
                                    "structName": "EthDonationWithInfoRecord",
                                    "type": "UserDefinedStruct"
                                },
                                "type": "Array"
                            },
                            "label": "ethDonationWithInfoRecords",
                            "offset": 0,
                            "slot": "256",
                            "type": "t_array(t_struct(EthDonationWithInfoRecord)11874_storage)dyn_storage"
                        },
                        {
                            "astId": 2802,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "20",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "address",
                                "type": "Primitive"
                            },
                            "label": "lastBidderAddress",
                            "offset": 0,
                            "slot": "257",
                            "type": "t_address"
                        },
                        {
                            "astId": 2805,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "20",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "address",
                                "type": "Primitive"
                            },
                            "label": "lastCstBidderAddress",
                            "offset": 0,
                            "slot": "258",
                            "type": "t_address"
                        },
                        {
                            "astId": 2811,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "mappingKeyType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "32",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                },
                                "mappingValueType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "64",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "astId": 11882,
                                    "canonicalId": "contracts/production/interfaces/ICosmicSignatureGameStorage.sol|ICosmicSignatureGameStorage.BidderAddresses",
                                    "containingContract": "ICosmicSignatureGameStorage",
                                    "structMembers": [
                                        {
                                            "name": "numItems",
                                            "type": {
                                                "annotations": [
                                                    {
                                                        "numberOfBytes": "32",
                                                        "offset": 0,
                                                        "slot": "0",
                                                        "type": "StorageAnnotation"
                                                    }
                                                ],
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "items",
                                            "type": {
                                                "annotations": [
                                                    {
                                                        "numberOfBytes": "32",
                                                        "offset": 0,
                                                        "slot": "1",
                                                        "type": "StorageAnnotation"
                                                    }
                                                ],
                                                "mappingKeyType": {
                                                    "annotations": [
                                                        {
                                                            "numberOfBytes": "32",
                                                            "type": "StorageAnnotation"
                                                        }
                                                    ],
                                                    "primitiveName": "uint256",
                                                    "type": "Primitive"
                                                },
                                                "mappingValueType": {
                                                    "annotations": [
                                                        {
                                                            "numberOfBytes": "20",
                                                            "type": "StorageAnnotation"
                                                        }
                                                    ],
                                                    "primitiveName": "address",
                                                    "type": "Primitive"
                                                },
                                                "type": "Mapping"
                                            }
                                        }
                                    ],
                                    "structName": "BidderAddresses",
                                    "type": "UserDefinedStruct"
                                },
                                "type": "Mapping"
                            },
                            "label": "bidderAddresses",
                            "offset": 0,
                            "slot": "259",
                            "type": "t_mapping(t_uint256,t_struct(BidderAddresses)11882_storage)"
                        },
                        {
                            "astId": 2819,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "mappingKeyType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "32",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                },
                                "mappingValueType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "32",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "mappingKeyType": {
                                        "annotations": [
                                            {
                                                "numberOfBytes": "20",
                                                "type": "StorageAnnotation"
                                            }
                                        ],
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    },
                                    "mappingValueType": {
                                        "annotations": [
                                            {
                                                "numberOfBytes": "96",
                                                "type": "StorageAnnotation"
                                            }
                                        ],
                                        "astId": 11892,
                                        "canonicalId": "contracts/production/interfaces/ICosmicSignatureGameStorage.sol|ICosmicSignatureGameStorage.BidderInfo",
                                        "containingContract": "ICosmicSignatureGameStorage",
                                        "structMembers": [
                                            {
                                                "name": "totalSpentEthAmount",
                                                "type": {
                                                    "annotations": [
                                                        {
                                                            "numberOfBytes": "32",
                                                            "offset": 0,
                                                            "slot": "0",
                                                            "type": "StorageAnnotation"
                                                        }
                                                    ],
                                                    "primitiveName": "uint256",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "totalSpentCstAmount",
                                                "type": {
                                                    "annotations": [
                                                        {
                                                            "numberOfBytes": "32",
                                                            "offset": 0,
                                                            "slot": "1",
                                                            "type": "StorageAnnotation"
                                                        }
                                                    ],
                                                    "primitiveName": "uint256",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "lastBidTimeStamp",
                                                "type": {
                                                    "annotations": [
                                                        {
                                                            "numberOfBytes": "32",
                                                            "offset": 0,
                                                            "slot": "2",
                                                            "type": "StorageAnnotation"
                                                        }
                                                    ],
                                                    "primitiveName": "uint256",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "BidderInfo",
                                        "type": "UserDefinedStruct"
                                    },
                                    "type": "Mapping"
                                },
                                "type": "Mapping"
                            },
                            "label": "biddersInfo",
                            "offset": 0,
                            "slot": "260",
                            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(BidderInfo)11892_storage))"
                        },
                        {
                            "astId": 2822,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "20",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "address",
                                "type": "Primitive"
                            },
                            "label": "enduranceChampionAddress",
                            "offset": 0,
                            "slot": "261",
                            "type": "t_address"
                        },
                        {
                            "astId": 2825,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "enduranceChampionStartTimeStamp",
                            "offset": 0,
                            "slot": "262",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 2828,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "enduranceChampionDuration",
                            "offset": 0,
                            "slot": "263",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 2830,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "prevEnduranceChampionDuration",
                            "offset": 0,
                            "slot": "264",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 2833,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "20",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "address",
                                "type": "Primitive"
                            },
                            "label": "chronoWarriorAddress",
                            "offset": 0,
                            "slot": "265",
                            "type": "t_address"
                        },
                        {
                            "astId": 2836,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "chronoWarriorDuration",
                            "offset": 0,
                            "slot": "266",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 2839,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "roundNum",
                            "offset": 0,
                            "slot": "267",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 2842,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "delayDurationBeforeRoundActivation",
                            "offset": 0,
                            "slot": "268",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 2845,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "roundActivationTime",
                            "offset": 0,
                            "slot": "269",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 2848,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "ethDutchAuctionDurationDivisor",
                            "offset": 0,
                            "slot": "270",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 2851,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "ethDutchAuctionBeginningBidPrice",
                            "offset": 0,
                            "slot": "271",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 2854,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "ethDutchAuctionEndingBidPriceDivisor",
                            "offset": 0,
                            "slot": "272",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 2857,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "nextEthBidPrice",
                            "offset": 0,
                            "slot": "273",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 2860,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "ethBidPriceIncreaseDivisor",
                            "offset": 0,
                            "slot": "274",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 2863,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "ethBidRefundAmountInGasMinLimit",
                            "offset": 0,
                            "slot": "275",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 2866,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "cstDutchAuctionBeginningTimeStamp",
                            "offset": 0,
                            "slot": "276",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 2869,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "cstDutchAuctionDurationDivisor",
                            "offset": 0,
                            "slot": "277",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 2872,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "cstDutchAuctionBeginningBidPrice",
                            "offset": 0,
                            "slot": "278",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 2875,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "nextRoundFirstCstDutchAuctionBeginningBidPrice",
                            "offset": 0,
                            "slot": "279",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 2878,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "cstDutchAuctionBeginningBidPriceMinLimit",
                            "offset": 0,
                            "slot": "280",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 2883,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "mappingKeyType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "32",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                },
                                "mappingValueType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "32",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                },
                                "type": "Mapping"
                            },
                            "label": "usedRandomWalkNfts",
                            "offset": 0,
                            "slot": "281",
                            "type": "t_mapping(t_uint256,t_uint256)"
                        },
                        {
                            "astId": 2886,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "bidMessageLengthMaxLimit",
                            "offset": 0,
                            "slot": "282",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 2889,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "cstRewardAmountForBidding",
                            "offset": 0,
                            "slot": "283",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 2892,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "cstPrizeAmountMultiplier",
                            "offset": 0,
                            "slot": "284",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 2895,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "chronoWarriorEthPrizeAmountPercentage",
                            "offset": 0,
                            "slot": "285",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 2898,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "raffleTotalEthPrizeAmountForBiddersPercentage",
                            "offset": 0,
                            "slot": "286",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 2901,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "numRaffleEthPrizesForBidders",
                            "offset": 0,
                            "slot": "287",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 2904,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "numRaffleCosmicSignatureNftsForBidders",
                            "offset": 0,
                            "slot": "288",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 2907,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "numRaffleCosmicSignatureNftsForRandomWalkNftStakers",
                            "offset": 0,
                            "slot": "289",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 2910,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "cosmicSignatureNftStakingTotalEthRewardAmountPercentage",
                            "offset": 0,
                            "slot": "290",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 2913,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "initialDurationUntilMainPrizeDivisor",
                            "offset": 0,
                            "slot": "291",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 2916,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "mainPrizeTime",
                            "offset": 0,
                            "slot": "292",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 2919,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "mainPrizeTimeIncrementInMicroSeconds",
                            "offset": 0,
                            "slot": "293",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 2922,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "mainPrizeTimeIncrementIncreaseDivisor",
                            "offset": 0,
                            "slot": "294",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 2925,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "timeoutDurationToClaimMainPrize",
                            "offset": 0,
                            "slot": "295",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 2928,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "mainEthPrizeAmountPercentage",
                            "offset": 0,
                            "slot": "296",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 2932,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "20",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "contractName": "CosmicSignatureToken",
                                "type": "Contract"
                            },
                            "label": "token",
                            "offset": 0,
                            "slot": "297",
                            "type": "t_contract(CosmicSignatureToken)9312"
                        },
                        {
                            "astId": 2936,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "20",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "contractName": "RandomWalkNFT",
                                "type": "Contract"
                            },
                            "label": "randomWalkNft",
                            "offset": 0,
                            "slot": "298",
                            "type": "t_contract(RandomWalkNFT)10866"
                        },
                        {
                            "astId": 2940,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "20",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "contractName": "CosmicSignatureNft",
                                "type": "Contract"
                            },
                            "label": "nft",
                            "offset": 0,
                            "slot": "299",
                            "type": "t_contract(CosmicSignatureNft)8889"
                        },
                        {
                            "astId": 2944,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "20",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "contractName": "PrizesWallet",
                                "type": "Contract"
                            },
                            "label": "prizesWallet",
                            "offset": 0,
                            "slot": "300",
                            "type": "t_contract(PrizesWallet)10315"
                        },
                        {
                            "astId": 2948,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "20",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "contractName": "StakingWalletRandomWalkNft",
                                "type": "Contract"
                            },
                            "label": "stakingWalletRandomWalkNft",
                            "offset": 0,
                            "slot": "301",
                            "type": "t_contract(StakingWalletRandomWalkNft)11860"
                        },
                        {
                            "astId": 2952,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "20",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "contractName": "StakingWalletCosmicSignatureNft",
                                "type": "Contract"
                            },
                            "label": "stakingWalletCosmicSignatureNft",
                            "offset": 0,
                            "slot": "302",
                            "type": "t_contract(StakingWalletCosmicSignatureNft)11406"
                        },
                        {
                            "astId": 2955,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "20",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "address",
                                "type": "Primitive"
                            },
                            "label": "marketingWallet",
                            "offset": 0,
                            "slot": "303",
                            "type": "t_address"
                        },
                        {
                            "astId": 2958,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "marketingWalletCstContributionAmount",
                            "offset": 0,
                            "slot": "304",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 2961,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "20",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "address",
                                "type": "Primitive"
                            },
                            "label": "charityAddress",
                            "offset": 0,
                            "slot": "305",
                            "type": "t_address"
                        },
                        {
                            "astId": 2964,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "charityEthDonationAmountPercentage",
                            "offset": 0,
                            "slot": "306",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 2971,
                            "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "0",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "staticArrayBaseType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "32",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                },
                                "staticArraySize": "0",
                                "type": "StaticArray"
                            },
                            "label": "__gap_persistent",
                            "offset": 0,
                            "slot": "307",
                            "type": "t_array(t_uint256)57896044618658097711785492504343953926634992332820282019728792003956564819968_storage"
                        }
                    ],
                    "types": {
                        "t_address": {
                            "encoding": "inplace",
                            "label": "address",
                            "numberOfBytes": "20"
                        },
                        "t_array(t_struct(EthDonationWithInfoRecord)11874_storage)dyn_storage": {
                            "base": "t_struct(EthDonationWithInfoRecord)11874_storage",
                            "encoding": "dynamic_array",
                            "label": "struct ICosmicSignatureGameStorage.EthDonationWithInfoRecord[]",
                            "numberOfBytes": "32"
                        },
                        "t_array(t_uint256)256_storage": {
                            "base": "t_uint256",
                            "encoding": "inplace",
                            "label": "uint256[256]",
                            "numberOfBytes": "8192"
                        },
                        "t_array(t_uint256)57896044618658097711785492504343953926634992332820282019728792003956564819968_storage": {
                            "base": "t_uint256",
                            "encoding": "inplace",
                            "label": "uint256[57896044618658097711785492504343953926634992332820282019728792003956564819968]",
                            "numberOfBytes": "0"
                        },
                        "t_contract(CosmicSignatureNft)8889": {
                            "encoding": "inplace",
                            "label": "contract CosmicSignatureNft",
                            "numberOfBytes": "20"
                        },
                        "t_contract(CosmicSignatureToken)9312": {
                            "encoding": "inplace",
                            "label": "contract CosmicSignatureToken",
                            "numberOfBytes": "20"
                        },
                        "t_contract(PrizesWallet)10315": {
                            "encoding": "inplace",
                            "label": "contract PrizesWallet",
                            "numberOfBytes": "20"
                        },
                        "t_contract(RandomWalkNFT)10866": {
                            "encoding": "inplace",
                            "label": "contract RandomWalkNFT",
                            "numberOfBytes": "20"
                        },
                        "t_contract(StakingWalletCosmicSignatureNft)11406": {
                            "encoding": "inplace",
                            "label": "contract StakingWalletCosmicSignatureNft",
                            "numberOfBytes": "20"
                        },
                        "t_contract(StakingWalletRandomWalkNft)11860": {
                            "encoding": "inplace",
                            "label": "contract StakingWalletRandomWalkNft",
                            "numberOfBytes": "20"
                        },
                        "t_mapping(t_address,t_struct(BidderInfo)11892_storage)": {
                            "encoding": "mapping",
                            "key": "t_address",
                            "label": "mapping(address => struct ICosmicSignatureGameStorage.BidderInfo)",
                            "numberOfBytes": "32",
                            "value": "t_struct(BidderInfo)11892_storage"
                        },
                        "t_mapping(t_uint256,t_address)": {
                            "encoding": "mapping",
                            "key": "t_uint256",
                            "label": "mapping(uint256 => address)",
                            "numberOfBytes": "32",
                            "value": "t_address"
                        },
                        "t_mapping(t_uint256,t_mapping(t_address,t_struct(BidderInfo)11892_storage))": {
                            "encoding": "mapping",
                            "key": "t_uint256",
                            "label": "mapping(uint256 => mapping(address => struct ICosmicSignatureGameStorage.BidderInfo))",
                            "numberOfBytes": "32",
                            "value": "t_mapping(t_address,t_struct(BidderInfo)11892_storage)"
                        },
                        "t_mapping(t_uint256,t_struct(BidderAddresses)11882_storage)": {
                            "encoding": "mapping",
                            "key": "t_uint256",
                            "label": "mapping(uint256 => struct ICosmicSignatureGameStorage.BidderAddresses)",
                            "numberOfBytes": "32",
                            "value": "t_struct(BidderAddresses)11882_storage"
                        },
                        "t_mapping(t_uint256,t_uint256)": {
                            "encoding": "mapping",
                            "key": "t_uint256",
                            "label": "mapping(uint256 => uint256)",
                            "numberOfBytes": "32",
                            "value": "t_uint256"
                        },
                        "t_string_storage": {
                            "encoding": "bytes",
                            "label": "string",
                            "numberOfBytes": "32"
                        },
                        "t_struct(BidderAddresses)11882_storage": {
                            "encoding": "inplace",
                            "label": "struct ICosmicSignatureGameStorage.BidderAddresses",
                            "members": [
                                {
                                    "astId": 11877,
                                    "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                                    "label": "numItems",
                                    "offset": 0,
                                    "slot": "0",
                                    "type": "t_uint256"
                                },
                                {
                                    "astId": 11881,
                                    "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                                    "label": "items",
                                    "offset": 0,
                                    "slot": "1",
                                    "type": "t_mapping(t_uint256,t_address)"
                                }
                            ],
                            "numberOfBytes": "64"
                        },
                        "t_struct(BidderInfo)11892_storage": {
                            "encoding": "inplace",
                            "label": "struct ICosmicSignatureGameStorage.BidderInfo",
                            "members": [
                                {
                                    "astId": 11886,
                                    "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                                    "label": "totalSpentEthAmount",
                                    "offset": 0,
                                    "slot": "0",
                                    "type": "t_uint256"
                                },
                                {
                                    "astId": 11889,
                                    "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                                    "label": "totalSpentCstAmount",
                                    "offset": 0,
                                    "slot": "1",
                                    "type": "t_uint256"
                                },
                                {
                                    "astId": 11891,
                                    "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                                    "label": "lastBidTimeStamp",
                                    "offset": 0,
                                    "slot": "2",
                                    "type": "t_uint256"
                                }
                            ],
                            "numberOfBytes": "96"
                        },
                        "t_struct(EthDonationWithInfoRecord)11874_storage": {
                            "encoding": "inplace",
                            "label": "struct ICosmicSignatureGameStorage.EthDonationWithInfoRecord",
                            "members": [
                                {
                                    "astId": 11865,
                                    "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                                    "label": "roundNum",
                                    "offset": 0,
                                    "slot": "0",
                                    "type": "t_uint256"
                                },
                                {
                                    "astId": 11867,
                                    "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                                    "label": "donorAddress",
                                    "offset": 0,
                                    "slot": "1",
                                    "type": "t_address"
                                },
                                {
                                    "astId": 11870,
                                    "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                                    "label": "amount",
                                    "offset": 0,
                                    "slot": "2",
                                    "type": "t_uint256"
                                },
                                {
                                    "astId": 11873,
                                    "contract": "/home/niko/eth/dev/b/todays/cg_certora/Cosmic-Signature/certora/.certora_internal/25_06_04_18_31_50_865/.certora_sources/contracts/production/CosmicSignatureGame.sol:CosmicSignatureGame",
                                    "label": "data",
                                    "offset": 0,
                                    "slot": "3",
                                    "type": "t_string_storage"
                                }
                            ],
                            "numberOfBytes": "128"
                        },
                        "t_uint256": {
                            "encoding": "inplace",
                            "label": "uint256",
                            "numberOfBytes": "32"
                        }
                    }
                },
                "transientStorageLayout": {
                    "storage": [],
                    "types": null
                },
                "varmap": ""
            }
        ],
        "legacyStructLinking": {},
        "library_addresses": [],
        "origSourceDir": ".pre_autofinders.0",
        "primary_contract": "CosmicSignatureGame",
        "primary_contract_address": "00000000ce4604a0000000000000000000000096",
        "prototypeFor": [],
        "sdc_name": "CosmicSignatureGame.sol_0",
        "sourceDir": ".post_autofinders.0",
        "srclist": {
            "0": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
            "1": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
            "2": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
            "3": "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
            "4": "node_modules/@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardTransientUpgradeable.sol",
            "5": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
            "6": "node_modules/@openzeppelin/contracts/governance/utils/IVotes.sol",
            "7": "node_modules/@openzeppelin/contracts/governance/utils/Votes.sol",
            "8": "node_modules/@openzeppelin/contracts/interfaces/IERC1363.sol",
            "9": "node_modules/@openzeppelin/contracts/interfaces/IERC165.sol",
            "10": "node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol",
            "11": "node_modules/@openzeppelin/contracts/interfaces/IERC20.sol",
            "12": "node_modules/@openzeppelin/contracts/interfaces/IERC5267.sol",
            "13": "node_modules/@openzeppelin/contracts/interfaces/IERC5805.sol",
            "14": "node_modules/@openzeppelin/contracts/interfaces/IERC6372.sol",
            "15": "node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
            "16": "node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
            "17": "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
            "18": "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
            "19": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
            "20": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
            "21": "node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
            "22": "node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
            "23": "node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol",
            "24": "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
            "25": "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
            "26": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
            "27": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
            "28": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
            "29": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
            "30": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
            "31": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
            "32": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
            "33": "node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol",
            "34": "node_modules/@openzeppelin/contracts/utils/Address.sol",
            "35": "node_modules/@openzeppelin/contracts/utils/Context.sol",
            "36": "node_modules/@openzeppelin/contracts/utils/Errors.sol",
            "37": "node_modules/@openzeppelin/contracts/utils/Nonces.sol",
            "38": "node_modules/@openzeppelin/contracts/utils/Panic.sol",
            "39": "node_modules/@openzeppelin/contracts/utils/ShortStrings.sol",
            "40": "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol",
            "41": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
            "42": "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol",
            "43": "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
            "44": "node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol",
            "45": "node_modules/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
            "46": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
            "47": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
            "48": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
            "49": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
            "50": "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
            "51": "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol",
            "52": "node_modules/@openzeppelin/contracts/utils/types/Time.sol",
            "53": "contracts/production/AddressValidator.sol",
            "54": "contracts/production/BidStatistics.sol",
            "55": "contracts/production/Bidding.sol",
            "56": "contracts/production/BiddingBase.sol",
            "57": "contracts/production/CosmicSignatureGame.sol",
            "58": "contracts/production/CosmicSignatureGameStorage.sol",
            "59": "contracts/production/CosmicSignatureNft.sol",
            "60": "contracts/production/CosmicSignatureToken.sol",
            "61": "contracts/production/EthDonations.sol",
            "62": "contracts/production/MainPrize.sol",
            "63": "contracts/production/MainPrizeBase.sol",
            "64": "contracts/production/NftDonations.sol",
            "65": "contracts/production/OwnableUpgradeableWithReservedStorageGaps.sol",
            "66": "contracts/production/PrizesWallet.sol",
            "67": "contracts/production/RandomWalkNFT.sol",
            "68": "contracts/production/SecondaryPrizes.sol",
            "69": "contracts/production/StakingWalletCosmicSignatureNft.sol",
            "70": "contracts/production/StakingWalletNftBase.sol",
            "71": "contracts/production/StakingWalletRandomWalkNft.sol",
            "72": "contracts/production/SystemManagement.sol",
            "73": "contracts/production/interfaces/IAddressValidator.sol",
            "74": "contracts/production/interfaces/IBidStatistics.sol",
            "75": "contracts/production/interfaces/IBidding.sol",
            "76": "contracts/production/interfaces/IBiddingBase.sol",
            "77": "contracts/production/interfaces/ICosmicSignatureGame.sol",
            "78": "contracts/production/interfaces/ICosmicSignatureGameStorage.sol",
            "79": "contracts/production/interfaces/ICosmicSignatureNft.sol",
            "80": "contracts/production/interfaces/ICosmicSignatureToken.sol",
            "81": "contracts/production/interfaces/IEthDonations.sol",
            "82": "contracts/production/interfaces/IMainPrize.sol",
            "83": "contracts/production/interfaces/IMainPrizeBase.sol",
            "84": "contracts/production/interfaces/INftDonations.sol",
            "85": "contracts/production/interfaces/IPrizesWallet.sol",
            "86": "contracts/production/interfaces/IRandomWalkNFT.sol",
            "87": "contracts/production/interfaces/ISecondaryPrizes.sol",
            "88": "contracts/production/interfaces/IStakingWalletCosmicSignatureNft.sol",
            "89": "contracts/production/interfaces/IStakingWalletNftBase.sol",
            "90": "contracts/production/interfaces/IStakingWalletRandomWalkNft.sol",
            "91": "contracts/production/interfaces/ISystemEvents.sol",
            "92": "contracts/production/interfaces/ISystemManagement.sol",
            "93": "contracts/production/libraries/CosmicSignatureConstants.sol",
            "94": "contracts/production/libraries/CosmicSignatureErrors.sol",
            "95": "contracts/production/libraries/CosmicSignatureEvents.sol",
            "96": "contracts/production/libraries/CryptographyHelpers.sol",
            "97": "contracts/production/libraries/RandomNumberHelpers.sol"
        },
        "state": {},
        "structLinkingInfo": {}
    }
}