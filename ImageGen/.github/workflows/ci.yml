name: CI

on:
  push:
    branches: [ main, image_improvement ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-D warnings"

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      
      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Cache cargo index
        uses: actions/cache@v3
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Cache cargo build
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Check formatting
        run: cargo fmt --all -- --check
      
      - name: Run clippy
        run: cargo clippy --all-features --all-targets -- -D warnings
      
      - name: Build
        run: cargo build --verbose
      
      - name: Run tests
        run: cargo test --verbose
  
  nightly:
    name: Nightly checks
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Rust nightly
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt, clippy
      
      - name: Run clippy with pedantic lints
        run: cargo clippy --all-features --all-targets -- -W clippy::pedantic -W clippy::nursery
  
  rust-analyzer:
    name: rust-analyzer diagnostics
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rust-analyzer
      
      - name: Install rust-analyzer
        run: |
          mkdir -p ~/.local/bin
          curl -L https://github.com/rust-lang/rust-analyzer/releases/latest/download/rust-analyzer-x86_64-unknown-linux-gnu.gz | gunzip -c - > ~/.local/bin/rust-analyzer
          chmod +x ~/.local/bin/rust-analyzer
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      
      - name: Check with rust-analyzer
        run: |
          # Generate rust-analyzer diagnostics
          rust-analyzer diagnostics . 2>&1 | tee diagnostics.log
          
          # Check for unused variables/parameters
          if grep -E "(unused variable|unused parameter|never used)" diagnostics.log; then
            echo "::error::Found unused variables or parameters"
            exit 1
          fi
          
          # Check for other warnings
          if grep -E "(warning:|Warning:)" diagnostics.log; then
            echo "::error::Found warnings in rust-analyzer output"
            exit 1
          fi
  
  check-dependencies:
    name: Check dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
      
      - name: Install cargo-udeps
        run: |
          # Install cargo-udeps to check for unused dependencies
          cargo install cargo-udeps --locked
      
      - name: Check for unused dependencies
        run: cargo +nightly udeps --all-targets
      
      - name: Install cargo-audit
        run: cargo install cargo-audit
      
      - name: Security audit
        run: cargo audit 